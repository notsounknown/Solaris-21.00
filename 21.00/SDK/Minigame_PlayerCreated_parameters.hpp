#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Minigame_PlayerCreated

#include "Basic.hpp"

#include "ItemDropBehavior_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ShowScoreboardPanel
// 0x0008 (0x0008 - 0x0000)
struct Minigame_PlayerCreated_C_ShowScoreboardPanel final
{
public:
	bool                                          ShowCustomScoreboard;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Custom_Scoreboard_Display_Time;                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_ShowScoreboardPanel) == 0x000004, "Wrong alignment on Minigame_PlayerCreated_C_ShowScoreboardPanel");
static_assert(sizeof(Minigame_PlayerCreated_C_ShowScoreboardPanel) == 0x000008, "Wrong size on Minigame_PlayerCreated_C_ShowScoreboardPanel");
static_assert(offsetof(Minigame_PlayerCreated_C_ShowScoreboardPanel, ShowCustomScoreboard) == 0x000000, "Member 'Minigame_PlayerCreated_C_ShowScoreboardPanel::ShowCustomScoreboard' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShowScoreboardPanel, Custom_Scoreboard_Display_Time) == 0x000004, "Member 'Minigame_PlayerCreated_C_ShowScoreboardPanel::Custom_Scoreboard_Display_Time' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ShouldShowScoreboard
// 0x0040 (0x0040 - 0x0000)
struct Minigame_PlayerCreated_C_ShouldShowScoreboard final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldShow;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerSpectating*        K2Node_DynamicCast_AsFort_Player_Controller_Spectating; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInMinigame_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_ShouldShowScoreboard) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_ShouldShowScoreboard");
static_assert(sizeof(Minigame_PlayerCreated_C_ShouldShowScoreboard) == 0x000040, "Wrong size on Minigame_PlayerCreated_C_ShouldShowScoreboard");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, PlayerController) == 0x000000, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::PlayerController' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, bResult) == 0x000008, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::bResult' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, bShouldShow) == 0x000009, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::bShouldShow' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_AsFort_Player_Controller_Spectating) == 0x000010, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_AsFort_Player_Controller_Spectating' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000020, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_AsFort_Player_State) == 0x000030, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, CallFunc_IsPlayerInMinigame_ReturnValue) == 0x000039, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::CallFunc_IsPlayerInMinigame_ReturnValue' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.SetTeamOrRefreshVoiceChannel
// 0x0010 (0x0010 - 0x0000)
struct Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamIndex;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTeamForPlayer_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel");
static_assert(sizeof(Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel) == 0x000010, "Wrong size on Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel");
static_assert(offsetof(Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel, PlayerState) == 0x000000, "Member 'Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel::PlayerState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel, TeamIndex) == 0x000008, "Member 'Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel::TeamIndex' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel, CallFunc_SetTeamForPlayer_ReturnValue) == 0x000009, "Member 'Minigame_PlayerCreated_C_SetTeamOrRefreshVoiceChannel::CallFunc_SetTeamForPlayer_ReturnValue' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Minigame_PlayerCreated_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Minigame_PlayerCreated_C_ReceiveEndPlay");
static_assert(sizeof(Minigame_PlayerCreated_C_ReceiveEndPlay) == 0x000001, "Wrong size on Minigame_PlayerCreated_C_ReceiveEndPlay");
static_assert(offsetof(Minigame_PlayerCreated_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Minigame_PlayerCreated_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.Play Minigame State Audio
// 0x0001 (0x0001 - 0x0000)
struct Minigame_PlayerCreated_C_Play_Minigame_State_Audio final
{
public:
	EFortMinigameState                            Minigame_State;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_Play_Minigame_State_Audio) == 0x000001, "Wrong alignment on Minigame_PlayerCreated_C_Play_Minigame_State_Audio");
static_assert(sizeof(Minigame_PlayerCreated_C_Play_Minigame_State_Audio) == 0x000001, "Wrong size on Minigame_PlayerCreated_C_Play_Minigame_State_Audio");
static_assert(offsetof(Minigame_PlayerCreated_C_Play_Minigame_State_Audio, Minigame_State) == 0x000000, "Member 'Minigame_PlayerCreated_C_Play_Minigame_State_Audio::Minigame_State' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.OnPlayerRemoved
// 0x0030 (0x0030 - 0x0000)
struct Minigame_PlayerCreated_C_OnPlayerRemoved final
{
public:
	struct FUniqueNetIdRepl                       UniqueNetId;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsLocalPlayer;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_OnPlayerRemoved) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_OnPlayerRemoved");
static_assert(sizeof(Minigame_PlayerCreated_C_OnPlayerRemoved) == 0x000030, "Wrong size on Minigame_PlayerCreated_C_OnPlayerRemoved");
static_assert(offsetof(Minigame_PlayerCreated_C_OnPlayerRemoved, UniqueNetId) == 0x000000, "Member 'Minigame_PlayerCreated_C_OnPlayerRemoved::UniqueNetId' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_OnPlayerRemoved, bIsLocalPlayer) == 0x000028, "Member 'Minigame_PlayerCreated_C_OnPlayerRemoved::bIsLocalPlayer' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.OnPlayerAdded
// 0x0030 (0x0030 - 0x0000)
struct Minigame_PlayerCreated_C_OnPlayerAdded final
{
public:
	struct FUniqueNetIdRepl                       UniqueNetId;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsLocalPlayer;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_OnPlayerAdded) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_OnPlayerAdded");
static_assert(sizeof(Minigame_PlayerCreated_C_OnPlayerAdded) == 0x000030, "Wrong size on Minigame_PlayerCreated_C_OnPlayerAdded");
static_assert(offsetof(Minigame_PlayerCreated_C_OnPlayerAdded, UniqueNetId) == 0x000000, "Member 'Minigame_PlayerCreated_C_OnPlayerAdded::UniqueNetId' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_OnPlayerAdded, bIsLocalPlayer) == 0x000028, "Member 'Minigame_PlayerCreated_C_OnPlayerAdded::bIsLocalPlayer' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC
// 0x0008 (0x0008 - 0x0000)
struct Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC");
static_assert(sizeof(Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC) == 0x000008, "Wrong size on Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC");
static_assert(offsetof(Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC, UserWidget) == 0x000000, "Member 'Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC::UserWidget' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.IsPropHuntGame
// 0x0048 (0x0048 - 0x0000)
struct Minigame_PlayerCreated_C_IsPropHuntGame final
{
public:
	bool                                          IsPropHuntGame_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               CallFunc_GetParticipatingPlayers_OutPlayers;       // 0x0018(0x0010)(ReferenceParm)
	class AFortPlayerState*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerAHider_IsPlayerAHider;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_IsPropHuntGame) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_IsPropHuntGame");
static_assert(sizeof(Minigame_PlayerCreated_C_IsPropHuntGame) == 0x000048, "Wrong size on Minigame_PlayerCreated_C_IsPropHuntGame");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, IsPropHuntGame_0) == 0x000000, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::IsPropHuntGame_0' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000011, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_GetParticipatingPlayers_OutPlayers) == 0x000018, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_GetParticipatingPlayers_OutPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_Array_Get_Item) == 0x000028, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000038, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPropHuntGame, CallFunc_IsPlayerAHider_IsPlayerAHider) == 0x000041, "Member 'Minigame_PlayerCreated_C_IsPropHuntGame::CallFunc_IsPlayerAHider_IsPlayerAHider' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.IsPlayerAHider
// 0x0040 (0x0040 - 0x0000)
struct Minigame_PlayerCreated_C_IsPlayerAHider final
{
public:
	class APlayerController*                      Player_Controller;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerAHider_0;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateAthena*                 K2Node_DynamicCast_AsFort_Player_State_Athena;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerDead_ReturnValue;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_IsPlayerAHider) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_IsPlayerAHider");
static_assert(sizeof(Minigame_PlayerCreated_C_IsPlayerAHider) == 0x000040, "Wrong size on Minigame_PlayerCreated_C_IsPlayerAHider");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, Player_Controller) == 0x000000, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::Player_Controller' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, IsPlayerAHider_0) == 0x000008, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::IsPlayerAHider_0' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000010, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000020, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, K2Node_DynamicCast_AsFort_Player_State_Athena) == 0x000028, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::K2Node_DynamicCast_AsFort_Player_State_Athena' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, CallFunc_IsPlayerDead_ReturnValue) == 0x000032, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::CallFunc_IsPlayerDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue) == 0x000034, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsPlayerAHider, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'Minigame_PlayerCreated_C_IsPlayerAHider::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.IndexToTeamIndex
// 0x0008 (0x0008 - 0x0000)
struct Minigame_PlayerCreated_C_IndexToTeamIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamIndex;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_IndexToTeamIndex) == 0x000004, "Wrong alignment on Minigame_PlayerCreated_C_IndexToTeamIndex");
static_assert(sizeof(Minigame_PlayerCreated_C_IndexToTeamIndex) == 0x000008, "Wrong size on Minigame_PlayerCreated_C_IndexToTeamIndex");
static_assert(offsetof(Minigame_PlayerCreated_C_IndexToTeamIndex, Index_0) == 0x000000, "Member 'Minigame_PlayerCreated_C_IndexToTeamIndex::Index_0' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IndexToTeamIndex, TeamIndex) == 0x000004, "Member 'Minigame_PlayerCreated_C_IndexToTeamIndex::TeamIndex' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IndexToTeamIndex, CallFunc_MakeLiteralByte_ReturnValue) == 0x000005, "Member 'Minigame_PlayerCreated_C_IndexToTeamIndex::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IndexToTeamIndex, CallFunc_Conv_IntToByte_ReturnValue) == 0x000006, "Member 'Minigame_PlayerCreated_C_IndexToTeamIndex::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IndexToTeamIndex, CallFunc_Add_ByteByte_ReturnValue) == 0x000007, "Member 'Minigame_PlayerCreated_C_IndexToTeamIndex::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.HandleStateChanged
// 0x0010 (0x0010 - 0x0000)
struct Minigame_PlayerCreated_C_HandleStateChanged final
{
public:
	class AFortMinigame*                          ChangedMinigame;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            MinigameState;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_HandleStateChanged) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_HandleStateChanged");
static_assert(sizeof(Minigame_PlayerCreated_C_HandleStateChanged) == 0x000010, "Wrong size on Minigame_PlayerCreated_C_HandleStateChanged");
static_assert(offsetof(Minigame_PlayerCreated_C_HandleStateChanged, ChangedMinigame) == 0x000000, "Member 'Minigame_PlayerCreated_C_HandleStateChanged::ChangedMinigame' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HandleStateChanged, MinigameState) == 0x000008, "Member 'Minigame_PlayerCreated_C_HandleStateChanged::MinigameState' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.GetRandomlyOrderedParticipatingPlayers
// 0x0068 (0x0068 - 0x0000)
struct Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers final
{
public:
	TArray<class AFortPlayerState*>               RandomizedPlayers;                                 // 0x0000(0x0010)(Parm, OutParm)
	int32                                         RandomPlayerIndex;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               RandomizedParticipatingPlayers;                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AFortPlayerState*>               ParticipatingPlayersCopy;                          // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerState*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               CallFunc_GetParticipatingPlayers_OutPlayers;       // 0x0058(0x0010)(ReferenceParm)
};
static_assert(alignof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers");
static_assert(sizeof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers) == 0x000068, "Wrong size on Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, RandomizedPlayers) == 0x000000, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::RandomizedPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, RandomPlayerIndex) == 0x000010, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::RandomPlayerIndex' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, RandomizedParticipatingPlayers) == 0x000018, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::RandomizedParticipatingPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, ParticipatingPlayersCopy) == 0x000028, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::ParticipatingPlayersCopy' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000044, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Array_Get_Item) == 0x000048, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_GetParticipatingPlayers_OutPlayers) == 0x000058, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_GetParticipatingPlayers_OutPlayers' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ExecuteUbergraph_Minigame_PlayerCreated
// 0x0228 (0x0228 - 0x0000)
struct Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortHideShowInterface> K2Node_DynamicCast_AsFort_Hide_Show_Interface;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_CreateWidgetAsync*     CallFunc_CreateWidgetAsync_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowScoreboard_bResult;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_UserWidget;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortHideShowInterface> K2Node_DynamicCast_AsFort_Hide_Show_Interface_1;   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowCustomScoreboard;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Custom_Scoreboard_Display_Time; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUserWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          K2Node_CustomEvent_ChangedMinigame;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            K2Node_CustomEvent_MinigameState;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_UniqueNetId_1;                  // 0x00C8(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsLocalPlayer_1;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_UniqueNetId;                    // 0x00F8(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsLocalPlayer;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInMinigameByNetId_ReturnValue;    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x1];                                      // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FUniqueNetIdRepl& UniqueNetId, bool bIsLocalPlayer)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0124(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FUniqueNetIdRepl& UniqueNetId, bool bIsLocalPlayer)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0134(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            K2Node_CustomEvent_Minigame_State;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue; // 0x0150(0x0010)(ReferenceParm)
	class AFortPlayerController*                  CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerSpectating*        K2Node_DynamicCast_AsFort_Player_Controller_Spectating; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortMinigame* Minigame, EFortMinigameState MinigameState)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x017C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInMinigame_ReturnValue;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortMinigame* Minigame, EFortMinigameState MinigameState)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0194(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               CallFunc_GetParticipatingPlayers_OutPlayers;       // 0x01A8(0x0010)(ReferenceParm)
	class AFortPlayerState*                       CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerAHider_IsPlayerAHider;            // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPropHuntGame_IsPropHuntGame;            // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3[0x1];                                      // 0x01D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               CallFunc_GetParticipatingPlayers_OutPlayers_1;     // 0x01E0(0x0010)(ReferenceParm)
	class AFortPlayerState*                       CallFunc_Array_Get_Item_2;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerAHider_IsPlayerAHider_1;          // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0214(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0220(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated");
static_assert(sizeof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated) == 0x000228, "Wrong size on Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, EntryPoint) == 0x000000, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::EntryPoint' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_AsFort_Hide_Show_Interface) == 0x000020, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_AsFort_Hide_Show_Interface' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_CreateWidgetAsync_ReturnValue) == 0x000038, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_CreateWidgetAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_object_Variable) == 0x000040, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_ShouldShowScoreboard_bResult) == 0x000052, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_ShouldShowScoreboard_bResult' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsValid_ReturnValue_2) == 0x000053, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue) == 0x000058, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000060, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Loop_Counter_Variable_2) == 0x000064, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000070, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_UserWidget) == 0x000078, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_UserWidget' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_AsFort_Hide_Show_Interface_1) == 0x000088, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_AsFort_Hide_Show_Interface_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000099, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Variable) == 0x00009C, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_ShowCustomScoreboard) == 0x0000A0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_ShowCustomScoreboard' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_Custom_Scoreboard_Display_Time) == 0x0000A4, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_Custom_Scoreboard_Display_Time' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_ChangedMinigame) == 0x0000B8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_ChangedMinigame' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_MinigameState) == 0x0000C0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_MinigameState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_SwitchEnum_CmpSuccess) == 0x0000C1, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_Event_EndPlayReason) == 0x0000C2, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_HasAuthority_ReturnValue) == 0x0000C3, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_UniqueNetId_1) == 0x0000C8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_UniqueNetId_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_bIsLocalPlayer_1) == 0x0000F0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_bIsLocalPlayer_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_UniqueNetId) == 0x0000F8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_UniqueNetId' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_bIsLocalPlayer) == 0x000120, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_bIsLocalPlayer' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsPlayerInMinigameByNetId_ReturnValue) == 0x000121, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsPlayerInMinigameByNetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Not_PreBool_ReturnValue) == 0x000122, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate_2) == 0x000124, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_BooleanAND_ReturnValue) == 0x000130, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate_3) == 0x000134, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_Minigame_State) == 0x000140, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_Minigame_State' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_SwitchEnum_CmpSuccess_1) == 0x000141, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Array_Index_Variable_2) == 0x000144, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetLocalFortPlayerControllers_ReturnValue) == 0x000150, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetLocalFortPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Array_Get_Item) == 0x000160, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_AsFort_Player_Controller_Spectating) == 0x000170, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_AsFort_Player_Controller_Spectating' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_bSuccess_2) == 0x000178, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Less_IntInt_ReturnValue_1) == 0x000179, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate_4) == 0x00017C, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_AsFort_Player_State) == 0x000188, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsPlayerInMinigame_ReturnValue) == 0x000191, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsPlayerInMinigame_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate_5) == 0x000194, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_BooleanOR_ReturnValue) == 0x0001A0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_bool_True_if_break_was_hit_Variable) == 0x0001A1, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001A2, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_BooleanAND_ReturnValue_1) == 0x0001A3, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetParticipatingPlayers_OutPlayers) == 0x0001A8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetParticipatingPlayers_OutPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x0001C8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001D0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsPlayerAHider_IsPlayerAHider) == 0x0001D1, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsPlayerAHider_IsPlayerAHider' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsPropHuntGame_IsPropHuntGame) == 0x0001D2, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsPropHuntGame_IsPropHuntGame' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001D4, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_int_Variable_1) == 0x0001D8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetParticipatingPlayers_OutPlayers_1) == 0x0001E0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetParticipatingPlayers_OutPlayers_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Array_Get_Item_2) == 0x0001F0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Array_Length_ReturnValue_2) == 0x0001F8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x000200, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Less_IntInt_ReturnValue_3) == 0x000208, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsPlayerAHider_IsPlayerAHider_1) == 0x000209, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsPlayerAHider_IsPlayerAHider_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_Add_IntInt_ReturnValue_4) == 0x00020C, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsValid_ReturnValue_4) == 0x000210, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000211, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate_6) == 0x000214, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000220, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.AssignTeams
// 0x0130 (0x0130 - 0x0000)
struct Minigame_PlayerCreated_C_AssignTeams final
{
public:
	bool                                          bAllTeamsAtCapacity;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 MaxInitTeamSizes;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<class AFortPlayerState*>               RandomlyOrderedPlayers;                            // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<int32>                                 TeamSizes;                                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentTeam;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               CallFunc_GetRandomlyOrderedParticipatingPlayers_RandomizedPlayers; // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_IndexToTeamIndex_TeamIndex;               // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxInitTeamSize_ReturnValue;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerState*>               CallFunc_GetParticipatingPlayers_OutPlayers;       // 0x00D8(0x0010)(ReferenceParm)
	class AFortPlayerState*                       CallFunc_Array_Get_Item_3;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F7[0x1];                                       // 0x00F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F[0x1];                                      // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	uint8                                         CallFunc_IndexToTeamIndex_TeamIndex_1;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_AssignTeams) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_AssignTeams");
static_assert(sizeof(Minigame_PlayerCreated_C_AssignTeams) == 0x000130, "Wrong size on Minigame_PlayerCreated_C_AssignTeams");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, bAllTeamsAtCapacity) == 0x000000, "Member 'Minigame_PlayerCreated_C_AssignTeams::bAllTeamsAtCapacity' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, MaxInitTeamSizes) == 0x000008, "Member 'Minigame_PlayerCreated_C_AssignTeams::MaxInitTeamSizes' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, RandomlyOrderedPlayers) == 0x000018, "Member 'Minigame_PlayerCreated_C_AssignTeams::RandomlyOrderedPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, TeamSizes) == 0x000028, "Member 'Minigame_PlayerCreated_C_AssignTeams::TeamSizes' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CurrentTeam) == 0x000038, "Member 'Minigame_PlayerCreated_C_AssignTeams::CurrentTeam' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Variable) == 0x000040, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_bool_Variable) == 0x000044, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_bool_True_if_break_was_hit_Variable) == 0x000051, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_MakeLiteralByte_ReturnValue) == 0x000059, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_HasAuthority_ReturnValue) == 0x00005A, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Array_Index_Variable_2) == 0x000064, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Variable_1) == 0x000068, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Loop_Counter_Variable_2) == 0x000070, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item) == 0x000078, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Loop_Counter_Variable_3) == 0x00008C, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue_4) == 0x000090, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Not_PreBool_ReturnValue_2) == 0x000094, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000095, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item_2) == 0x00009C, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_LastIndex_ReturnValue) == 0x0000A0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A5, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A6, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_BooleanAND_ReturnValue) == 0x0000A7, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_BooleanOR_ReturnValue) == 0x0000A8, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GetRandomlyOrderedParticipatingPlayers_RandomizedPlayers) == 0x0000B0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GetRandomlyOrderedParticipatingPlayers_RandomizedPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C4, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Array_Index_Variable_3) == 0x0000C8, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_IndexToTeamIndex_TeamIndex) == 0x0000CD, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_IndexToTeamIndex_TeamIndex' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GetMaxInitTeamSize_ReturnValue) == 0x0000D0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GetMaxInitTeamSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GetParticipatingPlayers_OutPlayers) == 0x0000D8, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GetParticipatingPlayers_OutPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item_3) == 0x0000E8, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GetActorTeam_ReturnValue) == 0x0000F4, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000F5, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0000F6, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000F8, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000FC, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Variable_2) == 0x000100, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item_4) == 0x000104, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Length_ReturnValue_3) == 0x000108, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00010C, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue_4) == 0x00010D, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_BooleanAND_ReturnValue_1) == 0x00010E, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, K2Node_MakeArray_Array) == 0x000110, "Member 'Minigame_PlayerCreated_C_AssignTeams::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_IndexToTeamIndex_TeamIndex_1) == 0x000120, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_IndexToTeamIndex_TeamIndex_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue_6) == 0x000124, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Percent_IntInt_ReturnValue) == 0x000128, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue_7) == 0x00012C, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ShouldDropOrDestroyItem
// 0x0028 (0x0028 - 0x0000)
struct Minigame_PlayerCreated_C_ShouldDropOrDestroyItem final
{
public:
	bool                                          bShouldDrop;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldDestroy;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            PC;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortWorldItemDefinition*         ItemDef;                                           // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDropOrDestroyItem_ReturnValue;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             Temp_byte_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             CallFunc_Map_Find_Value;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_ShouldDropOrDestroyItem");
static_assert(sizeof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem) == 0x000028, "Wrong size on Minigame_PlayerCreated_C_ShouldDropOrDestroyItem");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, bShouldDrop) == 0x000000, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::bShouldDrop' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, bShouldDestroy) == 0x000001, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::bShouldDestroy' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, PC) == 0x000008, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::PC' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, ItemDef) == 0x000010, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::ItemDef' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, ReturnValue) == 0x000018, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_bool_Variable) == 0x000019, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, CallFunc_ShouldDropOrDestroyItem_ReturnValue) == 0x00001A, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::CallFunc_ShouldDropOrDestroyItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_bool_Variable_1) == 0x00001B, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_bool_Variable_2) == 0x00001C, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_byte_Variable) == 0x00001D, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_bool_Variable_3) == 0x00001E, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_bool_Variable_4) == 0x00001F, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_bool_Variable_5) == 0x000020, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, Temp_byte_Variable_1) == 0x000021, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, CallFunc_Map_Find_Value) == 0x000022, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, CallFunc_Map_Find_ReturnValue) == 0x000023, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, K2Node_Select_Default) == 0x000024, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldDropOrDestroyItem, K2Node_Select_Default_1) == 0x000025, "Member 'Minigame_PlayerCreated_C_ShouldDropOrDestroyItem::K2Node_Select_Default_1' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.HasPlayerStartPads
// 0x0068 (0x0068 - 0x0000)
struct Minigame_PlayerCreated_C_HasPlayerStartPads final
{
public:
	const class AFortPlayerState*                 InPlayerState;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInMinigame_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMinigamePlayerStartComponent*      CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerStartCreative*               CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerStartCompatibilityInfo          CallFunc_IsPlayerStartCompatibleWithPlayer_ReturnValue; // 0x0058(0x0005)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_HasPlayerStartPads) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_HasPlayerStartPads");
static_assert(sizeof(Minigame_PlayerCreated_C_HasPlayerStartPads) == 0x000068, "Wrong size on Minigame_PlayerCreated_C_HasPlayerStartPads");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, InPlayerState) == 0x000000, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::InPlayerState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, ReturnValue) == 0x000008, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_IsPlayerInMinigame_ReturnValue) == 0x000009, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_IsPlayerInMinigame_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, K2Node_DynamicCast_AsController) == 0x000030, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Array_Get_Item) == 0x000040, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_IsPlayerStartCompatibleWithPlayer_ReturnValue) == 0x000058, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_IsPlayerStartCompatibleWithPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_IsValid_ReturnValue_1) == 0x000064, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Less_IntInt_ReturnValue_1) == 0x000065, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_HasPlayerStartPads, CallFunc_Not_PreBool_ReturnValue) == 0x000066, "Member 'Minigame_PlayerCreated_C_HasPlayerStartPads::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

