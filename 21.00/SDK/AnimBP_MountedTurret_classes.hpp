#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_MountedTurret

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimBP_MountedTurret_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_MountedTurret.AnimBP_MountedTurret_C
// 0x0790 (0x0D50 - 0x05C0)
class UAnimBP_MountedTurret_C final : public UFortMountedTurretAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_MountedTurret::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x05C8(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x05D8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x05E0(0x0008)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x05E8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0630(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0658(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0680(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x06A8(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x06D0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0710(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0730(0x0040)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0770(0x0110)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0880(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x08A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x08E8(0x0040)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0928(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0968(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0988(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x09C8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x09E8(0x00B8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0AA0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0AC0(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0BE8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0C08(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0C28(0x0040)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0C68(0x00C8)()
	bool                                          isTurning;                                         // 0x0D30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D31[0x3];                                      // 0x0D31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAnimInput_MountedTurret           MountedTurretInput;                                // 0x0D34(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         AimingYawLastFrame;                                // 0x0D44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_MountedTurret_AnimGraphNode_ModifyBone_BAFB44F345DE291ADC0647A09C264EB3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_MountedTurret_AnimGraphNode_RotationOffsetBlendSpace_63329B54429754D46B24A7924B9E9D96();
	void ExecuteUbergraph_AnimBP_MountedTurret(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_MountedTurret_C">();
	}
	static class UAnimBP_MountedTurret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_MountedTurret_C>();
	}
};
static_assert(alignof(UAnimBP_MountedTurret_C) == 0x000010, "Wrong alignment on UAnimBP_MountedTurret_C");
static_assert(sizeof(UAnimBP_MountedTurret_C) == 0x000D50, "Wrong size on UAnimBP_MountedTurret_C");
static_assert(offsetof(UAnimBP_MountedTurret_C, UberGraphFrame) == 0x0005C0, "Member 'UAnimBP_MountedTurret_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, __AnimBlueprintMutables) == 0x0005C8, "Member 'UAnimBP_MountedTurret_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimBlueprintExtension_PropertyAccess) == 0x0005D8, "Member 'UAnimBP_MountedTurret_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimBlueprintExtension_Base) == 0x0005E0, "Member 'UAnimBP_MountedTurret_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_Slot) == 0x0005E8, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_TransitionResult_3) == 0x000630, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_TransitionResult_2) == 0x000658, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_TransitionResult_1) == 0x000680, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_TransitionResult) == 0x0006A8, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_SequenceEvaluator_1) == 0x0006D0, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_StateResult_3) == 0x000710, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_SequencePlayer_3) == 0x000730, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000770, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_StateResult_2) == 0x000880, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_BlendListByBool) == 0x0008A0, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_SequencePlayer_2) == 0x0008E8, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_SequencePlayer_1) == 0x000928, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_StateResult_1) == 0x000968, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_SequencePlayer) == 0x000988, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_StateResult) == 0x0009C8, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_StateMachine) == 0x0009E8, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_LocalToComponentSpace) == 0x000AA0, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_ModifyBone) == 0x000AC0, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_ComponentToLocalSpace) == 0x000BE8, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_Root) == 0x000C08, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_SequenceEvaluator) == 0x000C28, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AnimGraphNode_ApplyAdditive) == 0x000C68, "Member 'UAnimBP_MountedTurret_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, isTurning) == 0x000D30, "Member 'UAnimBP_MountedTurret_C::isTurning' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, MountedTurretInput) == 0x000D34, "Member 'UAnimBP_MountedTurret_C::MountedTurretInput' has a wrong offset!");
static_assert(offsetof(UAnimBP_MountedTurret_C, AimingYawLastFrame) == 0x000D44, "Member 'UAnimBP_MountedTurret_C::AimingYawLastFrame' has a wrong offset!");

}

