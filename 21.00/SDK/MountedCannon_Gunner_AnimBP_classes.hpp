#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MountedCannon_Gunner_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MountedCannon_Gunner_AnimBP_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MountedCannon_Gunner_AnimBP.MountedCannon_Gunner_AnimBP_C
// 0x02E0 (0x2460 - 0x2180)
class UMountedCannon_Gunner_AnimBP_C final : public UFortPlayerAnimInstance_MountedTurret
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2180(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct MountedCannon_Gunner_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x2188(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_218A[0x6];                                     // 0x218A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x2190(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x2198(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x21A0(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x21C0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2208(0x0040)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x2248(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2290(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2358(0x0040)()
	struct FVector                                LocalLeftOffset;                                   // 0x2398(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldPosLeft;                                      // 0x23B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotLeftOffset;                                // 0x23C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               WorldRotLeft;                                      // 0x23E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LocalRightOffset;                                  // 0x23F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotRightOffset;                               // 0x2410(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               WorldRotRight;                                     // 0x2428(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldPosRight;                                     // 0x2440(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isTurning;                                         // 0x2458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_MountedCannon_Gunner_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MountedCannon_Gunner_AnimBP_C">();
	}
	static class UMountedCannon_Gunner_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMountedCannon_Gunner_AnimBP_C>();
	}
};
static_assert(alignof(UMountedCannon_Gunner_AnimBP_C) == 0x000010, "Wrong alignment on UMountedCannon_Gunner_AnimBP_C");
static_assert(sizeof(UMountedCannon_Gunner_AnimBP_C) == 0x002460, "Wrong size on UMountedCannon_Gunner_AnimBP_C");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, UberGraphFrame) == 0x002180, "Member 'UMountedCannon_Gunner_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, __AnimBlueprintMutables) == 0x002188, "Member 'UMountedCannon_Gunner_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x002190, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimBlueprintExtension_Base) == 0x002198, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimGraphNode_Root) == 0x0021A0, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimGraphNode_Slot) == 0x0021C0, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x002208, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x002248, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x002290, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x002358, "Member 'UMountedCannon_Gunner_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, LocalLeftOffset) == 0x002398, "Member 'UMountedCannon_Gunner_AnimBP_C::LocalLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, WorldPosLeft) == 0x0023B0, "Member 'UMountedCannon_Gunner_AnimBP_C::WorldPosLeft' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, LocalRotLeftOffset) == 0x0023C8, "Member 'UMountedCannon_Gunner_AnimBP_C::LocalRotLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, WorldRotLeft) == 0x0023E0, "Member 'UMountedCannon_Gunner_AnimBP_C::WorldRotLeft' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, LocalRightOffset) == 0x0023F8, "Member 'UMountedCannon_Gunner_AnimBP_C::LocalRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, LocalRotRightOffset) == 0x002410, "Member 'UMountedCannon_Gunner_AnimBP_C::LocalRotRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, WorldRotRight) == 0x002428, "Member 'UMountedCannon_Gunner_AnimBP_C::WorldRotRight' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, WorldPosRight) == 0x002440, "Member 'UMountedCannon_Gunner_AnimBP_C::WorldPosRight' has a wrong offset!");
static_assert(offsetof(UMountedCannon_Gunner_AnimBP_C, isTurning) == 0x002458, "Member 'UMountedCannon_Gunner_AnimBP_C::isTurning' has a wrong offset!");

}

