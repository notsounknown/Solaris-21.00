#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_MED_Island_Nomad_Deform_CtrlRig_twists

#include "Basic.hpp"

#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimationCore_structs.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass F_MED_Island_Nomad_Deform_CtrlRig_twists.RigVMMemory_Work
// 0x1278 (0x12A0 - 0x0028)
class F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x0070)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionFromAxisAndAngle_1_1_1_1_2_Result;   // 0x00A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToAxisAndAngle_1_1_1_1_2_Axis;       // 0x00C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_2_Twist;          // 0x00E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigUnit_GetBoneTransform_1_1_1_1_2_Transform;      // 0x0100(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_1_1_1_2_CachedBone;     // 0x0160(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_2_Input;          // 0x0170(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_2_Swing;          // 0x0190(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathQuaternionToAxisAndAngle_1_1_1_1_2_Angle;      // 0x01B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_2_Result;                   // 0x01B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_1_1_2_CachedBone;      // 0x01B8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromAxisAndAngle_1_1_1_1_Result;     // 0x01D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToAxisAndAngle_1_1_1_1_Axis;         // 0x01F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_Twist;            // 0x0210(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigUnit_GetBoneTransform_1_1_1_1_Transform;        // 0x0230(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_1_1_1_CachedBone;       // 0x0290(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_Input;            // 0x02A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_Swing;            // 0x02C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathQuaternionToAxisAndAngle_1_1_1_1_Angle;        // 0x02E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_Result;                     // 0x02E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_1_1_CachedBone;        // 0x02E8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromAxisAndAngle_1_1_1_1_2_1_Result; // 0x0300(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToAxisAndAngle_1_1_1_1_2_1_Axis;     // 0x0320(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_2_1_Twist;        // 0x0340(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigUnit_GetBoneTransform_1_1_1_1_2_1_Transform;    // 0x0360(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_1_1_1_2_1_CachedBone;   // 0x03C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_2_1_Input;        // 0x03D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_2_1_Swing;        // 0x03F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathQuaternionToAxisAndAngle_1_1_1_1_2_1_Angle;    // 0x0410(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_2_1_Result;                 // 0x0414(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_1_1_2_1_CachedBone;    // 0x0418(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromAxisAndAngle_1_1_1_Result;       // 0x0430(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToAxisAndAngle_1_1_1_Axis;           // 0x0450(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_Twist;              // 0x0470(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigUnit_GetBoneTransform_1_1_1_Transform;          // 0x0490(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_1_1_CachedBone;         // 0x04F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_Input;              // 0x0500(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_Swing;              // 0x0520(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathQuaternionToAxisAndAngle_1_1_1_Angle;          // 0x0540(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_Result;                       // 0x0544(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_1_CachedBone;          // 0x0548(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_558[0x8];                                      // 0x0558(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromAxisAndAngle_1_1_1_1_1_Result;   // 0x0560(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToAxisAndAngle_1_1_1_1_1_Axis;       // 0x0580(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598[0x8];                                      // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_1_Twist;          // 0x05A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             MathTransformMakeRelative_1_Local;                 // 0x05C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigUnit_GetBoneTransform_1_1_1_1_1_2_1_Transform;  // 0x0620(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_1_1_1_1_2_1_CachedBone; // 0x0680(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetInitialBoneTransform_1_Transform;       // 0x0690(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetInitialBoneTransform_1_CachedBone;      // 0x06F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_1_Input;          // 0x0700(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_1_Swing;          // 0x0720(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathQuaternionToAxisAndAngle_1_1_1_1_1_Angle;      // 0x0740(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_1_Result;                   // 0x0744(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_1_1_1_CachedBone;      // 0x0748(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_758[0x8];                                      // 0x0758(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromAxisAndAngle_1_1_1_1_1_2_Result; // 0x0760(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToAxisAndAngle_1_1_1_1_1_2_Axis;     // 0x0780(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_798[0x8];                                      // 0x0798(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_1_1_Twist;        // 0x07A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             MathTransformMakeRelative_Local;                   // 0x07C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigUnit_GetBoneTransform_1_1_1_1_1_2_Transform;    // 0x0820(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_1_1_1_1_2_CachedBone;   // 0x0880(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetInitialBoneTransform_Transform;         // 0x0890(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetInitialBoneTransform_CachedBone;        // 0x08F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_1_1_Input;        // 0x0900(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionSwingTwist_1_1_1_1_1_1_Swing;        // 0x0920(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathQuaternionToAxisAndAngle_1_1_1_1_1_2_Angle;    // 0x0940(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_1_2_Result;                 // 0x0944(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_1_1_1_2_CachedBone;    // 0x0948(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_958[0x8];                                      // 0x0958(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigUnit_GetBoneTransform_1_Transform;              // 0x0960(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_CachedBone;             // 0x09C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetBoneTransform_Transform;                // 0x09D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_CachedBone;               // 0x0A30(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FConstraintTarget>              TransformConstraint_Targets__IO;                   // 0x0A40(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_TransformConstraint_WorkData> TransformConstraint_WorkData;                      // 0x0A50(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionFromEuler_4_1_Result;                // 0x0A60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToEuler_3_1_Result;                  // 0x0A80(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A98[0x8];                                      // 0x0A98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigUnit_GetBoneTransform_3_1_Transform;            // 0x0AA0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_3_1_CachedBone;           // 0x0B00(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_3_1_Value;                   // 0x0B10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionFromEuler_4_1_Euler__IO;             // 0x0B30(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_CachedBone;              // 0x0B48(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_B58[0x8];                                      // 0x0B58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromEuler_4_1_1_Result;              // 0x0B60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatMul_Result;                               // 0x0B80(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_A;                                    // 0x0B84(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionFromEuler_4_1_1_Euler__IO;           // 0x0B88(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_CachedBone;            // 0x0BA0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetBoneTransform_1_1_Transform;            // 0x0BB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_1_CachedBone;           // 0x0C10(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetBoneTransform_2_Transform;              // 0x0C20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_2_CachedBone;             // 0x0C80(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FConstraintTarget>              TransformConstraint_1_Targets__IO;                 // 0x0C90(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_TransformConstraint_WorkData> TransformConstraint_1_WorkData;                    // 0x0CA0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionFromEuler_4_Result;                  // 0x0CB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToEuler_3_Result;                    // 0x0CD0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE8[0x8];                                      // 0x0CE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigUnit_GetBoneTransform_3_Transform;              // 0x0CF0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_3_CachedBone;             // 0x0D50(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_3_Value;                     // 0x0D60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionFromEuler_4_Euler__IO;               // 0x0D80(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_CachedBone;                // 0x0D98(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_DA8[0x8];                                      // 0x0DA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromEuler_4_1_1_1_Result;            // 0x0DB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatMul_1_Result;                             // 0x0DD0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_1_A;                                  // 0x0DD4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionFromEuler_4_1_1_1_Euler__IO;         // 0x0DD8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_2_CachedBone;          // 0x0DF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetBoneTransform_1_2_Transform;            // 0x0E00(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_2_CachedBone;           // 0x0E60(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetBoneTransform_4_Transform;              // 0x0E70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_4_CachedBone;             // 0x0ED0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FConstraintTarget>              TransformConstraint_2_Targets__IO;                 // 0x0EE0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_TransformConstraint_WorkData> TransformConstraint_2_WorkData;                    // 0x0EF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionFromEuler_4_1_2_Result;              // 0x0F00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToEuler_3_1_1_Result;                // 0x0F20(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F38[0x8];                                      // 0x0F38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigUnit_GetBoneTransform_3_1_1_Transform;          // 0x0F40(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_3_1_1_CachedBone;         // 0x0FA0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_3_1_1_Value;                 // 0x0FB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionFromEuler_4_1_2_Euler__IO;           // 0x0FD0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_2_CachedBone;            // 0x0FE8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_FF8[0x8];                                      // 0x0FF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromEuler_4_1_1_2_Result;            // 0x1000(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatMul_2_Result;                             // 0x1020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_2_A;                                  // 0x1024(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionFromEuler_4_1_1_2_Euler__IO;         // 0x1028(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_3_CachedBone;          // 0x1040(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetBoneTransform_1_2_1_Transform;          // 0x1050(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_1_2_1_CachedBone;         // 0x10B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigUnit_GetBoneTransform_4_1_Transform;            // 0x10C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_4_1_CachedBone;           // 0x1120(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FConstraintTarget>              TransformConstraint_2_1_Targets__IO;               // 0x1130(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_TransformConstraint_WorkData> TransformConstraint_2_1_WorkData;                  // 0x1140(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionFromEuler_4_1_2_1_Result;            // 0x1150(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionToEuler_3_1_1_1_Result;              // 0x1170(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1188[0x8];                                     // 0x1188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigUnit_GetBoneTransform_3_1_1_1_Transform;        // 0x1190(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigUnit_GetBoneTransform_3_1_1_1_CachedBone;       // 0x11F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_3_1_1_1_Value;               // 0x1200(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionFromEuler_4_1_2_1_Euler__IO;         // 0x1220(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_2_1_CachedBone;          // 0x1238(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1248[0x8];                                     // 0x1248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionFromEuler_4_1_1_2_1_Result;          // 0x1250(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatMul_2_1_Result;                           // 0x1270(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_2_1_A;                                // 0x1274(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionFromEuler_4_1_1_2_1_Euler__IO;       // 0x1278(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigUnit_SetBoneRotation_1_1_3_1_CachedBone;        // 0x1290(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_Island_Nomad_Deform_CtrlRig_twists.RigVMMemory_Work", true>();
	}
	static class F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work>();
	}
};
static_assert(alignof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work) == 0x000010, "Wrong alignment on F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work");
static_assert(sizeof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work) == 0x0012A0, "Wrong size on F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromAxisAndAngle_1_1_1_1_2_Result) == 0x0000A0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromAxisAndAngle_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_2_Axis) == 0x0000C0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_2_Axis' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_2_Twist) == 0x0000E0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_2_Twist' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_2_Transform) == 0x000100, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_2_CachedBone) == 0x000160, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_2_Input) == 0x000170, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_2_Input' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_2_Swing) == 0x000190, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_2_Swing' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_2_Angle) == 0x0001B0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_2_Angle' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_3_1_1_1_1_2_Result) == 0x0001B4, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_3_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_1_1_2_CachedBone) == 0x0001B8, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_1_1_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromAxisAndAngle_1_1_1_1_Result) == 0x0001D0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromAxisAndAngle_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_Axis) == 0x0001F0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_Axis' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_Twist) == 0x000210, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_Twist' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_Transform) == 0x000230, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_CachedBone) == 0x000290, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_Input) == 0x0002A0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_Input' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_Swing) == 0x0002C0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_Swing' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_Angle) == 0x0002E0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_Angle' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_3_1_1_1_1_Result) == 0x0002E4, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_3_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_1_1_CachedBone) == 0x0002E8, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromAxisAndAngle_1_1_1_1_2_1_Result) == 0x000300, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromAxisAndAngle_1_1_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_2_1_Axis) == 0x000320, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_2_1_Axis' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_2_1_Twist) == 0x000340, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_2_1_Twist' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_2_1_Transform) == 0x000360, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_2_1_CachedBone) == 0x0003C0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_2_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_2_1_Input) == 0x0003D0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_2_1_Input' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_2_1_Swing) == 0x0003F0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_2_1_Swing' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_2_1_Angle) == 0x000410, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_2_1_Angle' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_3_1_1_1_1_2_1_Result) == 0x000414, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_3_1_1_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_1_1_2_1_CachedBone) == 0x000418, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_1_1_2_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromAxisAndAngle_1_1_1_Result) == 0x000430, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromAxisAndAngle_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_Axis) == 0x000450, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_Axis' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_Twist) == 0x000470, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_Twist' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_Transform) == 0x000490, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_CachedBone) == 0x0004F0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_Input) == 0x000500, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_Input' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_Swing) == 0x000520, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_Swing' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_Angle) == 0x000540, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_Angle' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_3_1_1_1_Result) == 0x000544, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_1_CachedBone) == 0x000548, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromAxisAndAngle_1_1_1_1_1_Result) == 0x000560, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromAxisAndAngle_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_1_Axis) == 0x000580, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_1_Axis' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_1_Twist) == 0x0005A0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_1_Twist' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathTransformMakeRelative_1_Local) == 0x0005C0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathTransformMakeRelative_1_Local' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_1_2_1_Transform) == 0x000620, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_1_2_1_CachedBone) == 0x000680, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_1_2_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetInitialBoneTransform_1_Transform) == 0x000690, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetInitialBoneTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetInitialBoneTransform_1_CachedBone) == 0x0006F0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetInitialBoneTransform_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_1_Input) == 0x000700, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_1_Input' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_1_Swing) == 0x000720, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_1_Swing' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_1_Angle) == 0x000740, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_1_Angle' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_3_1_1_1_1_1_Result) == 0x000744, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_3_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_1_1_1_CachedBone) == 0x000748, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_1_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromAxisAndAngle_1_1_1_1_1_2_Result) == 0x000760, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromAxisAndAngle_1_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_1_2_Axis) == 0x000780, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_1_2_Axis' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_1_1_Twist) == 0x0007A0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_1_1_Twist' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathTransformMakeRelative_Local) == 0x0007C0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathTransformMakeRelative_Local' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_1_2_Transform) == 0x000820, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_1_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_1_1_1_2_CachedBone) == 0x000880, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_1_1_1_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetInitialBoneTransform_Transform) == 0x000890, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetInitialBoneTransform_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetInitialBoneTransform_CachedBone) == 0x0008F0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetInitialBoneTransform_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_1_1_Input) == 0x000900, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_1_1_Input' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionSwingTwist_1_1_1_1_1_1_Swing) == 0x000920, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionSwingTwist_1_1_1_1_1_1_Swing' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToAxisAndAngle_1_1_1_1_1_2_Angle) == 0x000940, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToAxisAndAngle_1_1_1_1_1_2_Angle' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_3_1_1_1_1_1_2_Result) == 0x000944, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_3_1_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_1_1_1_2_CachedBone) == 0x000948, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_1_1_1_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_Transform) == 0x000960, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_CachedBone) == 0x0009C0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_Transform) == 0x0009D0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_CachedBone) == 0x000A30, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_Targets__IO) == 0x000A40, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_Targets__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_WorkData) == 0x000A50, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_Result) == 0x000A60, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_1_Result) == 0x000A80, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_1_Transform) == 0x000AA0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_1_CachedBone) == 0x000B00, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_1_Value) == 0x000B10, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_1_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_Euler__IO) == 0x000B30, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_CachedBone) == 0x000B48, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_Result) == 0x000B60, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_Result) == 0x000B80, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_A) == 0x000B84, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_A' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_Euler__IO) == 0x000B88, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_CachedBone) == 0x000BA0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_Transform) == 0x000BB0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_1_CachedBone) == 0x000C10, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_2_Transform) == 0x000C20, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_2_CachedBone) == 0x000C80, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_1_Targets__IO) == 0x000C90, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_1_Targets__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_1_WorkData) == 0x000CA0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_1_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_Result) == 0x000CB0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_Result) == 0x000CD0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_Transform) == 0x000CF0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_CachedBone) == 0x000D50, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_Value) == 0x000D60, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_Euler__IO) == 0x000D80, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_CachedBone) == 0x000D98, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_1_Result) == 0x000DB0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_1_Result) == 0x000DD0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_1_A) == 0x000DD4, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_1_Euler__IO) == 0x000DD8, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_1_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_2_CachedBone) == 0x000DF0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_2_Transform) == 0x000E00, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_2_CachedBone) == 0x000E60, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_4_Transform) == 0x000E70, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_4_CachedBone) == 0x000ED0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_4_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_2_Targets__IO) == 0x000EE0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_2_Targets__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_2_WorkData) == 0x000EF0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_2_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_2_Result) == 0x000F00, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_1_1_Result) == 0x000F20, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_1_1_Transform) == 0x000F40, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_1_1_CachedBone) == 0x000FA0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_1_1_Value) == 0x000FB0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_1_1_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_2_Euler__IO) == 0x000FD0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_2_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_2_CachedBone) == 0x000FE8, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_2_Result) == 0x001000, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_2_Result) == 0x001020, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_2_A) == 0x001024, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_2_A' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_2_Euler__IO) == 0x001028, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_2_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_3_CachedBone) == 0x001040, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_3_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_2_1_Transform) == 0x001050, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_1_2_1_CachedBone) == 0x0010B0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_1_2_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_4_1_Transform) == 0x0010C0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_4_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_4_1_CachedBone) == 0x001120, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_4_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_2_1_Targets__IO) == 0x001130, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_2_1_Targets__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, TransformConstraint_2_1_WorkData) == 0x001140, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::TransformConstraint_2_1_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_2_1_Result) == 0x001150, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_1_1_1_Result) == 0x001170, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_1_1_1_Transform) == 0x001190, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_GetBoneTransform_3_1_1_1_CachedBone) == 0x0011F0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_GetBoneTransform_3_1_1_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionToEuler_3_1_1_1_Value) == 0x001200, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionToEuler_3_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_2_1_Euler__IO) == 0x001220, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_2_1_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_2_1_CachedBone) == 0x001238, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_2_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_2_1_Result) == 0x001250, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_2_1_Result) == 0x001270, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathFloatMul_2_1_A) == 0x001274, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathFloatMul_2_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, MathQuaternionFromEuler_4_1_1_2_1_Euler__IO) == 0x001278, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::MathQuaternionFromEuler_4_1_1_2_1_Euler__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work, RigUnit_SetBoneRotation_1_1_3_1_CachedBone) == 0x001290, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Work::RigUnit_SetBoneRotation_1_1_3_1_CachedBone' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass F_MED_Island_Nomad_Deform_CtrlRig_twists.RigVMMemory_Literal
// 0x0178 (0x01A0 - 0x0028)
class F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	class FName                                   RigUnit_SetBoneRotation_1_1_1_1_2_Bone__Const;     // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigUnit_GetBoneTransform_1_1_1_1_2_Bone__Const;    // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_GetBoneTransform_1_1_1_1_2_Space__Const;   // 0x0030(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MathQuaternionSwingTwist_1_1_1_1_2_TwistAxis__Const; // 0x0038(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_2_B__Const;                 // 0x0050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_1_1_2_Space__Const;    // 0x0054(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigUnit_SetBoneRotation_1_1_1_1_2_Weight__Const;   // 0x0058(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigUnit_SetBoneRotation_1_1_1_1_2_bPropagateToChildren__Const : 1; // 0x005C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_1_1_Bone__Const;       // 0x0060(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_B__Const;                   // 0x0064(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_1_1_Space__Const;      // 0x0068(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_1_1_2_1_Bone__Const;   // 0x006C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigUnit_GetBoneTransform_1_1_1_1_2_1_Bone__Const;  // 0x0070(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_1_1_2_1_Space__Const;  // 0x0074(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_1_Bone__Const;         // 0x0078(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_1_Space__Const;        // 0x007C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_1_1_1_Bone__Const;     // 0x0080(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigUnit_GetBoneTransform_1_1_1_1_1_2_1_Bone__Const; // 0x0084(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_3_1_1_1_1_1_B__Const;                 // 0x0088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_1_1_1_Space__Const;    // 0x008C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_1_1_1_2_Bone__Const;   // 0x0090(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigUnit_GetBoneTransform_1_1_1_1_1_2_Bone__Const;  // 0x0094(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   TransformConstraint_Bone__Const;                   // 0x0098(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETransformSpaceMode                           TransformConstraint_BaseTransformSpace__Const;     // 0x009C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TransformConstraint_BaseTransform__Const;          // 0x00A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	class FName                                   TransformConstraint_BaseBone__Const;               // 0x0100(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintTarget>              TransformConstraint_Targets__Const;                // 0x0108(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigUnit_GetBoneTransform_1_Bone__Const;            // 0x0118(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_GetBoneTransform_1_Space__Const;           // 0x011C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MathQuaternionFromEuler_4_1_Euler__Const;          // 0x0120(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EEulerRotationOrder                           MathQuaternionToEuler_3_1_RotationOrder__Const;    // 0x0138(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_Space__Const;            // 0x0139(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_Bone__Const;           // 0x013C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatMul_B__Const;                             // 0x0140(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_Space__Const;          // 0x0144(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TransformConstraint_1_Bone__Const;                 // 0x0148(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigUnit_GetBoneTransform_1_1_Bone__Const;          // 0x014C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_Space__Const;              // 0x0150(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_2_Bone__Const;         // 0x0154(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_2_Space__Const;        // 0x0158(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TransformConstraint_2_Bone__Const;                 // 0x015C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigUnit_GetBoneTransform_1_2_Bone__Const;          // 0x0160(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_2_Space__Const;          // 0x0164(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_3_Bone__Const;         // 0x0168(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_3_Space__Const;        // 0x016C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TransformConstraint_2_1_Bone__Const;               // 0x0170(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigUnit_GetBoneTransform_1_2_1_Bone__Const;        // 0x0174(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_2_1_Space__Const;        // 0x0178(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigUnit_SetBoneRotation_1_1_3_1_Bone__Const;       // 0x017C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigUnit_SetBoneRotation_1_1_3_1_Space__Const;      // 0x0180(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugHierarchy_1_Scale__Const;                     // 0x0184(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugHierarchy_1_Color__Const;                     // 0x0188(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DebugHierarchy_1_Thickness__Const;                 // 0x0198(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_Island_Nomad_Deform_CtrlRig_twists.RigVMMemory_Literal", true>();
	}
	static class F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal>();
	}
};
static_assert(alignof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal) == 0x000010, "Wrong alignment on F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal");
static_assert(sizeof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal) == 0x0001A0, "Wrong size on F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_2_Bone__Const) == 0x000028, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_2_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_1_1_1_2_Bone__Const) == 0x00002C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_1_1_1_2_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_1_1_1_2_Space__Const) == 0x000030, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_1_1_1_2_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, MathQuaternionSwingTwist_1_1_1_1_2_TwistAxis__Const) == 0x000038, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::MathQuaternionSwingTwist_1_1_1_1_2_TwistAxis__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, MathFloatMul_3_1_1_1_1_2_B__Const) == 0x000050, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::MathFloatMul_3_1_1_1_1_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_2_Space__Const) == 0x000054, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_2_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_2_Weight__Const) == 0x000058, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_2_Weight__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_Bone__Const) == 0x000060, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, MathFloatMul_3_1_1_1_1_B__Const) == 0x000064, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::MathFloatMul_3_1_1_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_Space__Const) == 0x000068, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_2_1_Bone__Const) == 0x00006C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_2_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_1_1_1_2_1_Bone__Const) == 0x000070, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_1_1_1_2_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_2_1_Space__Const) == 0x000074, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_2_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_Bone__Const) == 0x000078, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_Space__Const) == 0x00007C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_1_Bone__Const) == 0x000080, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_1_1_1_1_2_1_Bone__Const) == 0x000084, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_1_1_1_1_2_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, MathFloatMul_3_1_1_1_1_1_B__Const) == 0x000088, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::MathFloatMul_3_1_1_1_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_1_Space__Const) == 0x00008C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_1_1_1_2_Bone__Const) == 0x000090, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_1_1_1_2_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_1_1_1_1_2_Bone__Const) == 0x000094, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_1_1_1_1_2_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_Bone__Const) == 0x000098, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_BaseTransformSpace__Const) == 0x00009C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_BaseTransformSpace__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_BaseTransform__Const) == 0x0000A0, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_BaseTransform__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_BaseBone__Const) == 0x000100, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_BaseBone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_Targets__Const) == 0x000108, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_Targets__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_Bone__Const) == 0x000118, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_Space__Const) == 0x00011C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, MathQuaternionFromEuler_4_1_Euler__Const) == 0x000120, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::MathQuaternionFromEuler_4_1_Euler__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, MathQuaternionToEuler_3_1_RotationOrder__Const) == 0x000138, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::MathQuaternionToEuler_3_1_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_Space__Const) == 0x000139, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_Bone__Const) == 0x00013C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, MathFloatMul_B__Const) == 0x000140, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::MathFloatMul_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_Space__Const) == 0x000144, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_1_Bone__Const) == 0x000148, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_1_Bone__Const) == 0x00014C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_Space__Const) == 0x000150, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_2_Bone__Const) == 0x000154, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_2_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_2_Space__Const) == 0x000158, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_2_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_2_Bone__Const) == 0x00015C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_2_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_2_Bone__Const) == 0x000160, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_2_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_2_Space__Const) == 0x000164, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_2_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_3_Bone__Const) == 0x000168, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_3_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_3_Space__Const) == 0x00016C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_3_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, TransformConstraint_2_1_Bone__Const) == 0x000170, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::TransformConstraint_2_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_GetBoneTransform_1_2_1_Bone__Const) == 0x000174, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_GetBoneTransform_1_2_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_2_1_Space__Const) == 0x000178, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_2_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_3_1_Bone__Const) == 0x00017C, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_3_1_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, RigUnit_SetBoneRotation_1_1_3_1_Space__Const) == 0x000180, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::RigUnit_SetBoneRotation_1_1_3_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, DebugHierarchy_1_Scale__Const) == 0x000184, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::DebugHierarchy_1_Scale__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, DebugHierarchy_1_Color__Const) == 0x000188, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::DebugHierarchy_1_Color__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal, DebugHierarchy_1_Thickness__Const) == 0x000198, "Member 'F_MED_Island_Nomad_Deform_CtrlRig_twists::URigVMMemory_Literal::DebugHierarchy_1_Thickness__Const' has a wrong offset!");

// ControlRigBlueprintGeneratedClass F_MED_Island_Nomad_Deform_CtrlRig_twists.F_MED_Island_Nomad_Deform_CtrlRig_twists_C
// 0x0010 (0x04A0 - 0x0490)
class UF_MED_Island_Nomad_Deform_CtrlRig_twists_C final : public UControlRig
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Upperarm_Twist;                                    // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"F_MED_Island_Nomad_Deform_CtrlRig_twists_C">();
	}
	static class UF_MED_Island_Nomad_Deform_CtrlRig_twists_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UF_MED_Island_Nomad_Deform_CtrlRig_twists_C>();
	}
};
static_assert(alignof(UF_MED_Island_Nomad_Deform_CtrlRig_twists_C) == 0x000010, "Wrong alignment on UF_MED_Island_Nomad_Deform_CtrlRig_twists_C");
static_assert(sizeof(UF_MED_Island_Nomad_Deform_CtrlRig_twists_C) == 0x0004A0, "Wrong size on UF_MED_Island_Nomad_Deform_CtrlRig_twists_C");
static_assert(offsetof(UF_MED_Island_Nomad_Deform_CtrlRig_twists_C, Upperarm_Twist) == 0x000490, "Member 'UF_MED_Island_Nomad_Deform_CtrlRig_twists_C::Upperarm_Twist' has a wrong offset!");

}

