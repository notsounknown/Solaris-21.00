#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_MED_COD_Plaid_FaceAcc_CtrlRig1

#include "Basic.hpp"

#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "AnimationCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass F_MED_COD_Plaid_FaceAcc_CtrlRig1.F_MED_COD_Plaid_FaceAcc_CtrlRig1_C
// 0x33B0 (0x3840 - 0x0490)
class UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C final : public UControlRig
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_BeginExecution                BeginExecution;                                    // 0x0490(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionGetAxis         MathQuaternionGetAxis_0;                           // 0x0510(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_0;                           // 0x0560(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorSub                 MathVectorSub_0;                                   // 0x06D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromTwoVectors  MathQuaternionFromTwoVectors_0;                    // 0x0720(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionMul             MathQuaternionMul_0;                               // 0x0780(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_0;                                 // 0x07F0(0x00E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_1;                                // 0x08D0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_2;                           // 0x0960(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformTransformVector  MathTransformTransformVector_0;                    // 0x0AD0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_1;                           // 0x0B70(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetRelativeBoneTransform      GetRelativeBoneTransform;                          // 0x0CE0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionToEuler         MathQuaternionToEuler;                             // 0x0D80(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap_0;                                  // 0x0DD0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_DF8[0x8];                                      // 0x0DF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_3;                            // 0x0E00(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromEuler       MathQuaternionFromEuler_0_1_1_0;                   // 0x0EB0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorSelectBool          MathVectorSelectBool;                              // 0x0F00(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_F58[0x8];                                      // 0x0F58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_GetRelativeBoneTransform      GetRelativeBoneTransform_0;                        // 0x0F60(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionToEuler         MathQuaternionToEuler_0;                           // 0x1000(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap_0_0;                                // 0x1050(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_1078[0x8];                                     // 0x1078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_3_0;                          // 0x1080(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromEuler       MathQuaternionFromEuler_0_1_1_0_0;                 // 0x1130(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetRelativeBoneTransform      GetRelativeBoneTransform_0_0;                      // 0x1180(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionToEuler         MathQuaternionToEuler_0_0;                         // 0x1220(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap_0_0_0;                              // 0x1270(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_1298[0x8];                                     // 0x1298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_3_0_0;                        // 0x12A0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromEuler       MathQuaternionFromEuler_0_1_1_0_0_0;               // 0x1350(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorAdd                 MathVectorAdd;                                     // 0x13A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_0;                                // 0x13F0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetRelativeBoneTransform      GetRelativeBoneTransform_1;                        // 0x1480(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionToEuler         MathQuaternionToEuler_1;                           // 0x1520(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap_0_1;                                // 0x1570(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_1598[0x8];                                     // 0x1598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_3_1;                          // 0x15A0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromEuler       MathQuaternionFromEuler_0_1_1_0_1;                 // 0x1650(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable;                             // 0x16A0(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform;                                  // 0x1810(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetRelativeBoneTransform      GetRelativeBoneTransform_0_0_0;                    // 0x18A0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionToEuler         MathQuaternionToEuler_0_0_0;                       // 0x1940(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatRemap                MathFloatRemap_0_0_0_0;                            // 0x1990(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_19B8[0x8];                                     // 0x19B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_3_0_0_0;                      // 0x19C0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromEuler       MathQuaternionFromEuler_0_1_1_0_0_0_0;             // 0x1A70(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_ModifyBoneTransforms          ModifyBoneTransforms_3_1_0;                        // 0x1AC0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromEuler       MathQuaternionFromEuler_0_1_1_0_1_0;               // 0x1B70(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AccumulateFloatLerp           AccumulateFloatLerp;                               // 0x1BC0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AccumulateFloatLerp           AccumulateFloatLerp_0;                             // 0x1BE0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AccumulateFloatLerp           AccumulateFloatLerp_0_0;                           // 0x1C00(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AccumulateFloatLerp           AccumulateFloatLerp_0_1;                           // 0x1C20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AccumulateFloatLerp           AccumulateFloatLerp_0_1_0;                         // 0x1C40(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_BeginExecution                BeginExecution_0;                                  // 0x1C60(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformMakeRelative     MathTransformMakeRelative;                         // 0x1CE0(0x0130)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_2;                                // 0x1E10(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_3;                                // 0x1EA0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorClamp               MathVectorClamp;                                   // 0x1F30(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_1F98[0x8];                                     // 0x1F98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_MathTransformMul              MathTransformMul;                                  // 0x1FA0(0x0130)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_3;                           // 0x20D0(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneTransform              SetBoneTransform;                                  // 0x2240(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_3_0;                         // 0x23C0(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatAdd                  MathFloatAdd;                                      // 0x2530(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorMul                 MathVectorMul;                                     // 0x2548(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorMul                 MathVectorMul_0;                                   // 0x2598(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorUnit                MathVectorUnit;                                    // 0x25E8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorLength              MathVectorLength;                                  // 0x2620(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatClamp                MathFloatClamp;                                    // 0x2648(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorScale               MathVectorScale;                                   // 0x2660(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorAdd                 MathVectorAdd_0;                                   // 0x26A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugArc                      DebugArc;                                          // 0x26F0(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromEuler       MathQuaternionFromEuler;                           // 0x2870(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformMul              MathTransformMul_0;                                // 0x28C0(0x0130)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionGetAxis         MathQuaternionGetAxis_0_0;                         // 0x29F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_0_0;                         // 0x2A40(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorSub                 MathVectorSub_0_0;                                 // 0x2BB0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionFromTwoVectors  MathQuaternionFromTwoVectors_0_0;                  // 0x2C00(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathQuaternionMul             MathQuaternionMul_0_0;                             // 0x2C60(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneRotation               SetBoneRotation_0_0;                               // 0x2CD0(0x00E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_1_0;                              // 0x2DB0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_2_0;                         // 0x2E40(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformTransformVector  MathTransformTransformVector_0_0;                  // 0x2FB0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_DebugTransformMutable         DebugTransformMutable_1_0;                         // 0x3050(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorSelectBool          MathVectorSelectBool_0;                            // 0x31C0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathVectorAdd                 MathVectorAdd_1;                                   // 0x3218(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_3268[0x8];                                     // 0x3268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_GetBoneTransform              GetBoneTransform_0_0;                              // 0x3270(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneTransform              SetBoneTransform_0;                                // 0x3300(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_SetBoneTransform              SetBoneTransform_1;                                // 0x3480(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_6;                                // 0x3600(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_7;                                // 0x3690(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_4;                                // 0x3720(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_5;                                // 0x37B0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"F_MED_COD_Plaid_FaceAcc_CtrlRig1_C">();
	}
	static class UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C>();
	}
};
static_assert(alignof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C) == 0x000010, "Wrong alignment on UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C");
static_assert(sizeof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C) == 0x003840, "Wrong size on UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, BeginExecution) == 0x000490, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::BeginExecution' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionGetAxis_0) == 0x000510, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionGetAxis_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_0) == 0x000560, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorSub_0) == 0x0006D0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorSub_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromTwoVectors_0) == 0x000720, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromTwoVectors_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionMul_0) == 0x000780, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionMul_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, SetBoneRotation_0) == 0x0007F0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::SetBoneRotation_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_1) == 0x0008D0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_2) == 0x000960, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_2' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathTransformTransformVector_0) == 0x000AD0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathTransformTransformVector_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_1) == 0x000B70, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetRelativeBoneTransform) == 0x000CE0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetRelativeBoneTransform' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionToEuler) == 0x000D80, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionToEuler' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathFloatRemap_0) == 0x000DD0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathFloatRemap_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, ModifyBoneTransforms_3) == 0x000E00, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::ModifyBoneTransforms_3' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromEuler_0_1_1_0) == 0x000EB0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromEuler_0_1_1_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorSelectBool) == 0x000F00, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorSelectBool' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetRelativeBoneTransform_0) == 0x000F60, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetRelativeBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionToEuler_0) == 0x001000, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionToEuler_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathFloatRemap_0_0) == 0x001050, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathFloatRemap_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, ModifyBoneTransforms_3_0) == 0x001080, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::ModifyBoneTransforms_3_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromEuler_0_1_1_0_0) == 0x001130, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromEuler_0_1_1_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetRelativeBoneTransform_0_0) == 0x001180, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetRelativeBoneTransform_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionToEuler_0_0) == 0x001220, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionToEuler_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathFloatRemap_0_0_0) == 0x001270, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathFloatRemap_0_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, ModifyBoneTransforms_3_0_0) == 0x0012A0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::ModifyBoneTransforms_3_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromEuler_0_1_1_0_0_0) == 0x001350, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromEuler_0_1_1_0_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorAdd) == 0x0013A0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorAdd' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_0) == 0x0013F0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetRelativeBoneTransform_1) == 0x001480, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetRelativeBoneTransform_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionToEuler_1) == 0x001520, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionToEuler_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathFloatRemap_0_1) == 0x001570, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathFloatRemap_0_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, ModifyBoneTransforms_3_1) == 0x0015A0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::ModifyBoneTransforms_3_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromEuler_0_1_1_0_1) == 0x001650, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromEuler_0_1_1_0_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable) == 0x0016A0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform) == 0x001810, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetRelativeBoneTransform_0_0_0) == 0x0018A0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetRelativeBoneTransform_0_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionToEuler_0_0_0) == 0x001940, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionToEuler_0_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathFloatRemap_0_0_0_0) == 0x001990, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathFloatRemap_0_0_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, ModifyBoneTransforms_3_0_0_0) == 0x0019C0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::ModifyBoneTransforms_3_0_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromEuler_0_1_1_0_0_0_0) == 0x001A70, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromEuler_0_1_1_0_0_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, ModifyBoneTransforms_3_1_0) == 0x001AC0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::ModifyBoneTransforms_3_1_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromEuler_0_1_1_0_1_0) == 0x001B70, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromEuler_0_1_1_0_1_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, AccumulateFloatLerp) == 0x001BC0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::AccumulateFloatLerp' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, AccumulateFloatLerp_0) == 0x001BE0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::AccumulateFloatLerp_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, AccumulateFloatLerp_0_0) == 0x001C00, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::AccumulateFloatLerp_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, AccumulateFloatLerp_0_1) == 0x001C20, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::AccumulateFloatLerp_0_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, AccumulateFloatLerp_0_1_0) == 0x001C40, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::AccumulateFloatLerp_0_1_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, BeginExecution_0) == 0x001C60, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::BeginExecution_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathTransformMakeRelative) == 0x001CE0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathTransformMakeRelative' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_2) == 0x001E10, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_2' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_3) == 0x001EA0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_3' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorClamp) == 0x001F30, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorClamp' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathTransformMul) == 0x001FA0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathTransformMul' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_3) == 0x0020D0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_3' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, SetBoneTransform) == 0x002240, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::SetBoneTransform' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_3_0) == 0x0023C0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_3_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathFloatAdd) == 0x002530, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathFloatAdd' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorMul) == 0x002548, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorMul' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorMul_0) == 0x002598, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorMul_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorUnit) == 0x0025E8, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorUnit' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorLength) == 0x002620, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorLength' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathFloatClamp) == 0x002648, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathFloatClamp' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorScale) == 0x002660, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorScale' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorAdd_0) == 0x0026A0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorAdd_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugArc) == 0x0026F0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugArc' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromEuler) == 0x002870, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromEuler' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathTransformMul_0) == 0x0028C0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathTransformMul_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionGetAxis_0_0) == 0x0029F0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionGetAxis_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_0_0) == 0x002A40, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorSub_0_0) == 0x002BB0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorSub_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionFromTwoVectors_0_0) == 0x002C00, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionFromTwoVectors_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathQuaternionMul_0_0) == 0x002C60, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathQuaternionMul_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, SetBoneRotation_0_0) == 0x002CD0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::SetBoneRotation_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_1_0) == 0x002DB0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_1_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_2_0) == 0x002E40, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_2_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathTransformTransformVector_0_0) == 0x002FB0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathTransformTransformVector_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, DebugTransformMutable_1_0) == 0x003050, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::DebugTransformMutable_1_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorSelectBool_0) == 0x0031C0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorSelectBool_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, MathVectorAdd_1) == 0x003218, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::MathVectorAdd_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_0_0) == 0x003270, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_0_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, SetBoneTransform_0) == 0x003300, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::SetBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, SetBoneTransform_1) == 0x003480, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::SetBoneTransform_1' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_6) == 0x003600, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_6' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_7) == 0x003690, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_7' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_4) == 0x003720, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_4' has a wrong offset!");
static_assert(offsetof(UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C, GetBoneTransform_5) == 0x0037B0, "Member 'UF_MED_COD_Plaid_FaceAcc_CtrlRig1_C::GetBoneTransform_5' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass F_MED_COD_Plaid_FaceAcc_CtrlRig1.RigVMMemory_Literal
// 0x0278 (0x02A0 - 0x0028)
class F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	class FName                                   GetBoneTransform_Bone__Const;                      // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         GetBoneTransform_Space__Const;                     // 0x002C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitDebugTransformMode                    DebugTransformMutable_Mode__Const;                 // 0x002D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DebugTransformMutable_Color__Const;                // 0x0030(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTransformMutable_Thickness__Const;            // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTransformMutable_Scale__Const;                // 0x0044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   DebugTransformMutable_Space__Const;                // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DebugTransformMutable_WorldOffset__Const;          // 0x0050(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         DebugTransformMutable_bEnabled__Const : 1;         // 0x00B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyBoneTransforms_PerBone> ModifyBoneTransforms_3_1_BoneToModify__Const;      // 0x00B8(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   GetRelativeBoneTransform_1_Space__Const;           // 0x00C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EEulerRotationOrder                           MathQuaternionToEuler_1_RotationOrder__Const;      // 0x00CC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MathFloatRemap_0_1_SourceMinimum__Const;           // 0x00D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_1_SourceMaximum__Const;           // 0x00D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_1_TargetMaximum__Const;           // 0x00D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         MathFloatRemap_0_1_bClamp__Const : 1;              // 0x00DC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	EControlRigModifyBoneMode                     ModifyBoneTransforms_3_1_Mode__Const;              // 0x00DD(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyBoneTransforms_PerBone> ModifyBoneTransforms_3_BoneToModify__Const;        // 0x00E0(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   GetRelativeBoneTransform_Bone__Const;              // 0x00F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EEulerRotationOrder                           MathQuaternionToEuler_RotationOrder__Const;        // 0x00F4(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MathFloatRemap_0_SourceMaximum__Const;             // 0x00F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyBoneTransforms_PerBone> ModifyBoneTransforms_3_0_BoneToModify__Const;      // 0x0100(0x0010)(Edit, EditConst, NonTransactional)
	float                                         MathFloatRemap_0_0_SourceMaximum__Const;           // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyBoneTransforms_PerBone> ModifyBoneTransforms_3_0_0_BoneToModify__Const;    // 0x0118(0x0010)(Edit, EditConst, NonTransactional)
	float                                         MathFloatRemap_0_0_0_SourceMinimum__Const;         // 0x0128(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_0_0_SourceMaximum__Const;         // 0x012C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_ModifyBoneTransforms_PerBone> ModifyBoneTransforms_3_0_0_0_BoneToModify__Const;  // 0x0130(0x0010)(Edit, EditConst, NonTransactional)
	float                                         MathFloatRemap_0_0_0_0_SourceMaximum__Const;       // 0x0140(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   DebugTransformMutable_0_Space__Const;              // 0x0144(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EAxis                                         MathQuaternionGetAxis_0_Axis__Const;               // 0x0148(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GetBoneTransform_0_Bone__Const;                    // 0x014C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         GetBoneTransform_0_Space__Const;                   // 0x0150(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MathTransformTransformVector_0_Location__Const;    // 0x0158(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTransformMutable_2_Scale__Const;              // 0x0170(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTransformMutable_1_Scale__Const;              // 0x0174(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   DebugTransformMutable_3_Space__Const;              // 0x0178(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   SetBoneTransform_Bone__Const;                      // 0x017C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorMul_B__Const;                            // 0x0180(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorMul_0_B__Const;                          // 0x0198(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatClamp_Minimum__Const;                     // 0x01B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0xC];                                      // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DebugTransformMutable_3_0_Transform__Const;        // 0x01C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         DebugTransformMutable_3_0_Thickness__Const;        // 0x0220(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTransformMutable_3_0_Scale__Const;            // 0x0224(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_228[0x8];                                      // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DebugArc_Transform__Const;                         // 0x0230(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         DebugArc_Radius__Const;                            // 0x0290(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DebugArc_MaximumDegrees__Const;                    // 0x0294(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugArc_Detail__Const;                            // 0x0298(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   SetBoneTransform_0_Bone__Const;                    // 0x029C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_COD_Plaid_FaceAcc_CtrlRig1.RigVMMemory_Literal", true>();
	}
	static class F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal>();
	}
};
static_assert(alignof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal) == 0x000010, "Wrong alignment on F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal");
static_assert(sizeof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal) == 0x0002A0, "Wrong size on F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, GetBoneTransform_Bone__Const) == 0x000028, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::GetBoneTransform_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, GetBoneTransform_Space__Const) == 0x00002C, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::GetBoneTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_Mode__Const) == 0x00002D, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_Mode__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_Color__Const) == 0x000030, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_Color__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_Thickness__Const) == 0x000040, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_Thickness__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_Scale__Const) == 0x000044, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_Scale__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_Space__Const) == 0x000048, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_WorldOffset__Const) == 0x000050, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_WorldOffset__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, ModifyBoneTransforms_3_1_BoneToModify__Const) == 0x0000B8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::ModifyBoneTransforms_3_1_BoneToModify__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, GetRelativeBoneTransform_1_Space__Const) == 0x0000C8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::GetRelativeBoneTransform_1_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathQuaternionToEuler_1_RotationOrder__Const) == 0x0000CC, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathQuaternionToEuler_1_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_1_SourceMinimum__Const) == 0x0000D0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_1_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_1_SourceMaximum__Const) == 0x0000D4, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_1_TargetMaximum__Const) == 0x0000D8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_1_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, ModifyBoneTransforms_3_1_Mode__Const) == 0x0000DD, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::ModifyBoneTransforms_3_1_Mode__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, ModifyBoneTransforms_3_BoneToModify__Const) == 0x0000E0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::ModifyBoneTransforms_3_BoneToModify__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, GetRelativeBoneTransform_Bone__Const) == 0x0000F0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::GetRelativeBoneTransform_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathQuaternionToEuler_RotationOrder__Const) == 0x0000F4, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathQuaternionToEuler_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_SourceMaximum__Const) == 0x0000F8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, ModifyBoneTransforms_3_0_BoneToModify__Const) == 0x000100, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::ModifyBoneTransforms_3_0_BoneToModify__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_0_SourceMaximum__Const) == 0x000110, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_0_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, ModifyBoneTransforms_3_0_0_BoneToModify__Const) == 0x000118, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::ModifyBoneTransforms_3_0_0_BoneToModify__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_0_0_SourceMinimum__Const) == 0x000128, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_0_0_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_0_0_SourceMaximum__Const) == 0x00012C, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_0_0_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, ModifyBoneTransforms_3_0_0_0_BoneToModify__Const) == 0x000130, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::ModifyBoneTransforms_3_0_0_0_BoneToModify__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatRemap_0_0_0_0_SourceMaximum__Const) == 0x000140, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatRemap_0_0_0_0_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_0_Space__Const) == 0x000144, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_0_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathQuaternionGetAxis_0_Axis__Const) == 0x000148, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathQuaternionGetAxis_0_Axis__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, GetBoneTransform_0_Bone__Const) == 0x00014C, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::GetBoneTransform_0_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, GetBoneTransform_0_Space__Const) == 0x000150, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::GetBoneTransform_0_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathTransformTransformVector_0_Location__Const) == 0x000158, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathTransformTransformVector_0_Location__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_2_Scale__Const) == 0x000170, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_2_Scale__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_1_Scale__Const) == 0x000174, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_1_Scale__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_3_Space__Const) == 0x000178, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_3_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, SetBoneTransform_Bone__Const) == 0x00017C, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::SetBoneTransform_Bone__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathVectorMul_B__Const) == 0x000180, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathVectorMul_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathVectorMul_0_B__Const) == 0x000198, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathVectorMul_0_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, MathFloatClamp_Minimum__Const) == 0x0001B0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::MathFloatClamp_Minimum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_3_0_Transform__Const) == 0x0001C0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_3_0_Transform__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_3_0_Thickness__Const) == 0x000220, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_3_0_Thickness__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugTransformMutable_3_0_Scale__Const) == 0x000224, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugTransformMutable_3_0_Scale__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugArc_Transform__Const) == 0x000230, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugArc_Transform__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugArc_Radius__Const) == 0x000290, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugArc_Radius__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugArc_MaximumDegrees__Const) == 0x000294, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugArc_MaximumDegrees__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, DebugArc_Detail__Const) == 0x000298, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::DebugArc_Detail__Const' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal, SetBoneTransform_0_Bone__Const) == 0x00029C, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Literal::SetBoneTransform_0_Bone__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass F_MED_COD_Plaid_FaceAcc_CtrlRig1.RigVMMemory_Work
// 0x0EF8 (0x0F20 - 0x0028)
class F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x0070)(Edit, EditConst, NonTransactional)
	struct FTransform                             GetBoneTransform_Transform;                        // 0x00A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_CachedBone;                       // 0x0100(0x0010)(Edit, EditConst, NonTransactional)
	float                                         AccumulateFloatLerp_Result;                        // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_1_Result;                         // 0x0114(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionToEuler_1_Result;                    // 0x0118(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetRelativeBoneTransform_1_Transform;              // 0x0130(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_1_CachedBone;             // 0x0190(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_1_CachedSpace;            // 0x01A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_1_Value;                     // 0x01B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatRemap_0_1_Value;                          // 0x01D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 AccumulateFloatLerp_AccumulatedValue;              // 0x01D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyBoneTransforms_WorkData> ModifyBoneTransforms_3_1_WorkData;                 // 0x01E8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         AccumulateFloatLerp_0_Result;                      // 0x01F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_Result;                           // 0x01FC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionToEuler_Result;                      // 0x0200(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetRelativeBoneTransform_Transform;                // 0x0220(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_CachedBone;               // 0x0280(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_CachedSpace;              // 0x0290(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_Value;                       // 0x02A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatRemap_0_Value;                            // 0x02C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 AccumulateFloatLerp_0_AccumulatedValue;            // 0x02C8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyBoneTransforms_WorkData> ModifyBoneTransforms_3_WorkData;                   // 0x02D8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         AccumulateFloatLerp_0_0_Result;                    // 0x02E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_0_Result;                         // 0x02EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionToEuler_0_Result;                    // 0x02F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetRelativeBoneTransform_0_Transform;              // 0x0310(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_0_CachedBone;             // 0x0370(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_0_CachedSpace;            // 0x0380(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_0_Value;                     // 0x0390(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatRemap_0_0_Value;                          // 0x03B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 AccumulateFloatLerp_0_0_AccumulatedValue;          // 0x03B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyBoneTransforms_WorkData> ModifyBoneTransforms_3_0_WorkData;                 // 0x03C8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         AccumulateFloatLerp_0_1_Result;                    // 0x03D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_0_0_Result;                       // 0x03DC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionToEuler_0_0_Result;                  // 0x03E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetRelativeBoneTransform_0_0_Transform;            // 0x0400(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_0_0_CachedBone;           // 0x0460(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_0_0_CachedSpace;          // 0x0470(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_0_0_Value;                   // 0x0480(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatRemap_0_0_0_Value;                        // 0x04A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 AccumulateFloatLerp_0_1_AccumulatedValue;          // 0x04A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyBoneTransforms_WorkData> ModifyBoneTransforms_3_0_0_WorkData;               // 0x04B8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         AccumulateFloatLerp_0_1_0_Result;                  // 0x04C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_0_0_0_0_Result;                     // 0x04CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionToEuler_0_0_0_Result;                // 0x04D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetRelativeBoneTransform_0_0_0_Transform;          // 0x04F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_0_0_0_CachedBone;         // 0x0550(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              GetRelativeBoneTransform_0_0_0_CachedSpace;        // 0x0560(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_0_0_0_Value;                 // 0x0570(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatRemap_0_0_0_0_Value;                      // 0x0590(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 AccumulateFloatLerp_0_1_0_AccumulatedValue;        // 0x0598(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyBoneTransforms_WorkData> ModifyBoneTransforms_3_0_0_0_WorkData;             // 0x05A8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_5B8[0x8];                                      // 0x05B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MathQuaternionMul_0_Result;                        // 0x05C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionFromTwoVectors_0_Result;             // 0x05E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionGetAxis_0_Result;                    // 0x0600(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetBoneTransform_1_Transform;                      // 0x0620(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_1_CachedBone;                     // 0x0680(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionGetAxis_0_Quaternion;                // 0x0690(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathVectorSub_0_Result;                            // 0x06B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathTransformTransformVector_0_Result;             // 0x06C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetBoneTransform_0_Transform;                      // 0x06E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_0_CachedBone;                     // 0x0740(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorSub_0_B;                                 // 0x0750(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetBoneRotation_0_CachedBone;                      // 0x0768(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_778[0x8];                                      // 0x0778(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DebugTransformMutable_1_Transform__IO;             // 0x0780(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             MathTransformMul_0_Result;                         // 0x07E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             MathTransformMakeRelative_Local;                   // 0x0840(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             GetBoneTransform_3_Transform;                      // 0x08A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_3_CachedBone;                     // 0x0900(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             GetBoneTransform_2_Transform;                      // 0x0910(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_2_CachedBone;                     // 0x0970(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_0_Result;                            // 0x0980(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorMul_Result;                              // 0x0998(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorMul_A;                                   // 0x09B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorScale_Result;                            // 0x09C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorUnit_Result;                             // 0x09E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorMul_0_Result;                            // 0x09F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatClamp_Result;                             // 0x0A10(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathVectorLength_Result;                           // 0x0A14(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MathTransformMul_0_A__IO;                          // 0x0A20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             SetBoneTransform_Result;                           // 0x0A80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetBoneTransform_CachedBone;                       // 0x0AE0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             DebugTransformMutable_3_0_Transform__IO;           // 0x0AF0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionMul_0_0_Result;                      // 0x0B50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FQuat                                  MathQuaternionFromTwoVectors_0_0_Result;           // 0x0B70(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathQuaternionGetAxis_0_0_Result;                  // 0x0B90(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA8[0x8];                                      // 0x0BA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetBoneTransform_1_0_Transform;                    // 0x0BB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_1_0_CachedBone;                   // 0x0C10(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionGetAxis_0_0_Quaternion;              // 0x0C20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                MathVectorSub_0_0_Result;                          // 0x0C40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathTransformTransformVector_0_0_Result;           // 0x0C58(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetBoneTransform_0_0_Transform;                    // 0x0C70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_0_0_CachedBone;                   // 0x0CD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorSub_0_0_B;                               // 0x0CE0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetBoneRotation_0_0_CachedBone;                    // 0x0CF8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_D08[0x8];                                      // 0x0D08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DebugTransformMutable_1_0_Transform__IO;           // 0x0D10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             GetBoneTransform_5_Transform;                      // 0x0D70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_5_CachedBone;                     // 0x0DD0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             GetBoneTransform_4_Transform;                      // 0x0DE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetBoneTransform_4_CachedBone;                     // 0x0E40(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             SetBoneTransform_0_Transform__IO;                  // 0x0E50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             SetBoneTransform_0_Result;                         // 0x0EB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetBoneTransform_0_CachedBone;                     // 0x0F10(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_COD_Plaid_FaceAcc_CtrlRig1.RigVMMemory_Work", true>();
	}
	static class F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work>();
	}
};
static_assert(alignof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work) == 0x000010, "Wrong alignment on F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work");
static_assert(sizeof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work) == 0x000F20, "Wrong size on F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_Transform) == 0x0000A0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_CachedBone) == 0x000100, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_Result) == 0x000110, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_1_Result) == 0x000114, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_1_Result) == 0x000118, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_1_Transform) == 0x000130, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_1_CachedBone) == 0x000190, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_1_CachedSpace) == 0x0001A0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_1_CachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_1_Value) == 0x0001B0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_1_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_1_Value) == 0x0001D0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_1_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_AccumulatedValue) == 0x0001D8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_AccumulatedValue' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, ModifyBoneTransforms_3_1_WorkData) == 0x0001E8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::ModifyBoneTransforms_3_1_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_Result) == 0x0001F8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_Result) == 0x0001FC, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_Result) == 0x000200, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_Transform) == 0x000220, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_CachedBone) == 0x000280, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_CachedSpace) == 0x000290, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_CachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_Value) == 0x0002A0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_Value) == 0x0002C0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_AccumulatedValue) == 0x0002C8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_AccumulatedValue' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, ModifyBoneTransforms_3_WorkData) == 0x0002D8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::ModifyBoneTransforms_3_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_0_Result) == 0x0002E8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_0_Result) == 0x0002EC, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_0_Result) == 0x0002F0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_Transform) == 0x000310, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_CachedBone) == 0x000370, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_CachedSpace) == 0x000380, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_CachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_0_Value) == 0x000390, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_0_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_0_Value) == 0x0003B0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_0_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_0_AccumulatedValue) == 0x0003B8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_0_AccumulatedValue' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, ModifyBoneTransforms_3_0_WorkData) == 0x0003C8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::ModifyBoneTransforms_3_0_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_1_Result) == 0x0003D8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_0_0_Result) == 0x0003DC, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_0_0_Result) == 0x0003E0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_0_Transform) == 0x000400, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_0_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_0_CachedBone) == 0x000460, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_0_CachedSpace) == 0x000470, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_0_CachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_0_0_Value) == 0x000480, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_0_0_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_0_0_Value) == 0x0004A0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_0_0_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_1_AccumulatedValue) == 0x0004A8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_1_AccumulatedValue' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, ModifyBoneTransforms_3_0_0_WorkData) == 0x0004B8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::ModifyBoneTransforms_3_0_0_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_1_0_Result) == 0x0004C8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_1_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_0_0_0_Result) == 0x0004CC, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_0_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_0_0_0_Result) == 0x0004D0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_0_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_0_0_Transform) == 0x0004F0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_0_0_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_0_0_CachedBone) == 0x000550, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_0_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetRelativeBoneTransform_0_0_0_CachedSpace) == 0x000560, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetRelativeBoneTransform_0_0_0_CachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionToEuler_0_0_0_Value) == 0x000570, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionToEuler_0_0_0_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatRemap_0_0_0_0_Value) == 0x000590, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatRemap_0_0_0_0_Value' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, AccumulateFloatLerp_0_1_0_AccumulatedValue) == 0x000598, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::AccumulateFloatLerp_0_1_0_AccumulatedValue' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, ModifyBoneTransforms_3_0_0_0_WorkData) == 0x0005A8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::ModifyBoneTransforms_3_0_0_0_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionMul_0_Result) == 0x0005C0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionMul_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionFromTwoVectors_0_Result) == 0x0005E0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionFromTwoVectors_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionGetAxis_0_Result) == 0x000600, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionGetAxis_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_1_Transform) == 0x000620, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_1_CachedBone) == 0x000680, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_1_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionGetAxis_0_Quaternion) == 0x000690, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionGetAxis_0_Quaternion' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorSub_0_Result) == 0x0006B0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorSub_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathTransformTransformVector_0_Result) == 0x0006C8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathTransformTransformVector_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_0_Transform) == 0x0006E0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_0_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_0_CachedBone) == 0x000740, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorSub_0_B) == 0x000750, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorSub_0_B' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, SetBoneRotation_0_CachedBone) == 0x000768, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::SetBoneRotation_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, DebugTransformMutable_1_Transform__IO) == 0x000780, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::DebugTransformMutable_1_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathTransformMul_0_Result) == 0x0007E0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathTransformMul_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathTransformMakeRelative_Local) == 0x000840, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathTransformMakeRelative_Local' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_3_Transform) == 0x0008A0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_3_CachedBone) == 0x000900, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_3_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_2_Transform) == 0x000910, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_2_CachedBone) == 0x000970, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_2_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorAdd_0_Result) == 0x000980, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorAdd_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorMul_Result) == 0x000998, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorMul_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorMul_A) == 0x0009B0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorMul_A' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorScale_Result) == 0x0009C8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorScale_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorUnit_Result) == 0x0009E0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorUnit_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorMul_0_Result) == 0x0009F8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorMul_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathFloatClamp_Result) == 0x000A10, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathFloatClamp_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorLength_Result) == 0x000A14, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorLength_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathTransformMul_0_A__IO) == 0x000A20, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathTransformMul_0_A__IO' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, SetBoneTransform_Result) == 0x000A80, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::SetBoneTransform_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, SetBoneTransform_CachedBone) == 0x000AE0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::SetBoneTransform_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, DebugTransformMutable_3_0_Transform__IO) == 0x000AF0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::DebugTransformMutable_3_0_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionMul_0_0_Result) == 0x000B50, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionMul_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionFromTwoVectors_0_0_Result) == 0x000B70, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionFromTwoVectors_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionGetAxis_0_0_Result) == 0x000B90, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionGetAxis_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_1_0_Transform) == 0x000BB0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_1_0_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_1_0_CachedBone) == 0x000C10, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_1_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathQuaternionGetAxis_0_0_Quaternion) == 0x000C20, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathQuaternionGetAxis_0_0_Quaternion' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorSub_0_0_Result) == 0x000C40, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorSub_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathTransformTransformVector_0_0_Result) == 0x000C58, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathTransformTransformVector_0_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_0_0_Transform) == 0x000C70, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_0_0_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_0_0_CachedBone) == 0x000CD0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_0_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, MathVectorSub_0_0_B) == 0x000CE0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::MathVectorSub_0_0_B' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, SetBoneRotation_0_0_CachedBone) == 0x000CF8, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::SetBoneRotation_0_0_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, DebugTransformMutable_1_0_Transform__IO) == 0x000D10, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::DebugTransformMutable_1_0_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_5_Transform) == 0x000D70, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_5_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_5_CachedBone) == 0x000DD0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_5_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_4_Transform) == 0x000DE0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, GetBoneTransform_4_CachedBone) == 0x000E40, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::GetBoneTransform_4_CachedBone' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, SetBoneTransform_0_Transform__IO) == 0x000E50, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::SetBoneTransform_0_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, SetBoneTransform_0_Result) == 0x000EB0, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::SetBoneTransform_0_Result' has a wrong offset!");
static_assert(offsetof(F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work, SetBoneTransform_0_CachedBone) == 0x000F10, "Member 'F_MED_COD_Plaid_FaceAcc_CtrlRig1::URigVMMemory_Work::SetBoneTransform_0_CachedBone' has a wrong offset!");

}

