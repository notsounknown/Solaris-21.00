#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Resolve_MountedCannonAthena

#include "Basic.hpp"

#include "B_Resolve_MountedCannonAthena_classes.hpp"
#include "B_Resolve_MountedCannonAthena_parameters.hpp"


namespace SDK
{

// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.CloseOutOfAmmoGate
// (BlueprintCallable, BlueprintEvent)

void AB_Resolve_MountedCannonAthena_C::CloseOutOfAmmoGate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "CloseOutOfAmmoGate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.ExecuteUbergraph_B_Resolve_MountedCannonAthena
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::ExecuteUbergraph_B_Resolve_MountedCannonAthena(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "ExecuteUbergraph_B_Resolve_MountedCannonAthena");

	Params::B_Resolve_MountedCannonAthena_C_ExecuteUbergraph_B_Resolve_MountedCannonAthena Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.GetLaunchSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DesiredSpeed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::GetLaunchSpeed(float* DesiredSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "GetLaunchSpeed");

	Params::B_Resolve_MountedCannonAthena_C_GetLaunchSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DesiredSpeed != nullptr)
		*DesiredSpeed = Parms.DesiredSpeed;
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.IgnoreActorsLinkedToCannon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::IgnoreActorsLinkedToCannon(class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "IgnoreActorsLinkedToCannon");

	Params::B_Resolve_MountedCannonAthena_C_IgnoreActorsLinkedToCannon Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.IgnoreNearbyCollision
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::IgnoreNearbyCollision(class AFortPlayerPawn* Pawn, const struct FVector& LaunchDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "IgnoreNearbyCollision");

	Params::B_Resolve_MountedCannonAthena_C_IgnoreNearbyCollision Parms{};

	Parms.Pawn = Pawn;
	Parms.LaunchDirection = std::move(LaunchDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.Muzzle Flash FX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Persistent_Fire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::Muzzle_Flash_FX(bool Persistent_Fire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "Muzzle Flash FX");

	Params::B_Resolve_MountedCannonAthena_C_Muzzle_Flash_FX Parms{};

	Parms.Persistent_Fire = Persistent_Fire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OnFinishedCooling
// (Event, Protected, BlueprintEvent)

void AB_Resolve_MountedCannonAthena_C::OnFinishedCooling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OnFinishedCooling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OnHostVehicleSetup
// (Event, Public, BlueprintEvent)

void AB_Resolve_MountedCannonAthena_C::OnHostVehicleSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OnHostVehicleSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OnLaunchPawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchDir                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::OnLaunchPawn(class AFortPlayerPawn* Pawn, const struct FVector& LaunchDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OnLaunchPawn");

	Params::B_Resolve_MountedCannonAthena_C_OnLaunchPawn Parms{};

	Parms.Pawn = Pawn;
	Parms.LaunchDir = std::move(LaunchDir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OnLocalFailedToFireWhenOverheated
// (Event, Protected, BlueprintEvent)

void AB_Resolve_MountedCannonAthena_C::OnLocalFailedToFireWhenOverheated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OnLocalFailedToFireWhenOverheated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OnLocalTargetingChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsTargeting_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::OnLocalTargetingChanged_Event(bool bIsTargeting_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OnLocalTargetingChanged_Event");

	Params::B_Resolve_MountedCannonAthena_C_OnLocalTargetingChanged_Event Parms{};

	Parms.bIsTargeting_0 = bIsTargeting_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OnPlayWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPersistentFire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSecondaryFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OnPlayWeaponFireFX");

	Params::B_Resolve_MountedCannonAthena_C_OnPlayWeaponFireFX Parms{};

	Parms.bPersistentFire = bPersistentFire;
	Parms.bSecondaryFire = bSecondaryFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OnPreLaunchPawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchDir                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Resolve_MountedCannonAthena_C::OnPreLaunchPawn(class AFortPlayerPawn* Pawn, const struct FVector& LaunchDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OnPreLaunchPawn");

	Params::B_Resolve_MountedCannonAthena_C_OnPreLaunchPawn Parms{};

	Parms.Pawn = Pawn;
	Parms.LaunchDir = std::move(LaunchDir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.OpenOutOfAmmoGate
// (BlueprintCallable, BlueprintEvent)

void AB_Resolve_MountedCannonAthena_C::OpenOutOfAmmoGate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "OpenOutOfAmmoGate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Resolve_MountedCannonAthena_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Resolve_MountedCannonAthena.B_Resolve_MountedCannonAthena_C.GetActorSoundParams
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<struct FAudioParameter>          Params_0                                               (Parm, OutParm)

void AB_Resolve_MountedCannonAthena_C::GetActorSoundParams(TArray<struct FAudioParameter>* Params_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Resolve_MountedCannonAthena_C", "GetActorSoundParams");

	Params::B_Resolve_MountedCannonAthena_C_GetActorSoundParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);
}

}

