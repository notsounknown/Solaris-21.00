#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MountedCannon_PingTarget_Ring

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MountedCannon_PingTarget_Ring.W_MountedCannon_PingTarget_Ring_C
// 0x0020 (0x02D8 - 0x02B8)
class UW_MountedCannon_PingTarget_Ring_C final : public UUserWidget
{
public:
	class UBorder*                                RingBorder;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RingSizeBox;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetTargetColor(const struct FLinearColor& Color_0);
	void SetTargetSize(float SizeOverride);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MountedCannon_PingTarget_Ring_C">();
	}
	static class UW_MountedCannon_PingTarget_Ring_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MountedCannon_PingTarget_Ring_C>();
	}
};
static_assert(alignof(UW_MountedCannon_PingTarget_Ring_C) == 0x000008, "Wrong alignment on UW_MountedCannon_PingTarget_Ring_C");
static_assert(sizeof(UW_MountedCannon_PingTarget_Ring_C) == 0x0002D8, "Wrong size on UW_MountedCannon_PingTarget_Ring_C");
static_assert(offsetof(UW_MountedCannon_PingTarget_Ring_C, RingBorder) == 0x0002B8, "Member 'UW_MountedCannon_PingTarget_Ring_C::RingBorder' has a wrong offset!");
static_assert(offsetof(UW_MountedCannon_PingTarget_Ring_C, RingSizeBox) == 0x0002C0, "Member 'UW_MountedCannon_PingTarget_Ring_C::RingSizeBox' has a wrong offset!");
static_assert(offsetof(UW_MountedCannon_PingTarget_Ring_C, Color) == 0x0002C8, "Member 'UW_MountedCannon_PingTarget_Ring_C::Color' has a wrong offset!");

}

