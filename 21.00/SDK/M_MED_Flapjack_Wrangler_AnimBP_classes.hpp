#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_MED_Flapjack_Wrangler_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass M_MED_Flapjack_Wrangler_AnimBP.M_MED_Flapjack_Wrangler_AnimBP_C
// 0x3170 (0x3800 - 0x0690)
class UM_MED_Flapjack_Wrangler_AnimBP_C final : public UCustomCharacterPartAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0698(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06A0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x06C8(0x0180)(ContainsInstancedReference)
	uint8                                         Pad_848[0x8];                                      // 0x0848(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_2;                         // 0x0850(0x0980)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x11D0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x11F0(0x0020)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_4;                        // 0x1210(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1318(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1440(0x0128)()
	uint8                                         Pad_1568[0x8];                                     // 0x1568(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x1570(0x0510)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_3;                        // 0x1A80(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_2;                        // 0x1B88(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_1;                        // 0x1C90(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint;                          // 0x1D98(0x0108)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_1;                         // 0x1EA0(0x0980)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x2820(0x0980)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x31A0(0x0128)()
	uint8                                         Pad_32C8[0x8];                                     // 0x32C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x32D0(0x0510)()
	struct FVector                                WindVector;                                        // 0x37E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_M_MED_Flapjack_Wrangler_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_MED_Flapjack_Wrangler_AnimBP_C">();
	}
	static class UM_MED_Flapjack_Wrangler_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_MED_Flapjack_Wrangler_AnimBP_C>();
	}
};
static_assert(alignof(UM_MED_Flapjack_Wrangler_AnimBP_C) == 0x000010, "Wrong alignment on UM_MED_Flapjack_Wrangler_AnimBP_C");
static_assert(sizeof(UM_MED_Flapjack_Wrangler_AnimBP_C) == 0x003800, "Wrong size on UM_MED_Flapjack_Wrangler_AnimBP_C");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, UberGraphFrame) == 0x000690, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000698, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimBlueprintExtension_Base) == 0x0006A0, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_CopyPoseFromMesh) == 0x0006C8, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_RigidBody_2) == 0x000850, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_RigidBody_2' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0011D0, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0011F0, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_Constraint_4) == 0x001210, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_Constraint_4' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_ModifyBone_2) == 0x001318, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x001440, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_AnimDynamics_1) == 0x001570, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_Constraint_3) == 0x001A80, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_Constraint_3' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_Constraint_2) == 0x001B88, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_Constraint_2' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_Constraint_1) == 0x001C90, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_Constraint_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_Constraint) == 0x001D98, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_Constraint' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_RigidBody_1) == 0x001EA0, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_RigidBody_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_RigidBody) == 0x002820, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_ModifyBone) == 0x0031A0, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, AnimGraphNode_AnimDynamics) == 0x0032D0, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UM_MED_Flapjack_Wrangler_AnimBP_C, WindVector) == 0x0037E0, "Member 'UM_MED_Flapjack_Wrangler_AnimBP_C::WindVector' has a wrong offset!");

}

