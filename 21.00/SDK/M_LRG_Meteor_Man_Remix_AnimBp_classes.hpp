#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_LRG_Meteor_Man_Remix_AnimBp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass M_LRG_Meteor_Man_Remix_AnimBp.M_LRG_Meteor_Man_Remix_AnimBp_C
// 0x14A0 (0x1B30 - 0x0690)
class UM_LRG_Meteor_Man_Remix_AnimBp_C final : public UCustomCharacterPartAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0698(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06A0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x06C8(0x0180)(ContainsInstancedReference)
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_8;                        // 0x0848(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_7;                        // 0x0950(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0A58(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0A78(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x0A98(0x0128)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_6;                        // 0x0BC0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_5;                        // 0x0CC8(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_4;                        // 0x0DD0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x0ED8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x1000(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x1128(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1250(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1378(0x0128)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_3;                        // 0x14A0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_2;                        // 0x15A8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x16B0(0x0128)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_1;                        // 0x17D8(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint;                          // 0x18E0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x19E8(0x0128)()
	float                                         legSwingDelta_r;                                   // 0x1B10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         legSwingDelta_l;                                   // 0x1B14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmSwingDelta_R;                                   // 0x1B18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmSwingDelta_L;                                   // 0x1B1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmSwingDeltaINV_R;                                // 0x1B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IsSkydiving;                                       // 0x1B24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParachuteOpened;                                   // 0x1B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FloatOrDive;                                       // 0x1B2C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_M_LRG_Meteor_Man_Remix_AnimBp_AnimGraphNode_ModifyBone_AAF87350476B3166AD5C65843589C074();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_M_LRG_Meteor_Man_Remix_AnimBp_AnimGraphNode_ModifyBone_F4C9210E4558E3C7B12B71AADB4234A9();
	void ExecuteUbergraph_M_LRG_Meteor_Man_Remix_AnimBp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_LRG_Meteor_Man_Remix_AnimBp_C">();
	}
	static class UM_LRG_Meteor_Man_Remix_AnimBp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_LRG_Meteor_Man_Remix_AnimBp_C>();
	}
};
static_assert(alignof(UM_LRG_Meteor_Man_Remix_AnimBp_C) == 0x000010, "Wrong alignment on UM_LRG_Meteor_Man_Remix_AnimBp_C");
static_assert(sizeof(UM_LRG_Meteor_Man_Remix_AnimBp_C) == 0x001B30, "Wrong size on UM_LRG_Meteor_Man_Remix_AnimBp_C");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, UberGraphFrame) == 0x000690, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimBlueprintExtension_PropertyAccess) == 0x000698, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimBlueprintExtension_Base) == 0x0006A0, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_CopyPoseFromMesh) == 0x0006C8, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_8) == 0x000848, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_8' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_7) == 0x000950, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_7' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_LocalToComponentSpace) == 0x000A58, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ComponentToLocalSpace) == 0x000A78, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone_7) == 0x000A98, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_6) == 0x000BC0, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_6' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_5) == 0x000CC8, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_5' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_4) == 0x000DD0, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_4' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone_6) == 0x000ED8, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone_5) == 0x001000, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone_4) == 0x001128, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone_3) == 0x001250, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone_2) == 0x001378, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_3) == 0x0014A0, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_3' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_2) == 0x0015A8, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_2' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone_1) == 0x0016B0, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint_1) == 0x0017D8, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint_1' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_Constraint) == 0x0018E0, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_Constraint' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, AnimGraphNode_ModifyBone) == 0x0019E8, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, legSwingDelta_r) == 0x001B10, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::legSwingDelta_r' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, legSwingDelta_l) == 0x001B14, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::legSwingDelta_l' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, ArmSwingDelta_R) == 0x001B18, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::ArmSwingDelta_R' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, ArmSwingDelta_L) == 0x001B1C, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::ArmSwingDelta_L' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, ArmSwingDeltaINV_R) == 0x001B20, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::ArmSwingDeltaINV_R' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, IsSkydiving) == 0x001B24, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::IsSkydiving' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, ParachuteOpened) == 0x001B28, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::ParachuteOpened' has a wrong offset!");
static_assert(offsetof(UM_LRG_Meteor_Man_Remix_AnimBp_C, FloatOrDive) == 0x001B2C, "Member 'UM_LRG_Meteor_Man_Remix_AnimBp_C::FloatOrDive' has a wrong offset!");

}

