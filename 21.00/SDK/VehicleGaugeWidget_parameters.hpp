#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleGaugeWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.ExecuteUbergraph_VehicleGaugeWidget
// 0x00C8 (0x00C8 - 0x0000)
struct VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NormalizedSpeed;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RawSpeed;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_4;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInfiniteFuel;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUsesRechargeableBoost;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BoostPercent;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_FuelPercentage;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLowOnFuel;                         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NormalizedRPM;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewVisibility;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget) == 0x000008, "Wrong alignment on VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget");
static_assert(sizeof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget) == 0x0000C8, "Wrong size on VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, EntryPoint) == 0x000000, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, Temp_byte_Variable) == 0x000004, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, Temp_byte_Variable_1) == 0x000005, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, Temp_bool_Variable) == 0x000006, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, Temp_byte_Variable_2) == 0x000007, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, Temp_byte_Variable_3) == 0x000008, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_IsDesignTime) == 0x000018, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000030, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000038, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000050, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000058, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000060, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000068, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_NormalizedSpeed) == 0x000070, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_NormalizedSpeed' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_RawSpeed) == 0x000074, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_RawSpeed' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x000078, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_GetDynamicMaterial_ReturnValue_4) == 0x000080, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_GetDynamicMaterial_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, Temp_bool_Variable_1) == 0x000088, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x000090, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_bInfiniteFuel) == 0x000098, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_bInfiniteFuel' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_bUsesRechargeableBoost) == 0x000099, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_bUsesRechargeableBoost' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Select_Default) == 0x00009A, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Select_Default_1) == 0x00009B, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A0, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000A8, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_BoostPercent) == 0x0000B0, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_BoostPercent' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_FuelPercentage) == 0x0000B4, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_FuelPercentage' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_bIsLowOnFuel) == 0x0000B8, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_bIsLowOnFuel' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_NormalizedRPM) == 0x0000BC, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_NormalizedRPM' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget, K2Node_Event_bNewVisibility) == 0x0000C0, "Member 'VehicleGaugeWidget_C_ExecuteUbergraph_VehicleGaugeWidget::K2Node_Event_bNewVisibility' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.OnFuelValueChanged
// 0x0008 (0x0008 - 0x0000)
struct VehicleGaugeWidget_C_OnFuelValueChanged final
{
public:
	float                                         FuelPercentage;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLowOnFuel;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_OnFuelValueChanged) == 0x000004, "Wrong alignment on VehicleGaugeWidget_C_OnFuelValueChanged");
static_assert(sizeof(VehicleGaugeWidget_C_OnFuelValueChanged) == 0x000008, "Wrong size on VehicleGaugeWidget_C_OnFuelValueChanged");
static_assert(offsetof(VehicleGaugeWidget_C_OnFuelValueChanged, FuelPercentage) == 0x000000, "Member 'VehicleGaugeWidget_C_OnFuelValueChanged::FuelPercentage' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_OnFuelValueChanged, bIsLowOnFuel) == 0x000004, "Member 'VehicleGaugeWidget_C_OnFuelValueChanged::bIsLowOnFuel' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.OnRPMChanged
// 0x0004 (0x0004 - 0x0000)
struct VehicleGaugeWidget_C_OnRPMChanged final
{
public:
	float                                         NormalizedRPM;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_OnRPMChanged) == 0x000004, "Wrong alignment on VehicleGaugeWidget_C_OnRPMChanged");
static_assert(sizeof(VehicleGaugeWidget_C_OnRPMChanged) == 0x000004, "Wrong size on VehicleGaugeWidget_C_OnRPMChanged");
static_assert(offsetof(VehicleGaugeWidget_C_OnRPMChanged, NormalizedRPM) == 0x000000, "Member 'VehicleGaugeWidget_C_OnRPMChanged::NormalizedRPM' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.OnUpdateRechargeableBoostPercent
// 0x0004 (0x0004 - 0x0000)
struct VehicleGaugeWidget_C_OnUpdateRechargeableBoostPercent final
{
public:
	float                                         BoostPercent;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_OnUpdateRechargeableBoostPercent) == 0x000004, "Wrong alignment on VehicleGaugeWidget_C_OnUpdateRechargeableBoostPercent");
static_assert(sizeof(VehicleGaugeWidget_C_OnUpdateRechargeableBoostPercent) == 0x000004, "Wrong size on VehicleGaugeWidget_C_OnUpdateRechargeableBoostPercent");
static_assert(offsetof(VehicleGaugeWidget_C_OnUpdateRechargeableBoostPercent, BoostPercent) == 0x000000, "Member 'VehicleGaugeWidget_C_OnUpdateRechargeableBoostPercent::BoostPercent' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.OnWidgetVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct VehicleGaugeWidget_C_OnWidgetVisibilityChanged final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_OnWidgetVisibilityChanged) == 0x000001, "Wrong alignment on VehicleGaugeWidget_C_OnWidgetVisibilityChanged");
static_assert(sizeof(VehicleGaugeWidget_C_OnWidgetVisibilityChanged) == 0x000001, "Wrong size on VehicleGaugeWidget_C_OnWidgetVisibilityChanged");
static_assert(offsetof(VehicleGaugeWidget_C_OnWidgetVisibilityChanged, bNewVisibility) == 0x000000, "Member 'VehicleGaugeWidget_C_OnWidgetVisibilityChanged::bNewVisibility' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct VehicleGaugeWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_PreConstruct) == 0x000001, "Wrong alignment on VehicleGaugeWidget_C_PreConstruct");
static_assert(sizeof(VehicleGaugeWidget_C_PreConstruct) == 0x000001, "Wrong size on VehicleGaugeWidget_C_PreConstruct");
static_assert(offsetof(VehicleGaugeWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'VehicleGaugeWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.SetVehicleHasInfiniteFuel
// 0x0001 (0x0001 - 0x0000)
struct VehicleGaugeWidget_C_SetVehicleHasInfiniteFuel final
{
public:
	bool                                          bInfiniteFuel;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_SetVehicleHasInfiniteFuel) == 0x000001, "Wrong alignment on VehicleGaugeWidget_C_SetVehicleHasInfiniteFuel");
static_assert(sizeof(VehicleGaugeWidget_C_SetVehicleHasInfiniteFuel) == 0x000001, "Wrong size on VehicleGaugeWidget_C_SetVehicleHasInfiniteFuel");
static_assert(offsetof(VehicleGaugeWidget_C_SetVehicleHasInfiniteFuel, bInfiniteFuel) == 0x000000, "Member 'VehicleGaugeWidget_C_SetVehicleHasInfiniteFuel::bInfiniteFuel' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.SetVehicleUsesRechargableBoost
// 0x0001 (0x0001 - 0x0000)
struct VehicleGaugeWidget_C_SetVehicleUsesRechargableBoost final
{
public:
	bool                                          bUsesRechargeableBoost;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_SetVehicleUsesRechargableBoost) == 0x000001, "Wrong alignment on VehicleGaugeWidget_C_SetVehicleUsesRechargableBoost");
static_assert(sizeof(VehicleGaugeWidget_C_SetVehicleUsesRechargableBoost) == 0x000001, "Wrong size on VehicleGaugeWidget_C_SetVehicleUsesRechargableBoost");
static_assert(offsetof(VehicleGaugeWidget_C_SetVehicleUsesRechargableBoost, bUsesRechargeableBoost) == 0x000000, "Member 'VehicleGaugeWidget_C_SetVehicleUsesRechargableBoost::bUsesRechargeableBoost' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.UpdateFuelChanged
// 0x0020 (0x0020 - 0x0000)
struct VehicleGaugeWidget_C_UpdateFuelChanged final
{
public:
	float                                         FuelPercent;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LowFuel;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_UpdateFuelChanged) == 0x000004, "Wrong alignment on VehicleGaugeWidget_C_UpdateFuelChanged");
static_assert(sizeof(VehicleGaugeWidget_C_UpdateFuelChanged) == 0x000020, "Wrong size on VehicleGaugeWidget_C_UpdateFuelChanged");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, FuelPercent) == 0x000000, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::FuelPercent' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, LowFuel) == 0x000004, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::LowFuel' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, Temp_bool_Variable) == 0x000005, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, Temp_byte_Variable) == 0x000006, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, K2Node_Select_Default) == 0x000008, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, Temp_byte_Variable_1) == 0x000018, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, Temp_bool_Variable_1) == 0x000019, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, K2Node_Select_Default_1) == 0x00001A, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateFuelChanged, CallFunc_Lerp_ReturnValue) == 0x00001C, "Member 'VehicleGaugeWidget_C_UpdateFuelChanged::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function VehicleGaugeWidget.VehicleGaugeWidget_C.UpdateSpeedometer
// 0x0008 (0x0008 - 0x0000)
struct VehicleGaugeWidget_C_UpdateSpeedometer final
{
public:
	float                                         NormalizedSpeed;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RawSpeed;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleGaugeWidget_C_UpdateSpeedometer) == 0x000004, "Wrong alignment on VehicleGaugeWidget_C_UpdateSpeedometer");
static_assert(sizeof(VehicleGaugeWidget_C_UpdateSpeedometer) == 0x000008, "Wrong size on VehicleGaugeWidget_C_UpdateSpeedometer");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateSpeedometer, NormalizedSpeed) == 0x000000, "Member 'VehicleGaugeWidget_C_UpdateSpeedometer::NormalizedSpeed' has a wrong offset!");
static_assert(offsetof(VehicleGaugeWidget_C_UpdateSpeedometer, RawSpeed) == 0x000004, "Member 'VehicleGaugeWidget_C_UpdateSpeedometer::RawSpeed' has a wrong offset!");

}

