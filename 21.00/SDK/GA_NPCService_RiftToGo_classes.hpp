#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_NPCService_RiftToGo

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C
// 0x0020 (0x0B30 - 0x0B10)
class UGA_NPCService_RiftToGo_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggerDuration;                                   // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RiftItemHolster;                                   // 0x0B24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EquippingCue;                                      // 0x0B28(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Triggered_1FE8A3C2442D03AE8B7A639836B5A08F(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void Is_Flying(bool* NewParam);
	void ExecuteUbergraph_GA_NPCService_RiftToGo(int32 EntryPoint);
	void Completed_1FE8A3C2442D03AE8B7A639836B5A08F(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_NPCService_RiftToGo_C">();
	}
	static class UGA_NPCService_RiftToGo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_NPCService_RiftToGo_C>();
	}
};
static_assert(alignof(UGA_NPCService_RiftToGo_C) == 0x000008, "Wrong alignment on UGA_NPCService_RiftToGo_C");
static_assert(sizeof(UGA_NPCService_RiftToGo_C) == 0x000B30, "Wrong size on UGA_NPCService_RiftToGo_C");
static_assert(offsetof(UGA_NPCService_RiftToGo_C, UberGraphFrame) == 0x000B10, "Member 'UGA_NPCService_RiftToGo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_NPCService_RiftToGo_C, PlayerPawn) == 0x000B18, "Member 'UGA_NPCService_RiftToGo_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_NPCService_RiftToGo_C, TriggerDuration) == 0x000B20, "Member 'UGA_NPCService_RiftToGo_C::TriggerDuration' has a wrong offset!");
static_assert(offsetof(UGA_NPCService_RiftToGo_C, RiftItemHolster) == 0x000B24, "Member 'UGA_NPCService_RiftToGo_C::RiftItemHolster' has a wrong offset!");
static_assert(offsetof(UGA_NPCService_RiftToGo_C, EquippingCue) == 0x000B28, "Member 'UGA_NPCService_RiftToGo_C::EquippingCue' has a wrong offset!");

}

