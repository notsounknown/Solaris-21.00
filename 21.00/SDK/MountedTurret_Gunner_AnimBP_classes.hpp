#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MountedTurret_Gunner_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "MountedTurret_Gunner_AnimBP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MountedTurret_Gunner_AnimBP.MountedTurret_Gunner_AnimBP_C
// 0x0760 (0x28E0 - 0x2180)
class UMountedTurret_Gunner_AnimBP_C final : public UFortPlayerAnimInstance_MountedTurret
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2180(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct MountedTurret_Gunner_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x2188(0x0014)(HasGetValueTypeHash)
	uint8                                         Pad_219C[0x4];                                     // 0x219C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x21A0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x21A8(0x0008)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x21B0(0x00F8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x22A8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x22C8(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x22E8(0x00F8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x23E0(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x2400(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x2448(0x0040)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x2488(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2550(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x2598(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x25E0(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x26A8(0x0010)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x26B8(0x0040)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x26F8(0x0110)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x2808(0x0010)()
	struct FVector                                LocalLeftOffset;                                   // 0x2818(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldPosLeft;                                      // 0x2830(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotLeftOffset;                                // 0x2848(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               WorldRotLeft;                                      // 0x2860(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LocalRightOffset;                                  // 0x2878(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotRightOffset;                               // 0x2890(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               WorldRotRight;                                     // 0x28A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldPosRight;                                     // 0x28C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isTurning;                                         // 0x28D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_MountedTurret_Gunner_AnimBP_AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87();
	void ExecuteUbergraph_MountedTurret_Gunner_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MountedTurret_Gunner_AnimBP_C">();
	}
	static class UMountedTurret_Gunner_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMountedTurret_Gunner_AnimBP_C>();
	}
};
static_assert(alignof(UMountedTurret_Gunner_AnimBP_C) == 0x000010, "Wrong alignment on UMountedTurret_Gunner_AnimBP_C");
static_assert(sizeof(UMountedTurret_Gunner_AnimBP_C) == 0x0028E0, "Wrong size on UMountedTurret_Gunner_AnimBP_C");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, UberGraphFrame) == 0x002180, "Member 'UMountedTurret_Gunner_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, __AnimBlueprintMutables) == 0x002188, "Member 'UMountedTurret_Gunner_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x0021A0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimBlueprintExtension_Base) == 0x0021A8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LegIK_1) == 0x0021B0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0022A8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0022C8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LegIK) == 0x0022E8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Root) == 0x0023E0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Slot_1) == 0x002400, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_SequenceEvaluator) == 0x002448, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x002488, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Slot) == 0x002550, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x002598, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x0025E0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_IdentityPose_1) == 0x0026A8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0026B8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0026F8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_IdentityPose) == 0x002808, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalLeftOffset) == 0x002818, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldPosLeft) == 0x002830, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldPosLeft' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRotLeftOffset) == 0x002848, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRotLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldRotLeft) == 0x002860, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldRotLeft' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRightOffset) == 0x002878, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRotRightOffset) == 0x002890, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRotRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldRotRight) == 0x0028A8, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldRotRight' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldPosRight) == 0x0028C0, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldPosRight' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, isTurning) == 0x0028D8, "Member 'UMountedTurret_Gunner_AnimBP_C::isTurning' has a wrong offset!");

}

