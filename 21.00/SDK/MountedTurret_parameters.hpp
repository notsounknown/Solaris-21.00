#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MountedTurret

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function MountedTurret.MountedTurret_C.BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MountedTurret_C_BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature final
{
public:
	EFortWeaponOverheatState                      OverheatState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on MountedTurret_C_BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature");
static_assert(sizeof(MountedTurret_C_BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature) == 0x000001, "Wrong size on MountedTurret_C_BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature");
static_assert(offsetof(MountedTurret_C_BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature, OverheatState) == 0x000000, "Member 'MountedTurret_C_BndEvt__FortVehicleAimingWeaponComp_K2Node_ComponentBoundEvent_0_OnOverheatStateChanged__DelegateSignature::OverheatState' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on MountedTurret_C_BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature");
static_assert(sizeof(MountedTurret_C_BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature) == 0x000008, "Wrong size on MountedTurret_C_BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature");
static_assert(offsetof(MountedTurret_C_BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature, DamageCauser) == 0x000000, "Member 'MountedTurret_C_BndEvt__MountedCannon__v2_FortLinkToActorComp_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature::DamageCauser' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.BP_CanInteract
// 0x0148 (0x0148 - 0x0000)
struct MountedTurret_C_BP_CanInteract final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0060(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_BP_CanInteract) == 0x000008, "Wrong alignment on MountedTurret_C_BP_CanInteract");
static_assert(sizeof(MountedTurret_C_BP_CanInteract) == 0x000148, "Wrong size on MountedTurret_C_BP_CanInteract");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, InController) == 0x000000, "Member 'MountedTurret_C_BP_CanInteract::InController' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, ReturnValue) == 0x000008, "Member 'MountedTurret_C_BP_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, Temp_object_Variable) == 0x000038, "Member 'MountedTurret_C_BP_CanInteract::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_GetSocketLocation_ReturnValue) == 0x000048, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_LineTraceSingle_OutHit) == 0x000060, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_LineTraceSingle_ReturnValue) == 0x000140, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.CurrentOverheatScalar
// 0x0020 (0x0020 - 0x0000)
struct MountedTurret_C_CurrentOverheatScalar final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentOverheatValue_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOverheatingMaxValue_ReturnValue;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_CurrentOverheatScalar) == 0x000004, "Wrong alignment on MountedTurret_C_CurrentOverheatScalar");
static_assert(sizeof(MountedTurret_C_CurrentOverheatScalar) == 0x000020, "Wrong size on MountedTurret_C_CurrentOverheatScalar");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, ReturnValue) == 0x000000, "Member 'MountedTurret_C_CurrentOverheatScalar::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_GetCurrentOverheatValue_ReturnValue) == 0x000008, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_GetCurrentOverheatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_GetOverheatingMaxValue_ReturnValue) == 0x00000C, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_GetOverheatingMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000018, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.Event On Weapon Fired
// 0x0002 (0x0002 - 0x0000)
struct MountedTurret_C_Event_On_Weapon_Fired final
{
public:
	EDualWeaponHand                               Hand;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPersistantFire;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_Event_On_Weapon_Fired) == 0x000001, "Wrong alignment on MountedTurret_C_Event_On_Weapon_Fired");
static_assert(sizeof(MountedTurret_C_Event_On_Weapon_Fired) == 0x000002, "Wrong size on MountedTurret_C_Event_On_Weapon_Fired");
static_assert(offsetof(MountedTurret_C_Event_On_Weapon_Fired, Hand) == 0x000000, "Member 'MountedTurret_C_Event_On_Weapon_Fired::Hand' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_Event_On_Weapon_Fired, bPersistantFire) == 0x000001, "Member 'MountedTurret_C_Event_On_Weapon_Fired::bPersistantFire' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.ExecuteUbergraph_MountedTurret
// 0x06F0 (0x06F0 - 0x0000)
struct MountedTurret_C_ExecuteUbergraph_MountedTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0048(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0068(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x0078(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x0088(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0098(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x00A8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x00C4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x00D4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x00E4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x00F4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x0104(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x0114(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x0128(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x0138(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x0148(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x0158(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x0168(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x017C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x018C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x019C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x01AC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_25;           // 0x01BC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_26;           // 0x01D0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x01DC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_28;           // 0x01F0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x0200(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x0210(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_31;           // 0x0220(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_32;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x0234(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0248(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0280(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0370(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn_1;                         // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SeatIdx;                              // 0x03C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOperatingTurret_ReturnValue;            // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerGameplay*          K2Node_DynamicCast_AsFort_Player_Controller_Gameplay; // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x2];                                      // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_33;                  // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn;                           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ExitSocketName;                       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x040C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDualWeaponHand                               K2Node_CustomEvent_Hand;                           // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPersistantFire;                // 0x0416(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417[0x1];                                      // 0x0417(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeaponRangedDual*                  K2Node_DynamicCast_AsFort_Weapon_Ranged_Dual;      // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x2];                                      // 0x0422(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x0424(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hide;                           // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43A[0x2];                                      // 0x043A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_6;                              // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_30;                  // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle;     // 0x0450(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0468(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_34;           // 0x0470(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobilePlatform_ReturnValue;             // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_493[0x1];                                      // 0x0493(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x04B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_34;                  // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput;         // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_35;           // 0x04F0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_MountedTurret_C*                K2Node_DynamicCast_AsAnim_BP_Mounted_Turret;       // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x2];                                      // 0x052A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0555(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0556(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557[0x1];                                      // 0x0557(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_Event_ExitingPawn_1;                        // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExitDuration;                         // 0x0568(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0570(0x00B0)()
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue_1; // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_ExitingPawn;                          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDualWeaponHand Hand, bool bPersistantFire)> K2Node_CreateDelegate_OutputDelegate_36;           // 0x0630(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0640(0x0020)()
	float                                         CallFunc_CurrentOverheatScalar_ReturnValue;        // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurrentValue;                   // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxValue;                       // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWeaponOverheatState                      K2Node_CustomEvent_State;                          // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsInCooldown;                  // 0x066D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66E[0x2];                                      // 0x066E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_675[0x3];                                      // 0x0675(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x067D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67E[0x2];                                      // 0x067E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_31;                  // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWeaponOverheatState                      K2Node_ComponentBoundEvent_OverheatState;          // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x068E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x068F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_37;           // 0x0694(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x06A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_38;           // 0x06C0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6; // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown)> K2Node_CreateDelegate_OutputDelegate_39;           // 0x06D8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_ExecuteUbergraph_MountedTurret) == 0x000008, "Wrong alignment on MountedTurret_C_ExecuteUbergraph_MountedTurret");
static_assert(sizeof(MountedTurret_C_ExecuteUbergraph_MountedTurret) == 0x0006F0, "Wrong size on MountedTurret_C_ExecuteUbergraph_MountedTurret");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, EntryPoint) == 0x000000, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_29) == 0x000004, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_28) == 0x000014, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_27) == 0x000024, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_26) == 0x000034, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_25) == 0x000044, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable) == 0x000054, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_Variable) == 0x000058, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_Variable_1) == 0x000059, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_float_Variable) == 0x00005C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_float_Variable_1) == 0x000060, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_24) == 0x000064, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_5) == 0x000068, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_23) == 0x000074, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_6) == 0x000078, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_22) == 0x000084, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_7) == 0x000088, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_21) == 0x000094, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_8) == 0x000098, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_20) == 0x0000A4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable_1) == 0x0000B4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetPlayLength_ReturnValue) == 0x0000BC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_19) == 0x0000C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000C4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_18) == 0x0000D0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000D4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_17) == 0x0000E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_12) == 0x0000E4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_16) == 0x0000F0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_13) == 0x0000F4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_15) == 0x000100, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_14) == 0x000104, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable_2) == 0x000110, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_15) == 0x000114, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_14) == 0x000120, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_13) == 0x000124, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_16) == 0x000128, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_12) == 0x000134, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_17) == 0x000138, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_11) == 0x000144, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_18) == 0x000148, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_10) == 0x000154, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_19) == 0x000158, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable_3) == 0x000164, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_20) == 0x000168, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_9) == 0x000174, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_8) == 0x000178, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_21) == 0x00017C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_7) == 0x000188, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_22) == 0x00018C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_6) == 0x000198, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_23) == 0x00019C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_5) == 0x0001A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_24) == 0x0001AC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable_4) == 0x0001B8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_25) == 0x0001BC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_26) == 0x0001D0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_27) == 0x0001DC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_4) == 0x0001E8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_3) == 0x0001EC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_28) == 0x0001F0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_2) == 0x0001FC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_29) == 0x000200, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_1) == 0x00020C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_30) == 0x000210, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName) == 0x00021C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_31) == 0x000220, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable_5) == 0x00022C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_32) == 0x000230, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_32' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_32) == 0x000234, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsDedicatedServer_ReturnValue) == 0x000240, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_Damage) == 0x000244, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_DamageTags) == 0x000248, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_Momentum) == 0x000268, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_HitInfo) == 0x000280, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_InstigatedBy) == 0x000360, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_DamageCauser) == 0x000368, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_EffectContext) == 0x000370, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000388, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0003A0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_PlayerPawn_1) == 0x0003B8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_PlayerPawn_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_SeatIdx) == 0x0003C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_SeatIdx' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0003C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsOperatingTurret_ReturnValue) == 0x0003D0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsOperatingTurret_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetController_ReturnValue) == 0x0003D8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_AsFort_Player_Controller_Gameplay) == 0x0003E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_AsFort_Player_Controller_Gameplay' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_bSuccess) == 0x0003E8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsLocallyControlled_ReturnValue) == 0x0003E9, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_33) == 0x0003EC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_33' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_PlayerPawn) == 0x0003F0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_ExitSocketName) == 0x0003F8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_ExitSocketName' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_EndPlayReason) == 0x0003FC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000400, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_HasAuthority_ReturnValue) == 0x000408, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x00040C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_1) == 0x000414, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_Hand) == 0x000415, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_Hand' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_bPersistantFire) == 0x000416, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_bPersistantFire' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_AsFort_Weapon_Ranged_Dual) == 0x000418, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_AsFort_Weapon_Ranged_Dual' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_bSuccess_1) == 0x000420, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000421, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_33) == 0x000424, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000430, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_Hide) == 0x000438, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_2) == 0x000439, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable_6) == 0x00043C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000440, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_30) == 0x000444, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_30' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000448, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_MakeStruct_GameplayEffectContextHandle) == 0x000450, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_MakeStruct_GameplayEffectContextHandle' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000468, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_34) == 0x000470, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Select_Default) == 0x000480, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000488, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_3) == 0x000490, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_HasAuthority_ReturnValue_1) == 0x000491, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsMobilePlatform_ReturnValue) == 0x000492, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsMobilePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Select_Default_1) == 0x000494, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetControlRotation_ReturnValue) == 0x000498, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0004B0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0004B8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0004C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_4) == 0x0004D8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_34) == 0x0004DC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_34' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_SetFloatParameter_self_CastInput) == 0x0004E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_35) == 0x0004F0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x000500, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x000508, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_5) == 0x000510, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_6) == 0x000511, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAnimInstance_ReturnValue) == 0x000518, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_AsAnim_BP_Mounted_Turret) == 0x000520, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_AsAnim_BP_Mounted_Turret' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_bSuccess_2) == 0x000528, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_7) == 0x000529, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_NormalizeAxis_ReturnValue) == 0x00052C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_Has_Been_Initd_Variable) == 0x000530, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_MapRangeClamped_ReturnValue) == 0x000534, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x000538, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_8) == 0x000540, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x000548, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Add_FloatFloat_ReturnValue) == 0x000550, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_9) == 0x000554, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_10) == 0x000555, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_11) == 0x000556, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000558, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_ExitingPawn_1) == 0x000560, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_ExitingPawn_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_ExitDuration) == 0x000568, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_ExitDuration' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_12) == 0x00056C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_MakeStruct_GameplayEventData) == 0x000570, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_RemoveActiveGameplayEffect_ReturnValue_1) == 0x000620, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_RemoveActiveGameplayEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_ExitingPawn) == 0x000628, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_ExitingPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_36) == 0x000630, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000640, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CurrentOverheatScalar_ReturnValue) == 0x000660, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CurrentOverheatScalar_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_CurrentValue) == 0x000664, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_CurrentValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_MaxValue) == 0x000668, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_MaxValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_State) == 0x00066C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_bIsInCooldown) == 0x00066D, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_bIsInCooldown' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000670, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000674, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_FTrunc_ReturnValue) == 0x000678, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00067C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_BooleanAND_ReturnValue) == 0x00067D, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName_31) == 0x000680, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName_31' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000684, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000688, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_IsClosed_Variable) == 0x00068C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_ComponentBoundEvent_OverheatState) == 0x00068D, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_ComponentBoundEvent_OverheatState' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_HasAuthority_ReturnValue_2) == 0x00068E, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00068F, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_13) == 0x000690, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_37) == 0x000694, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0006A0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Array_Add_ReturnValue) == 0x0006A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Array_Add_ReturnValue_1) == 0x0006AC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Array_Add_ReturnValue_2) == 0x0006B0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Array_Add_ReturnValue_3) == 0x0006B4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Array_Add_ReturnValue_4) == 0x0006B8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Array_Add_ReturnValue_5) == 0x0006BC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_38) == 0x0006C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6) == 0x0006D0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate_39) == 0x0006D8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue_14) == 0x0006E4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_ComponentBoundEvent_DamageCauser) == 0x0006E8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.HideQuickBarForAbility
// 0x0001 (0x0001 - 0x0000)
struct MountedTurret_C_HideQuickBarForAbility final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_HideQuickBarForAbility) == 0x000001, "Wrong alignment on MountedTurret_C_HideQuickBarForAbility");
static_assert(sizeof(MountedTurret_C_HideQuickBarForAbility) == 0x000001, "Wrong size on MountedTurret_C_HideQuickBarForAbility");
static_assert(offsetof(MountedTurret_C_HideQuickBarForAbility, Hide) == 0x000000, "Member 'MountedTurret_C_HideQuickBarForAbility::Hide' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong size on MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_43B2536B49D71F6DB759A49367555C0D
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong size on MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_761292E24A89E794B70E9C9206892380
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong size on MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_BE998F90462B0AB8D888EB90F677D680
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong size on MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_C545F8F445E4AE78043EFD8678F12483
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong size on MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_DC5D83234D74654A536804AC35F92FE4
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong size on MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(sizeof(MountedTurret_C_OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong size on MountedTurret_C_OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(offsetof(MountedTurret_C_OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_F3BC573B4FBE468D904567BB4DB89D59::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong size on MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_43B2536B49D71F6DB759A49367555C0D
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong size on MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_761292E24A89E794B70E9C9206892380
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong size on MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_BE998F90462B0AB8D888EB90F677D680
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong size on MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_C545F8F445E4AE78043EFD8678F12483
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong size on MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_DC5D83234D74654A536804AC35F92FE4
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong size on MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_F3BC573B4FBE468D904567BB4DB89D59
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnCompleted_F3BC573B4FBE468D904567BB4DB89D59 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(sizeof(MountedTurret_C_OnCompleted_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong size on MountedTurret_C_OnCompleted_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(offsetof(MountedTurret_C_OnCompleted_F3BC573B4FBE468D904567BB4DB89D59, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_F3BC573B4FBE468D904567BB4DB89D59::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnDeathPlayEffects
// 0x0148 (0x0148 - 0x0000)
struct MountedTurret_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MountedTurret_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on MountedTurret_C_OnDeathPlayEffects");
static_assert(sizeof(MountedTurret_C_OnDeathPlayEffects) == 0x000148, "Wrong size on MountedTurret_C_OnDeathPlayEffects");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'MountedTurret_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'MountedTurret_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'MountedTurret_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'MountedTurret_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, InstigatedBy) == 0x000120, "Member 'MountedTurret_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, DamageCauser) == 0x000128, "Member 'MountedTurret_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, EffectContext) == 0x000130, "Member 'MountedTurret_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnGetExitSocketTransform
// 0x01F0 (0x01F0 - 0x0000)
struct MountedTurret_C_OnGetExitSocketTransform final
{
public:
	class FName                                   ExitSocket;                                        // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SocketIndex;                                       // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InTransform;                                       // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bOutOverriderExitSocket;                           // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutOverrideTransform;                              // 0x0080(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0060)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MountedTurret_C_OnGetExitSocketTransform) == 0x000010, "Wrong alignment on MountedTurret_C_OnGetExitSocketTransform");
static_assert(sizeof(MountedTurret_C_OnGetExitSocketTransform) == 0x0001F0, "Wrong size on MountedTurret_C_OnGetExitSocketTransform");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, ExitSocket) == 0x000000, "Member 'MountedTurret_C_OnGetExitSocketTransform::ExitSocket' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, SocketIndex) == 0x000004, "Member 'MountedTurret_C_OnGetExitSocketTransform::SocketIndex' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, InTransform) == 0x000010, "Member 'MountedTurret_C_OnGetExitSocketTransform::InTransform' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, bOutOverriderExitSocket) == 0x000070, "Member 'MountedTurret_C_OnGetExitSocketTransform::bOutOverriderExitSocket' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, OutOverrideTransform) == 0x000080, "Member 'MountedTurret_C_OnGetExitSocketTransform::OutOverrideTransform' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_BreakTransform_Location) == 0x0000F8, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_BreakTransform_Rotation) == 0x000110, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000140, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_RotateAngleAxis_ReturnValue) == 0x000158, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x000170, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnHoldExitStarted
// 0x0010 (0x0010 - 0x0000)
struct MountedTurret_C_OnHoldExitStarted final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExitDuration;                                      // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnHoldExitStarted) == 0x000008, "Wrong alignment on MountedTurret_C_OnHoldExitStarted");
static_assert(sizeof(MountedTurret_C_OnHoldExitStarted) == 0x000010, "Wrong size on MountedTurret_C_OnHoldExitStarted");
static_assert(offsetof(MountedTurret_C_OnHoldExitStarted, ExitingPawn) == 0x000000, "Member 'MountedTurret_C_OnHoldExitStarted::ExitingPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnHoldExitStarted, ExitDuration) == 0x000008, "Member 'MountedTurret_C_OnHoldExitStarted::ExitDuration' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnHoldExitStopped
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnHoldExitStopped final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnHoldExitStopped) == 0x000008, "Wrong alignment on MountedTurret_C_OnHoldExitStopped");
static_assert(sizeof(MountedTurret_C_OnHoldExitStopped) == 0x000008, "Wrong size on MountedTurret_C_OnHoldExitStopped");
static_assert(offsetof(MountedTurret_C_OnHoldExitStopped, ExitingPawn) == 0x000000, "Member 'MountedTurret_C_OnHoldExitStopped::ExitingPawn' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong size on MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_43B2536B49D71F6DB759A49367555C0D
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong size on MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_761292E24A89E794B70E9C9206892380
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong size on MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_BE998F90462B0AB8D888EB90F677D680
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong size on MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_C545F8F445E4AE78043EFD8678F12483
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong size on MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_DC5D83234D74654A536804AC35F92FE4
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong size on MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(sizeof(MountedTurret_C_OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong size on MountedTurret_C_OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(offsetof(MountedTurret_C_OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_F3BC573B4FBE468D904567BB4DB89D59::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_761292E24A89E794B70E9C9206892380
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_F3BC573B4FBE468D904567BB4DB89D59::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_761292E24A89E794B70E9C9206892380
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59) == 0x000004, "Wrong size on MountedTurret_C_OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_F3BC573B4FBE468D904567BB4DB89D59::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnPawnEnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct MountedTurret_C_OnPawnEnterVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIdx;                                           // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnPawnEnterVehicle) == 0x000008, "Wrong alignment on MountedTurret_C_OnPawnEnterVehicle");
static_assert(sizeof(MountedTurret_C_OnPawnEnterVehicle) == 0x000010, "Wrong size on MountedTurret_C_OnPawnEnterVehicle");
static_assert(offsetof(MountedTurret_C_OnPawnEnterVehicle, PlayerPawn) == 0x000000, "Member 'MountedTurret_C_OnPawnEnterVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnPawnEnterVehicle, SeatIdx) == 0x000008, "Member 'MountedTurret_C_OnPawnEnterVehicle::SeatIdx' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnPawnExitVehicle
// 0x0010 (0x0010 - 0x0000)
struct MountedTurret_C_OnPawnExitVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExitSocketName;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnPawnExitVehicle) == 0x000008, "Wrong alignment on MountedTurret_C_OnPawnExitVehicle");
static_assert(sizeof(MountedTurret_C_OnPawnExitVehicle) == 0x000010, "Wrong size on MountedTurret_C_OnPawnExitVehicle");
static_assert(offsetof(MountedTurret_C_OnPawnExitVehicle, PlayerPawn) == 0x000000, "Member 'MountedTurret_C_OnPawnExitVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnPawnExitVehicle, ExitSocketName) == 0x000008, "Member 'MountedTurret_C_OnPawnExitVehicle::ExitSocketName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.overheat changed
// 0x000C (0x000C - 0x0000)
struct MountedTurret_C_overheat_changed final
{
public:
	float                                         CurrentValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWeaponOverheatState                      State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInCooldown;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_overheat_changed) == 0x000004, "Wrong alignment on MountedTurret_C_overheat_changed");
static_assert(sizeof(MountedTurret_C_overheat_changed) == 0x00000C, "Wrong size on MountedTurret_C_overheat_changed");
static_assert(offsetof(MountedTurret_C_overheat_changed, CurrentValue) == 0x000000, "Member 'MountedTurret_C_overheat_changed::CurrentValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_overheat_changed, MaxValue) == 0x000004, "Member 'MountedTurret_C_overheat_changed::MaxValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_overheat_changed, State) == 0x000008, "Member 'MountedTurret_C_overheat_changed::State' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_overheat_changed, bIsInCooldown) == 0x000009, "Member 'MountedTurret_C_overheat_changed::bIsInCooldown' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct MountedTurret_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on MountedTurret_C_ReceiveEndPlay");
static_assert(sizeof(MountedTurret_C_ReceiveEndPlay) == 0x000001, "Wrong size on MountedTurret_C_ReceiveEndPlay");
static_assert(offsetof(MountedTurret_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'MountedTurret_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.Set Magazine Size Coefficient
// 0x0004 (0x0004 - 0x0000)
struct MountedTurret_C_Set_Magazine_Size_Coefficient final
{
public:
	float                                         Ammo_Pool;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_Set_Magazine_Size_Coefficient) == 0x000004, "Wrong alignment on MountedTurret_C_Set_Magazine_Size_Coefficient");
static_assert(sizeof(MountedTurret_C_Set_Magazine_Size_Coefficient) == 0x000004, "Wrong size on MountedTurret_C_Set_Magazine_Size_Coefficient");
static_assert(offsetof(MountedTurret_C_Set_Magazine_Size_Coefficient, Ammo_Pool) == 0x000000, "Member 'MountedTurret_C_Set_Magazine_Size_Coefficient::Ammo_Pool' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.GetIconPlacement
// 0x0058 (0x0058 - 0x0000)
struct MountedTurret_C_GetIconPlacement final
{
public:
	const class AActor*                           SelfActor;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           ViewingActor;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutExtents;                                        // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_GetIconPlacement) == 0x000008, "Wrong alignment on MountedTurret_C_GetIconPlacement");
static_assert(sizeof(MountedTurret_C_GetIconPlacement) == 0x000058, "Wrong size on MountedTurret_C_GetIconPlacement");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, SelfActor) == 0x000000, "Member 'MountedTurret_C_GetIconPlacement::SelfActor' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, ViewingActor) == 0x000008, "Member 'MountedTurret_C_GetIconPlacement::ViewingActor' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, OutLocation) == 0x000010, "Member 'MountedTurret_C_GetIconPlacement::OutLocation' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, OutExtents) == 0x000028, "Member 'MountedTurret_C_GetIconPlacement::OutExtents' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, CallFunc_GetCenterOfMass_ReturnValue) == 0x000040, "Member 'MountedTurret_C_GetIconPlacement::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");

}

