#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropPossessorConfigProp

#include "Basic.hpp"

#include "ItemDropBehavior_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BP_PropPossessorConfigProp.BP_PropPossessorConfigProp_C.SetMinigameDropRule
// 0x0020 (0x0020 - 0x0000)
struct BP_PropPossessorConfigProp_C_SetMinigameDropRule final
{
public:
	class AMinigame_PlayerCreated_C*              Minigame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideDefault;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             DropBehavior;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             Temp_byte_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             Temp_byte_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemDropBehavior                             CallFunc_Map_Find_Value;                           // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PropPossessorConfigProp_C_SetMinigameDropRule) == 0x000008, "Wrong alignment on BP_PropPossessorConfigProp_C_SetMinigameDropRule");
static_assert(sizeof(BP_PropPossessorConfigProp_C_SetMinigameDropRule) == 0x000020, "Wrong size on BP_PropPossessorConfigProp_C_SetMinigameDropRule");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, Minigame) == 0x000000, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::Minigame' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, OverrideDefault) == 0x000008, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::OverrideDefault' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, DropBehavior) == 0x000009, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::DropBehavior' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, Temp_byte_Variable) == 0x00000A, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, Temp_byte_Variable_1) == 0x00000C, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, Temp_byte_Variable_2) == 0x00000D, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, Temp_byte_Variable_3) == 0x00000E, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, Temp_int_Variable) == 0x000010, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, K2Node_Select_Default) == 0x000015, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, CallFunc_Map_Remove_ReturnValue) == 0x000016, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, CallFunc_Map_Find_Value) == 0x000017, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_SetMinigameDropRule, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_PropPossessorConfigProp_C_SetMinigameDropRule::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_PropPossessorConfigProp.BP_PropPossessorConfigProp_C.ExecuteUbergraph_BP_PropPossessorConfigProp
// 0x0050 (0x0050 - 0x0000)
struct BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForActor_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMinigame_PlayerCreated_C*              K2Node_DynamicCast_AsMinigame_Player_Created;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp) == 0x000008, "Wrong alignment on BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp");
static_assert(sizeof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp) == 0x000050, "Wrong size on BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, EntryPoint) == 0x000000, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000008, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, CallFunc_GetVolumeManager_OutIsValid) == 0x000010, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, CallFunc_GetVolumeForActor_ReturnValue) == 0x000018, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::CallFunc_GetVolumeForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000020, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000028, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, K2Node_DynamicCast_AsMinigame_Player_Created) == 0x000030, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::K2Node_DynamicCast_AsMinigame_Player_Created' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_PropPossessorConfigProp_C_ExecuteUbergraph_BP_PropPossessorConfigProp::K2Node_MakeArray_Array' has a wrong offset!");

}

