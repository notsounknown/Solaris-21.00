#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_MED_Binary_rightShoulder_CtrlRig

#include "Basic.hpp"

#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimationCore_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass F_MED_Binary_rightShoulder_CtrlRig.F_MED_Binary_rightShoulder_CtrlRig_C
// 0x0000 (0x0490 - 0x0490)
class UF_MED_Binary_rightShoulder_CtrlRig_C final : public UControlRig
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"F_MED_Binary_rightShoulder_CtrlRig_C">();
	}
	static class UF_MED_Binary_rightShoulder_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UF_MED_Binary_rightShoulder_CtrlRig_C>();
	}
};
static_assert(alignof(UF_MED_Binary_rightShoulder_CtrlRig_C) == 0x000010, "Wrong alignment on UF_MED_Binary_rightShoulder_CtrlRig_C");
static_assert(sizeof(UF_MED_Binary_rightShoulder_CtrlRig_C) == 0x000490, "Wrong size on UF_MED_Binary_rightShoulder_CtrlRig_C");

// RigVMMemoryStorageGeneratorClass F_MED_Binary_rightShoulder_CtrlRig.RigVMMemory_Literal
// 0x0238 (0x0260 - 0x0028)
class F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         SphericalPoseReader_DriverItem__Const;             // 0x0028(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_DriverAxis__Const;             // 0x0030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_RotationOffset__Const;         // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalPoseReader_ActiveRegionSize__Const;       // 0x0060(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_ActiveRegionScaleFactors__Const; // 0x0064(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         SphericalPoseReader_FalloffSize__Const;            // 0x0074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_FalloffRegionScaleFactors__Const; // 0x0078(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         SphericalPoseReader_FlipWidthScaling__Const : 1;   // 0x0088(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_88_1 : 7;                                   // 0x0088(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         SphericalPoseReader_FlipHeightScaling__Const : 1;  // 0x0089(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         SphericalPoseReader_OptionalParentItem__Const;     // 0x008C(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSphericalPoseReaderDebugSettings      SphericalPoseReader_Debug__Const;                  // 0x0094(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         SetTransform_3_SetTransform_2_2_Item__Const;       // 0x00A4(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         SetTransform_3_SetTransform_2_2_Space__Const;      // 0x00AC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SetTransform_3_SetTransform_2_2_Transform__Const;  // 0x00B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	EEulerRotationOrder                           SetTransform_3_MathQuaternionToEuler_2_2_RotationOrder__Const; // 0x0110(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SetTransform_3_MathVectorAdd_2_2_B__Const;         // 0x0118(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_3_MathVectorAdd_3_2_2_B__Const;       // 0x0130(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_3_MathVectorAdd_3_2_2_1_B__Const;     // 0x0148(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SetTransform_4_SetTransform_2_2_Item__Const;       // 0x0160(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_4_MathVectorAdd_2_2_B__Const;         // 0x0168(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_4_MathVectorAdd_3_2_2_B__Const;       // 0x0180(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_4_MathVectorAdd_3_2_2_1_B__Const;     // 0x0198(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SetTransform_5_SetTransform_2_2_Item__Const;       // 0x01B0(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_5_MathVectorAdd_2_2_B__Const;         // 0x01B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_5_MathVectorAdd_3_2_2_B__Const;       // 0x01D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_1_RotationOffset__Const;       // 0x01E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalPoseReader_1_ActiveRegionSize__Const;     // 0x0200(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_1_ActiveRegionScaleFactors__Const; // 0x0204(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         SphericalPoseReader_1_FalloffSize__Const;          // 0x0214(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_1_MathVectorAdd_2_2_B__Const;         // 0x0218(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_1_MathVectorAdd_3_2_2_B__Const;       // 0x0230(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_1_MathVectorAdd_3_2_2_1_B__Const;     // 0x0248(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_Binary_rightShoulder_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal) == 0x000260, "Wrong size on F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_DriverItem__Const) == 0x000028, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_DriverItem__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_DriverAxis__Const) == 0x000030, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_DriverAxis__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_RotationOffset__Const) == 0x000048, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_ActiveRegionSize__Const) == 0x000060, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_ActiveRegionSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_ActiveRegionScaleFactors__Const) == 0x000064, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_ActiveRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_FalloffSize__Const) == 0x000074, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_FalloffSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_FalloffRegionScaleFactors__Const) == 0x000078, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_FalloffRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_OptionalParentItem__Const) == 0x00008C, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_OptionalParentItem__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_Debug__Const) == 0x000094, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_Debug__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_3_SetTransform_2_2_Item__Const) == 0x0000A4, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_3_SetTransform_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_3_SetTransform_2_2_Space__Const) == 0x0000AC, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_3_SetTransform_2_2_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_3_SetTransform_2_2_Transform__Const) == 0x0000B0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_3_SetTransform_2_2_Transform__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_3_MathQuaternionToEuler_2_2_RotationOrder__Const) == 0x000110, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_3_MathQuaternionToEuler_2_2_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_3_MathVectorAdd_2_2_B__Const) == 0x000118, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_3_MathVectorAdd_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_3_MathVectorAdd_3_2_2_B__Const) == 0x000130, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_3_MathVectorAdd_3_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_3_MathVectorAdd_3_2_2_1_B__Const) == 0x000148, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_3_MathVectorAdd_3_2_2_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_4_SetTransform_2_2_Item__Const) == 0x000160, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_4_SetTransform_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_4_MathVectorAdd_2_2_B__Const) == 0x000168, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_4_MathVectorAdd_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_4_MathVectorAdd_3_2_2_B__Const) == 0x000180, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_4_MathVectorAdd_3_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_4_MathVectorAdd_3_2_2_1_B__Const) == 0x000198, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_4_MathVectorAdd_3_2_2_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_5_SetTransform_2_2_Item__Const) == 0x0001B0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_5_SetTransform_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_5_MathVectorAdd_2_2_B__Const) == 0x0001B8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_5_MathVectorAdd_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_5_MathVectorAdd_3_2_2_B__Const) == 0x0001D0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_5_MathVectorAdd_3_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_RotationOffset__Const) == 0x0001E8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_ActiveRegionSize__Const) == 0x000200, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_ActiveRegionSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_ActiveRegionScaleFactors__Const) == 0x000204, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_ActiveRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_FalloffSize__Const) == 0x000214, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_FalloffSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_1_MathVectorAdd_2_2_B__Const) == 0x000218, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_1_MathVectorAdd_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_1_MathVectorAdd_3_2_2_B__Const) == 0x000230, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_1_MathVectorAdd_3_2_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal, SetTransform_1_MathVectorAdd_3_2_2_1_B__Const) == 0x000248, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Literal::SetTransform_1_MathVectorAdd_3_2_2_1_B__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass F_MED_Binary_rightShoulder_CtrlRig.RigVMMemory_Work
// 0x0818 (0x0840 - 0x0028)
class F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x0070)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_OutputParam;                   // 0x00A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_InnerRegion;                   // 0x00A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_OuterRegion;                   // 0x00B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_DriverNormal;                  // 0x00C8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_Driver2D;                      // 0x00D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_DriverCache;                   // 0x00E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_OptionalParentCache;           // 0x00F8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  SetTransform_3_MathQuaternionFromEuler_2_2_Result; // 0x0110(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_3_MathVectorAdd_2_2_Result;           // 0x0130(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_3_MathQuaternionToEuler_2_2_Result;   // 0x0148(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_3_GetTransform_2_2_Transform;         // 0x0160(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_3_GetTransform_2_2_CachedIndex;       // 0x01C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  SetTransform_3_MathQuaternionToEuler_2_2_Value;    // 0x01D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_3_MathVectorAdd_3_2_2_Result;         // 0x01F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_3_MathVectorAdd_3_2_2_A;              // 0x0208(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_3_MathVectorAdd_3_2_2_1_Result;       // 0x0220(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_3_MathVectorAdd_3_2_2_1_A;            // 0x0238(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_3_SetTransform_2_2_Transform__IO;     // 0x0250(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_3_SetTransform_2_2_CachedIndex;       // 0x02B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  SetTransform_4_MathQuaternionFromEuler_2_2_Result; // 0x02C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_4_MathVectorAdd_2_2_Result;           // 0x02E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_4_MathQuaternionToEuler_2_2_Result;   // 0x02F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_4_GetTransform_2_2_Transform;         // 0x0310(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_4_GetTransform_2_2_CachedIndex;       // 0x0370(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  SetTransform_4_MathQuaternionToEuler_2_2_Value;    // 0x0380(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_4_MathVectorAdd_3_2_2_Result;         // 0x03A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_4_MathVectorAdd_3_2_2_A;              // 0x03B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_4_MathVectorAdd_3_2_2_1_Result;       // 0x03D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_4_MathVectorAdd_3_2_2_1_A;            // 0x03E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_4_SetTransform_2_2_Transform__IO;     // 0x0400(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_4_SetTransform_2_2_CachedIndex;       // 0x0460(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  SetTransform_5_MathQuaternionFromEuler_2_2_Result; // 0x0470(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_5_MathVectorAdd_2_2_Result;           // 0x0490(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_5_MathQuaternionToEuler_2_2_Result;   // 0x04A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_5_GetTransform_2_2_Transform;         // 0x04C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_5_GetTransform_2_2_CachedIndex;       // 0x0520(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  SetTransform_5_MathQuaternionToEuler_2_2_Value;    // 0x0530(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_5_MathVectorAdd_3_2_2_Result;         // 0x0550(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_5_MathVectorAdd_3_2_2_A;              // 0x0568(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_5_MathVectorAdd_3_2_2_1_Result;       // 0x0580(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_5_MathVectorAdd_3_2_2_1_A;            // 0x0598(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_5_SetTransform_2_2_Transform__IO;     // 0x05B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_5_SetTransform_2_2_CachedIndex;       // 0x0610(0x0010)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_1_OutputParam;                 // 0x0620(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_InnerRegion;                 // 0x0628(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_OuterRegion;                 // 0x0638(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_DriverNormal;                // 0x0648(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_Driver2D;                    // 0x0658(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_DriverCache;                 // 0x0668(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_OptionalParentCache;         // 0x0678(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_688[0x8];                                      // 0x0688(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  SetTransform_1_MathQuaternionFromEuler_2_2_Result; // 0x0690(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_1_MathVectorAdd_2_2_Result;           // 0x06B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_1_MathQuaternionToEuler_2_2_Result;   // 0x06C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_1_GetTransform_2_2_Transform;         // 0x06E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_1_GetTransform_2_2_CachedIndex;       // 0x0740(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  SetTransform_1_MathQuaternionToEuler_2_2_Value;    // 0x0750(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FVector                                SetTransform_1_MathVectorAdd_3_2_2_Result;         // 0x0770(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_1_MathVectorAdd_3_2_2_A;              // 0x0788(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_1_MathVectorAdd_3_2_2_1_Result;       // 0x07A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SetTransform_1_MathVectorAdd_3_2_2_1_A;            // 0x07B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SetTransform_1_SetTransform_2_2_Transform__IO;     // 0x07D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              SetTransform_1_SetTransform_2_2_CachedIndex;       // 0x0830(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_Binary_rightShoulder_CtrlRig.RigVMMemory_Work", true>();
	}
	static class F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work) == 0x000840, "Wrong size on F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OutputParam) == 0x0000A0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OutputParam' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_InnerRegion) == 0x0000A8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_InnerRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OuterRegion) == 0x0000B8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OuterRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_DriverNormal) == 0x0000C8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_DriverNormal' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_Driver2D) == 0x0000D8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_Driver2D' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_DriverCache) == 0x0000E8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_DriverCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OptionalParentCache) == 0x0000F8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathQuaternionFromEuler_2_2_Result) == 0x000110, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathQuaternionFromEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathVectorAdd_2_2_Result) == 0x000130, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathVectorAdd_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathQuaternionToEuler_2_2_Result) == 0x000148, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathQuaternionToEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_GetTransform_2_2_Transform) == 0x000160, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_GetTransform_2_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_GetTransform_2_2_CachedIndex) == 0x0001C0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_GetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathQuaternionToEuler_2_2_Value) == 0x0001D0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathQuaternionToEuler_2_2_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathVectorAdd_3_2_2_Result) == 0x0001F0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathVectorAdd_3_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathVectorAdd_3_2_2_A) == 0x000208, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathVectorAdd_3_2_2_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathVectorAdd_3_2_2_1_Result) == 0x000220, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathVectorAdd_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_MathVectorAdd_3_2_2_1_A) == 0x000238, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_MathVectorAdd_3_2_2_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_SetTransform_2_2_Transform__IO) == 0x000250, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_SetTransform_2_2_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_3_SetTransform_2_2_CachedIndex) == 0x0002B0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_3_SetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathQuaternionFromEuler_2_2_Result) == 0x0002C0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathQuaternionFromEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathVectorAdd_2_2_Result) == 0x0002E0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathVectorAdd_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathQuaternionToEuler_2_2_Result) == 0x0002F8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathQuaternionToEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_GetTransform_2_2_Transform) == 0x000310, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_GetTransform_2_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_GetTransform_2_2_CachedIndex) == 0x000370, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_GetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathQuaternionToEuler_2_2_Value) == 0x000380, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathQuaternionToEuler_2_2_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathVectorAdd_3_2_2_Result) == 0x0003A0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathVectorAdd_3_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathVectorAdd_3_2_2_A) == 0x0003B8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathVectorAdd_3_2_2_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathVectorAdd_3_2_2_1_Result) == 0x0003D0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathVectorAdd_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_MathVectorAdd_3_2_2_1_A) == 0x0003E8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_MathVectorAdd_3_2_2_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_SetTransform_2_2_Transform__IO) == 0x000400, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_SetTransform_2_2_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_4_SetTransform_2_2_CachedIndex) == 0x000460, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_4_SetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathQuaternionFromEuler_2_2_Result) == 0x000470, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathQuaternionFromEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathVectorAdd_2_2_Result) == 0x000490, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathVectorAdd_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathQuaternionToEuler_2_2_Result) == 0x0004A8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathQuaternionToEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_GetTransform_2_2_Transform) == 0x0004C0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_GetTransform_2_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_GetTransform_2_2_CachedIndex) == 0x000520, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_GetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathQuaternionToEuler_2_2_Value) == 0x000530, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathQuaternionToEuler_2_2_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathVectorAdd_3_2_2_Result) == 0x000550, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathVectorAdd_3_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathVectorAdd_3_2_2_A) == 0x000568, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathVectorAdd_3_2_2_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathVectorAdd_3_2_2_1_Result) == 0x000580, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathVectorAdd_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_MathVectorAdd_3_2_2_1_A) == 0x000598, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_MathVectorAdd_3_2_2_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_SetTransform_2_2_Transform__IO) == 0x0005B0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_SetTransform_2_2_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_5_SetTransform_2_2_CachedIndex) == 0x000610, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_5_SetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OutputParam) == 0x000620, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OutputParam' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_InnerRegion) == 0x000628, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_InnerRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OuterRegion) == 0x000638, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OuterRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_DriverNormal) == 0x000648, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_DriverNormal' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_Driver2D) == 0x000658, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_Driver2D' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_DriverCache) == 0x000668, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_DriverCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OptionalParentCache) == 0x000678, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathQuaternionFromEuler_2_2_Result) == 0x000690, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathQuaternionFromEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathVectorAdd_2_2_Result) == 0x0006B0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathVectorAdd_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathQuaternionToEuler_2_2_Result) == 0x0006C8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathQuaternionToEuler_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_GetTransform_2_2_Transform) == 0x0006E0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_GetTransform_2_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_GetTransform_2_2_CachedIndex) == 0x000740, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_GetTransform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathQuaternionToEuler_2_2_Value) == 0x000750, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathQuaternionToEuler_2_2_Value' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathVectorAdd_3_2_2_Result) == 0x000770, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathVectorAdd_3_2_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathVectorAdd_3_2_2_A) == 0x000788, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathVectorAdd_3_2_2_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathVectorAdd_3_2_2_1_Result) == 0x0007A0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathVectorAdd_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_MathVectorAdd_3_2_2_1_A) == 0x0007B8, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_MathVectorAdd_3_2_2_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_SetTransform_2_2_Transform__IO) == 0x0007D0, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_SetTransform_2_2_Transform__IO' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work, SetTransform_1_SetTransform_2_2_CachedIndex) == 0x000830, "Member 'F_MED_Binary_rightShoulder_CtrlRig::URigVMMemory_Work::SetTransform_1_SetTransform_2_2_CachedIndex' has a wrong offset!");

}

