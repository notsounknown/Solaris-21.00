#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValetLightSpawnerComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.addLight
// 0x00B0 (0x00B0 - 0x0000)
struct ValetLightSpawnerComponent_C_addLight final
{
public:
	struct FTransform                             RelativeTransform;                                 // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   SocketName;                                        // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UValetSpotLightComponent_C*             l_newComp;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AValet_BasicCar_Vehicle_C*              K2Node_DynamicCast_AsValet_Basic_Car_Vehicle;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UValetSpotLightComponent_C*             CallFunc_AddComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_addLight) == 0x000010, "Wrong alignment on ValetLightSpawnerComponent_C_addLight");
static_assert(sizeof(ValetLightSpawnerComponent_C_addLight) == 0x0000B0, "Wrong size on ValetLightSpawnerComponent_C_addLight");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, RelativeTransform) == 0x000000, "Member 'ValetLightSpawnerComponent_C_addLight::RelativeTransform' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, SocketName) == 0x000060, "Member 'ValetLightSpawnerComponent_C_addLight::SocketName' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, l_newComp) == 0x000068, "Member 'ValetLightSpawnerComponent_C_addLight::l_newComp' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_NotEqual_NameName_ReturnValue) == 0x000074, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_Less_IntInt_ReturnValue) == 0x000075, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, K2Node_DynamicCast_AsValet_Basic_Car_Vehicle) == 0x000080, "Member 'ValetLightSpawnerComponent_C_addLight::K2Node_DynamicCast_AsValet_Basic_Car_Vehicle' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ValetLightSpawnerComponent_C_addLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000089, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_GetOwner_ReturnValue_1) == 0x000090, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_AddComponentByClass_ReturnValue) == 0x000098, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_addLight, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'ValetLightSpawnerComponent_C_addLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.clearLights
// 0x0030 (0x0030 - 0x0000)
struct ValetLightSpawnerComponent_C_clearLights final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_clearLights) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_clearLights");
static_assert(sizeof(ValetLightSpawnerComponent_C_clearLights) == 0x000030, "Wrong size on ValetLightSpawnerComponent_C_clearLights");
static_assert(offsetof(ValetLightSpawnerComponent_C_clearLights, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ValetLightSpawnerComponent_C_clearLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_clearLights, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ValetLightSpawnerComponent_C_clearLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_clearLights, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ValetLightSpawnerComponent_C_clearLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_clearLights, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'ValetLightSpawnerComponent_C_clearLights::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_clearLights, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ValetLightSpawnerComponent_C_clearLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_clearLights, CallFunc_Array_Get_Item) == 0x000020, "Member 'ValetLightSpawnerComponent_C_clearLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_clearLights, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'ValetLightSpawnerComponent_C_clearLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.ExecuteUbergraph_ValetLightSpawnerComponent
// 0x0028 (0x0028 - 0x0000)
struct ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataDrivenCVarEngineSubsystem*         CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& CVarName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent");
static_assert(sizeof(ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent) == 0x000028, "Wrong size on ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent");
static_assert(offsetof(ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent, EntryPoint) == 0x000000, "Member 'ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000008, "Member 'ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'ValetLightSpawnerComponent_C_ExecuteUbergraph_ValetLightSpawnerComponent::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.handleCvarChanged
// 0x0018 (0x0018 - 0x0000)
struct ValetLightSpawnerComponent_C_handleCvarChanged final
{
public:
	class FString                                 CVarName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_handleCvarChanged) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_handleCvarChanged");
static_assert(sizeof(ValetLightSpawnerComponent_C_handleCvarChanged) == 0x000018, "Wrong size on ValetLightSpawnerComponent_C_handleCvarChanged");
static_assert(offsetof(ValetLightSpawnerComponent_C_handleCvarChanged, CVarName) == 0x000000, "Member 'ValetLightSpawnerComponent_C_handleCvarChanged::CVarName' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handleCvarChanged, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000010, "Member 'ValetLightSpawnerComponent_C_handleCvarChanged::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.handlePawnEnterSeat
// 0x0038 (0x0038 - 0x0000)
struct ValetLightSpawnerComponent_C_handlePawnEnterSeat final
{
public:
	TScriptInterface<class IFortVehicleInterface> Vehicle;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              PlayerPawn;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIndex;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTimeOfDayManager*                  CallFunc_GetTimeOfDayManagerFromContext_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_handlePawnEnterSeat) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_handlePawnEnterSeat");
static_assert(sizeof(ValetLightSpawnerComponent_C_handlePawnEnterSeat) == 0x000038, "Wrong size on ValetLightSpawnerComponent_C_handlePawnEnterSeat");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnEnterSeat, Vehicle) == 0x000000, "Member 'ValetLightSpawnerComponent_C_handlePawnEnterSeat::Vehicle' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnEnterSeat, PlayerPawn) == 0x000010, "Member 'ValetLightSpawnerComponent_C_handlePawnEnterSeat::PlayerPawn' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnEnterSeat, SeatIndex) == 0x000018, "Member 'ValetLightSpawnerComponent_C_handlePawnEnterSeat::SeatIndex' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnEnterSeat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'ValetLightSpawnerComponent_C_handlePawnEnterSeat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnEnterSeat, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'ValetLightSpawnerComponent_C_handlePawnEnterSeat::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnEnterSeat, CallFunc_GetTimeOfDayManagerFromContext_ReturnValue) == 0x000030, "Member 'ValetLightSpawnerComponent_C_handlePawnEnterSeat::CallFunc_GetTimeOfDayManagerFromContext_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.handlePawnExitSeat
// 0x0040 (0x0040 - 0x0000)
struct ValetLightSpawnerComponent_C_handlePawnExitSeat final
{
public:
	TScriptInterface<class IFortVehicleInterface> Vehicle;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              PlayerPawn;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIndex;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTimeOfDayManager*                  CallFunc_GetTimeOfDayManagerFromContext_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_handlePawnExitSeat) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_handlePawnExitSeat");
static_assert(sizeof(ValetLightSpawnerComponent_C_handlePawnExitSeat) == 0x000040, "Wrong size on ValetLightSpawnerComponent_C_handlePawnExitSeat");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnExitSeat, Vehicle) == 0x000000, "Member 'ValetLightSpawnerComponent_C_handlePawnExitSeat::Vehicle' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnExitSeat, PlayerPawn) == 0x000010, "Member 'ValetLightSpawnerComponent_C_handlePawnExitSeat::PlayerPawn' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnExitSeat, SeatIndex) == 0x000018, "Member 'ValetLightSpawnerComponent_C_handlePawnExitSeat::SeatIndex' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnExitSeat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'ValetLightSpawnerComponent_C_handlePawnExitSeat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnExitSeat, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'ValetLightSpawnerComponent_C_handlePawnExitSeat::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnExitSeat, CallFunc_GetTimeOfDayManagerFromContext_ReturnValue) == 0x000030, "Member 'ValetLightSpawnerComponent_C_handlePawnExitSeat::CallFunc_GetTimeOfDayManagerFromContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handlePawnExitSeat, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'ValetLightSpawnerComponent_C_handlePawnExitSeat::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.handleTimeOfDayChanged
// 0x0003 (0x0003 - 0x0000)
struct ValetLightSpawnerComponent_C_handleTimeOfDayChanged final
{
public:
	EFortDayPhase                                 CurrentDayPhase;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 PreviousDayPhase;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAtCreation;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_handleTimeOfDayChanged) == 0x000001, "Wrong alignment on ValetLightSpawnerComponent_C_handleTimeOfDayChanged");
static_assert(sizeof(ValetLightSpawnerComponent_C_handleTimeOfDayChanged) == 0x000003, "Wrong size on ValetLightSpawnerComponent_C_handleTimeOfDayChanged");
static_assert(offsetof(ValetLightSpawnerComponent_C_handleTimeOfDayChanged, CurrentDayPhase) == 0x000000, "Member 'ValetLightSpawnerComponent_C_handleTimeOfDayChanged::CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handleTimeOfDayChanged, PreviousDayPhase) == 0x000001, "Member 'ValetLightSpawnerComponent_C_handleTimeOfDayChanged::PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_handleTimeOfDayChanged, bAtCreation) == 0x000002, "Member 'ValetLightSpawnerComponent_C_handleTimeOfDayChanged::bAtCreation' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.hasAnyLights
// 0x000C (0x000C - 0x0000)
struct ValetLightSpawnerComponent_C_hasAnyLights final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_hasAnyLights) == 0x000004, "Wrong alignment on ValetLightSpawnerComponent_C_hasAnyLights");
static_assert(sizeof(ValetLightSpawnerComponent_C_hasAnyLights) == 0x00000C, "Wrong size on ValetLightSpawnerComponent_C_hasAnyLights");
static_assert(offsetof(ValetLightSpawnerComponent_C_hasAnyLights, ReturnValue) == 0x000000, "Member 'ValetLightSpawnerComponent_C_hasAnyLights::ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_hasAnyLights, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'ValetLightSpawnerComponent_C_hasAnyLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_hasAnyLights, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'ValetLightSpawnerComponent_C_hasAnyLights::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.isOwnerBeingDriven
// 0x0001 (0x0001 - 0x0000)
struct ValetLightSpawnerComponent_C_isOwnerBeingDriven final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_isOwnerBeingDriven) == 0x000001, "Wrong alignment on ValetLightSpawnerComponent_C_isOwnerBeingDriven");
static_assert(sizeof(ValetLightSpawnerComponent_C_isOwnerBeingDriven) == 0x000001, "Wrong size on ValetLightSpawnerComponent_C_isOwnerBeingDriven");
static_assert(offsetof(ValetLightSpawnerComponent_C_isOwnerBeingDriven, ReturnValue) == 0x000000, "Member 'ValetLightSpawnerComponent_C_isOwnerBeingDriven::ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.shouldLightsBeOn
// 0x000A (0x000A - 0x0000)
struct ValetLightSpawnerComponent_C_shouldLightsBeOn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isOwnerBeingDriven_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 CallFunc_GetCurrentDayPhase_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isOwnerBeingDriven_ReturnValue_1;         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_shouldLightsBeOn) == 0x000001, "Wrong alignment on ValetLightSpawnerComponent_C_shouldLightsBeOn");
static_assert(sizeof(ValetLightSpawnerComponent_C_shouldLightsBeOn) == 0x00000A, "Wrong size on ValetLightSpawnerComponent_C_shouldLightsBeOn");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, ReturnValue) == 0x000000, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_isOwnerBeingDriven_ReturnValue) == 0x000001, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_isOwnerBeingDriven_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_Greater_IntInt_ReturnValue) == 0x000002, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_GetCurrentDayPhase_ReturnValue) == 0x000003, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_GetCurrentDayPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000004, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000006, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_isOwnerBeingDriven_ReturnValue_1) == 0x000007, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_isOwnerBeingDriven_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_shouldLightsBeOn, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'ValetLightSpawnerComponent_C_shouldLightsBeOn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.spawnLights
// 0x01B0 (0x01B0 - 0x0000)
struct ValetLightSpawnerComponent_C_spawnLights final
{
public:
	TArray<class FName>                           l_sockets;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
	class USkeletalMeshComponentBudgeted*         l_skelComp;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Set_ToArray_Result;                       // 0x0028(0x0010)(ReferenceParm)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00B0(0x0060)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0xC];                                      // 0x0114(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_1;                         // 0x0120(0x0060)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TransformTransform_ReturnValue; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AValet_BasicCar_Vehicle_C*              K2Node_DynamicCast_AsValet_Basic_Car_Vehicle;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasAnyLights_ReturnValue;                 // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_spawnLights) == 0x000010, "Wrong alignment on ValetLightSpawnerComponent_C_spawnLights");
static_assert(sizeof(ValetLightSpawnerComponent_C_spawnLights) == 0x0001B0, "Wrong size on ValetLightSpawnerComponent_C_spawnLights");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, l_sockets) == 0x000000, "Member 'ValetLightSpawnerComponent_C_spawnLights::l_sockets' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, l_skelComp) == 0x000010, "Member 'ValetLightSpawnerComponent_C_spawnLights::l_skelComp' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ValetLightSpawnerComponent_C_spawnLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'ValetLightSpawnerComponent_C_spawnLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'ValetLightSpawnerComponent_C_spawnLights::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Set_ToArray_Result) == 0x000028, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_DoesSocketExist_ReturnValue) == 0x0000A8, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_GetSocketTransform_ReturnValue) == 0x0000B0, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'ValetLightSpawnerComponent_C_spawnLights::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_EqualEqual_TransformTransform_ReturnValue) == 0x000180, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_EqualEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Less_IntInt_ReturnValue) == 0x000181, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Add_IntInt_ReturnValue_1) == 0x000184, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Array_Length_ReturnValue_1) == 0x000188, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_GetOwner_ReturnValue) == 0x000190, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_Less_IntInt_ReturnValue_1) == 0x000198, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, K2Node_DynamicCast_AsValet_Basic_Car_Vehicle) == 0x0001A0, "Member 'ValetLightSpawnerComponent_C_spawnLights::K2Node_DynamicCast_AsValet_Basic_Car_Vehicle' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'ValetLightSpawnerComponent_C_spawnLights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_spawnLights, CallFunc_hasAnyLights_ReturnValue) == 0x0001A9, "Member 'ValetLightSpawnerComponent_C_spawnLights::CallFunc_hasAnyLights_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.validateCarLights
// 0x0048 (0x0048 - 0x0000)
struct ValetLightSpawnerComponent_C_validateCarLights final
{
public:
	bool                                          l_on;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_shouldLightsBeOn_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AValet_BasicCar_Vehicle_C*              K2Node_DynamicCast_AsValet_Basic_Car_Vehicle;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_validateCarLights) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_validateCarLights");
static_assert(sizeof(ValetLightSpawnerComponent_C_validateCarLights) == 0x000048, "Wrong size on ValetLightSpawnerComponent_C_validateCarLights");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, l_on) == 0x000000, "Member 'ValetLightSpawnerComponent_C_validateCarLights::l_on' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ValetLightSpawnerComponent_C_validateCarLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ValetLightSpawnerComponent_C_validateCarLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000014, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_shouldLightsBeOn_ReturnValue) == 0x000018, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_shouldLightsBeOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, K2Node_DynamicCast_AsValet_Basic_Car_Vehicle) == 0x000028, "Member 'ValetLightSpawnerComponent_C_validateCarLights::K2Node_DynamicCast_AsValet_Basic_Car_Vehicle' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ValetLightSpawnerComponent_C_validateCarLights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_Array_Get_Item) == 0x000038, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCarLights, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'ValetLightSpawnerComponent_C_validateCarLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.validateCvar_EnablePhysicalLights
// 0x0080 (0x0080 - 0x0000)
struct ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights final
{
public:
	TDelegate<void(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTimeOfDayManager*                  CallFunc_GetTimeOfDayManagerFromContext_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* PlayerPawn, int32 SeatIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AValet_BasicCar_Vehicle_C*              K2Node_DynamicCast_AsValet_Basic_Car_Vehicle;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* PlayerPawn, int32 SeatIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AValet_BasicCar_Vehicle_C*              K2Node_DynamicCast_AsValet_Basic_Car_Vehicle_1;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* PlayerPawn, int32 SeatIndex)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0064(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* PlayerPawn, int32 SeatIndex)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0070(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights");
static_assert(sizeof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights) == 0x000080, "Wrong size on ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, CallFunc_GetTimeOfDayManagerFromContext_ReturnValue) == 0x000010, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::CallFunc_GetTimeOfDayManagerFromContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000018, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, CallFunc_Greater_IntInt_ReturnValue) == 0x00001D, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_DynamicCast_AsValet_Basic_Car_Vehicle) == 0x000038, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_DynamicCast_AsValet_Basic_Car_Vehicle' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, CallFunc_GetOwner_ReturnValue_1) == 0x000050, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_DynamicCast_AsValet_Basic_Car_Vehicle_1) == 0x000058, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_DynamicCast_AsValet_Basic_Car_Vehicle_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_CreateDelegate_OutputDelegate_3) == 0x000064, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights, K2Node_CreateDelegate_OutputDelegate_4) == 0x000070, "Member 'ValetLightSpawnerComponent_C_validateCvar_EnablePhysicalLights::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function ValetLightSpawnerComponent.ValetLightSpawnerComponent_C.validateNextFrame
// 0x0018 (0x0018 - 0x0000)
struct ValetLightSpawnerComponent_C_validateNextFrame final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ValetLightSpawnerComponent_C_validateNextFrame) == 0x000008, "Wrong alignment on ValetLightSpawnerComponent_C_validateNextFrame");
static_assert(sizeof(ValetLightSpawnerComponent_C_validateNextFrame) == 0x000018, "Wrong size on ValetLightSpawnerComponent_C_validateNextFrame");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateNextFrame, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ValetLightSpawnerComponent_C_validateNextFrame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateNextFrame, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00000C, "Member 'ValetLightSpawnerComponent_C_validateNextFrame::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ValetLightSpawnerComponent_C_validateNextFrame, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'ValetLightSpawnerComponent_C_validateNextFrame::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}

