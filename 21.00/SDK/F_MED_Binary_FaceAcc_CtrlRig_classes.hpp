#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_MED_Binary_FaceAcc_CtrlRig

#include "Basic.hpp"

#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass F_MED_Binary_FaceAcc_CtrlRig.F_MED_Binary_FaceAcc_CtrlRig_C
// 0x0000 (0x0490 - 0x0490)
class UF_MED_Binary_FaceAcc_CtrlRig_C final : public UControlRig
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"F_MED_Binary_FaceAcc_CtrlRig_C">();
	}
	static class UF_MED_Binary_FaceAcc_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UF_MED_Binary_FaceAcc_CtrlRig_C>();
	}
};
static_assert(alignof(UF_MED_Binary_FaceAcc_CtrlRig_C) == 0x000010, "Wrong alignment on UF_MED_Binary_FaceAcc_CtrlRig_C");
static_assert(sizeof(UF_MED_Binary_FaceAcc_CtrlRig_C) == 0x000490, "Wrong size on UF_MED_Binary_FaceAcc_CtrlRig_C");

// RigVMMemoryStorageGeneratorClass F_MED_Binary_FaceAcc_CtrlRig.RigVMMemory_Literal
// 0x05E8 (0x0610 - 0x0028)
class F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         SphericalPoseReader_DriverItem__Const;             // 0x0028(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_DriverAxis__Const;             // 0x0030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_RotationOffset__Const;         // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalPoseReader_ActiveRegionSize__Const;       // 0x0060(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_ActiveRegionScaleFactors__Const; // 0x0064(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         SphericalPoseReader_FalloffSize__Const;            // 0x0074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_FalloffRegionScaleFactors__Const; // 0x0078(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         SphericalPoseReader_FlipWidthScaling__Const : 1;   // 0x0088(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         SphericalPoseReader_OptionalParentItem__Const;     // 0x008C(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSphericalPoseReaderDebugSettings      SphericalPoseReader_Debug__Const;                  // 0x0094(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         SetTranslation_Item__Const;                        // 0x00A4(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         SetTranslation_Space__Const;                       // 0x00AC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MathVectorAdd_3_B__Const;                          // 0x00B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         SetTranslation_bPropagateToChildren__Const : 1;    // 0x00C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         SetTranslation_1_Item__Const;                      // 0x00CC(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MathVectorAdd_B__Const;                            // 0x00D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SetTranslation_1_1_Item__Const;                    // 0x00F0(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorAdd_1_B__Const;                          // 0x00F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   SetCurveValue_Curve__Const;                        // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SphericalPoseReader_1_DriverItem__Const;           // 0x0114(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SphericalPoseReader_1_DriverAxis__Const;           // 0x0120(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_1_RotationOffset__Const;       // 0x0138(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalPoseReader_1_ActiveRegionSize__Const;     // 0x0150(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_1_ActiveRegionScaleFactors__Const; // 0x0154(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         SphericalPoseReader_1_FalloffSize__Const;          // 0x0164(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_1_FalloffRegionScaleFactors__Const; // 0x0168(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FSphericalPoseReaderDebugSettings      SphericalPoseReader_1_Debug__Const;                // 0x0178(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         SetTranslation_2_Item__Const;                      // 0x0188(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorAdd_2_1_B__Const;                        // 0x0190(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SetTranslation_1_2_Item__Const;                    // 0x01A8(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorAdd_2_B__Const;                          // 0x01B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SetTranslation_1_1_1_Item__Const;                  // 0x01C8(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorAdd_1_1_B__Const;                        // 0x01D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_1_1_RotationOffset__Const;     // 0x01E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalPoseReader_1_1_ActiveRegionSize__Const;   // 0x0200(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalPoseReader_1_1_FalloffSize__Const;        // 0x0204(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SetTranslation_2_1_Item__Const;                    // 0x0208(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorAdd_2_1_1_B__Const;                      // 0x0210(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathVectorAdd_2_1_2_B__Const;                      // 0x0228(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   SetCurveValue_1_Curve__Const;                      // 0x0240(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   SetCurveValue_1_1_Curve__Const;                    // 0x0244(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SphericalPoseReader_2_DriverItem__Const;           // 0x0248(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_2_DriverAxis__Const;           // 0x0250(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_2_RotationOffset__Const;       // 0x0268(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_2_ActiveRegionScaleFactors__Const; // 0x0280(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         SphericalPoseReader_2_FalloffSize__Const;          // 0x0290(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         SphericalPoseReader_2_OptionalParentItem__Const;   // 0x0294(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_ItemToModify__Const;            // 0x02A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     AnimEvalRichCurve_Curve__Const;                    // 0x02B0(0x0088)(Edit, EditConst, NonTransactional)
	float                                         AnimEvalRichCurve_SourceMinimum__Const;            // 0x0338(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AnimEvalRichCurve_SourceMaximum__Const;            // 0x033C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EControlRigModifyBoneMode                     ModifyTransforms_1_Mode__Const;                    // 0x0340(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         AimItem_1_1_Item__Const;                           // 0x0344(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                AimItem_1_1_Primary__Const;                        // 0x0350(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                AimItem_1_1_Secondary__Const;                      // 0x0398(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimBone_DebugSettings         AimItem_1_1_DebugSettings__Const;                  // 0x03E0(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         AimItem_1_1_1_Item__Const;                         // 0x0450(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                AimItem_1_1_1_Primary__Const;                      // 0x0458(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                AimItem_1_1_1_Secondary__Const;                    // 0x04A0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                AimItem_Primary__Const;                            // 0x04E8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                AimItem_Secondary__Const;                          // 0x0530(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         AimItem_1_Item__Const;                             // 0x0578(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                AimItem_1_Primary__Const;                          // 0x0580(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                AimItem_1_Secondary__Const;                        // 0x05C8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_Binary_FaceAcc_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal) == 0x000010, "Wrong alignment on F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal) == 0x000610, "Wrong size on F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_DriverItem__Const) == 0x000028, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_DriverItem__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_DriverAxis__Const) == 0x000030, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_DriverAxis__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_RotationOffset__Const) == 0x000048, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_ActiveRegionSize__Const) == 0x000060, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_ActiveRegionSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_ActiveRegionScaleFactors__Const) == 0x000064, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_ActiveRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_FalloffSize__Const) == 0x000074, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_FalloffSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_FalloffRegionScaleFactors__Const) == 0x000078, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_FalloffRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_OptionalParentItem__Const) == 0x00008C, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_OptionalParentItem__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_Debug__Const) == 0x000094, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_Debug__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_Item__Const) == 0x0000A4, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_Space__Const) == 0x0000AC, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_Space__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_3_B__Const) == 0x0000B0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_3_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_1_Item__Const) == 0x0000CC, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_1_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_B__Const) == 0x0000D8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_1_1_Item__Const) == 0x0000F0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_1_B__Const) == 0x0000F8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetCurveValue_Curve__Const) == 0x000110, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetCurveValue_Curve__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_DriverItem__Const) == 0x000114, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_DriverItem__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_DriverAxis__Const) == 0x000120, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_DriverAxis__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_RotationOffset__Const) == 0x000138, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_ActiveRegionSize__Const) == 0x000150, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_ActiveRegionSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_ActiveRegionScaleFactors__Const) == 0x000154, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_ActiveRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_FalloffSize__Const) == 0x000164, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_FalloffSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_FalloffRegionScaleFactors__Const) == 0x000168, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_FalloffRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_Debug__Const) == 0x000178, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_Debug__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_2_Item__Const) == 0x000188, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_2_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_2_1_B__Const) == 0x000190, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_2_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_1_2_Item__Const) == 0x0001A8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_2_B__Const) == 0x0001B0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_1_1_1_Item__Const) == 0x0001C8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_1_1_B__Const) == 0x0001D0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_1_RotationOffset__Const) == 0x0001E8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_1_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_1_ActiveRegionSize__Const) == 0x000200, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_1_ActiveRegionSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_1_FalloffSize__Const) == 0x000204, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_1_FalloffSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetTranslation_2_1_Item__Const) == 0x000208, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetTranslation_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_2_1_1_B__Const) == 0x000210, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_2_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, MathVectorAdd_2_1_2_B__Const) == 0x000228, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::MathVectorAdd_2_1_2_B__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetCurveValue_1_Curve__Const) == 0x000240, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetCurveValue_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SetCurveValue_1_1_Curve__Const) == 0x000244, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SetCurveValue_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_2_DriverItem__Const) == 0x000248, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_2_DriverItem__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_2_DriverAxis__Const) == 0x000250, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_2_DriverAxis__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_2_RotationOffset__Const) == 0x000268, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_2_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_2_ActiveRegionScaleFactors__Const) == 0x000280, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_2_ActiveRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_2_FalloffSize__Const) == 0x000290, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_2_FalloffSize__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_2_OptionalParentItem__Const) == 0x000294, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_2_OptionalParentItem__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, ModifyTransforms_1_ItemToModify__Const) == 0x0002A0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::ModifyTransforms_1_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AnimEvalRichCurve_Curve__Const) == 0x0002B0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AnimEvalRichCurve_Curve__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AnimEvalRichCurve_SourceMinimum__Const) == 0x000338, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AnimEvalRichCurve_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AnimEvalRichCurve_SourceMaximum__Const) == 0x00033C, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AnimEvalRichCurve_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, ModifyTransforms_1_Mode__Const) == 0x000340, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::ModifyTransforms_1_Mode__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_1_Item__Const) == 0x000344, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_1_Primary__Const) == 0x000350, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_1_Secondary__Const) == 0x000398, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_1_DebugSettings__Const) == 0x0003E0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_1_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_1_1_Item__Const) == 0x000450, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_1_1_Primary__Const) == 0x000458, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_1_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_1_1_Secondary__Const) == 0x0004A0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_1_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_Primary__Const) == 0x0004E8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_Primary__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_Secondary__Const) == 0x000530, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_Secondary__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_Item__Const) == 0x000578, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_Item__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_Primary__Const) == 0x000580, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal, AimItem_1_Secondary__Const) == 0x0005C8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Literal::AimItem_1_Secondary__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass F_MED_Binary_FaceAcc_CtrlRig.RigVMMemory_Work
// 0x08B8 (0x08E0 - 0x0028)
class F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x0070)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_OutputParam;                   // 0x00A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_InnerRegion;                   // 0x00A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_OuterRegion;                   // 0x00B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_DriverNormal;                  // 0x00C8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_Driver2D;                      // 0x00D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_DriverCache;                   // 0x00E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_OptionalParentCache;           // 0x00F8(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_3_Result;                            // 0x0108(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetTransform_1_3_Transform;                        // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_3_CachedIndex;                      // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_3_A;                                 // 0x0190(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_CachedIndex;                        // 0x01A8(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_Result;                              // 0x01B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetTransform_1_Transform;                          // 0x01D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_CachedIndex;                        // 0x0230(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_A;                                   // 0x0240(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_1_CachedIndex;                      // 0x0258(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_1_Result;                            // 0x0268(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetTransform_1_1_Transform;                        // 0x0280(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_1_CachedIndex;                      // 0x02E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_1_A;                                 // 0x02F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_1_1_CachedIndex;                    // 0x0308(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SetCurveValue_CachedCurveIndex;                    // 0x0318(0x0010)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_1_OutputParam;                 // 0x0328(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_InnerRegion;                 // 0x0330(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_OuterRegion;                 // 0x0340(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_DriverNormal;                // 0x0350(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_Driver2D;                    // 0x0360(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_DriverCache;                 // 0x0370(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_OptionalParentCache;         // 0x0380(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_1_Result;                          // 0x0390(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetTransform_1_2_1_Transform;                      // 0x03B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_2_1_CachedIndex;                    // 0x0410(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_1_A;                               // 0x0420(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_2_CachedIndex;                      // 0x0438(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_Result;                            // 0x0448(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetTransform_1_2_Transform;                        // 0x0460(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_2_CachedIndex;                      // 0x04C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_A;                                 // 0x04D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_1_2_CachedIndex;                    // 0x04E8(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_1_1_Result;                          // 0x04F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetTransform_1_1_1_Transform;                      // 0x0510(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_1_1_CachedIndex;                    // 0x0570(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_1_1_A;                               // 0x0580(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_1_1_1_CachedIndex;                  // 0x0598(0x0010)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_1_1_OutputParam;               // 0x05A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_1_InnerRegion;               // 0x05B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_1_OuterRegion;               // 0x05C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_1_DriverNormal;              // 0x05D0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_1_Driver2D;                  // 0x05E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_1_DriverCache;               // 0x05F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_1_OptionalParentCache;       // 0x0600(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_1_1_Result;                        // 0x0610(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_628[0x8];                                      // 0x0628(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetTransform_1_2_1_1_Transform;                    // 0x0630(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_2_1_1_CachedIndex;                  // 0x0690(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_1_1_A;                             // 0x06A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_2_1_CachedIndex;                    // 0x06B8(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_1_2_Result;                        // 0x06C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             GetTransform_1_2_1_2_Transform;                    // 0x06E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetTransform_1_2_1_2_CachedIndex;                  // 0x0740(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                MathVectorAdd_2_1_2_A;                             // 0x0750(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              SetTranslation_2_2_CachedIndex;                    // 0x0768(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SetCurveValue_1_CachedCurveIndex;                  // 0x0778(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SetCurveValue_1_1_CachedCurveIndex;                // 0x0788(0x0010)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_2_OutputParam;                 // 0x0798(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79C[0x4];                                      // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_2_InnerRegion;                 // 0x07A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_2_OuterRegion;                 // 0x07B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_2_DriverNormal;                // 0x07C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_2_Driver2D;                    // 0x07D0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_2_DriverCache;                 // 0x07E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_2_OptionalParentCache;         // 0x07F0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         AnimEvalRichCurve_Result;                          // 0x0800(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_1_WorkData;                       // 0x0808(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_1_CachedItem;                            // 0x0818(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_1_PrimaryCachedSpace;                    // 0x0828(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_1_SecondaryCachedSpace;                  // 0x0838(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_1_1_CachedItem;                          // 0x0848(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_1_1_PrimaryCachedSpace;                  // 0x0858(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_1_1_SecondaryCachedSpace;                // 0x0868(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_CachedItem;                                // 0x0878(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_PrimaryCachedSpace;                        // 0x0888(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_SecondaryCachedSpace;                      // 0x0898(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_CachedItem;                              // 0x08A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_PrimaryCachedSpace;                      // 0x08B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              AimItem_1_SecondaryCachedSpace;                    // 0x08C8(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass F_MED_Binary_FaceAcc_CtrlRig.RigVMMemory_Work", true>();
	}
	static class F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work) == 0x0008E0, "Wrong size on F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OutputParam) == 0x0000A0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OutputParam' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_InnerRegion) == 0x0000A8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_InnerRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OuterRegion) == 0x0000B8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OuterRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_DriverNormal) == 0x0000C8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_DriverNormal' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_Driver2D) == 0x0000D8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_Driver2D' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_DriverCache) == 0x0000E8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_DriverCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OptionalParentCache) == 0x0000F8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_3_Result) == 0x000108, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_3_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_3_Transform) == 0x000120, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_3_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_3_CachedIndex) == 0x000180, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_3_A) == 0x000190, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_3_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_CachedIndex) == 0x0001A8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_Result) == 0x0001B8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_Transform) == 0x0001D0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_CachedIndex) == 0x000230, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_A) == 0x000240, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_1_CachedIndex) == 0x000258, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_1_Result) == 0x000268, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_1_Transform) == 0x000280, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_1_CachedIndex) == 0x0002E0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_1_A) == 0x0002F0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_1_1_CachedIndex) == 0x000308, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetCurveValue_CachedCurveIndex) == 0x000318, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetCurveValue_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OutputParam) == 0x000328, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OutputParam' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_InnerRegion) == 0x000330, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_InnerRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OuterRegion) == 0x000340, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OuterRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_DriverNormal) == 0x000350, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_DriverNormal' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_Driver2D) == 0x000360, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_Driver2D' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_DriverCache) == 0x000370, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_DriverCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OptionalParentCache) == 0x000380, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_1_Result) == 0x000390, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_1_Transform) == 0x0003B0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_1_CachedIndex) == 0x000410, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_1_A) == 0x000420, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_2_CachedIndex) == 0x000438, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_Result) == 0x000448, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_Transform) == 0x000460, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_CachedIndex) == 0x0004C0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_A) == 0x0004D0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_1_2_CachedIndex) == 0x0004E8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_1_1_Result) == 0x0004F8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_1_1_Transform) == 0x000510, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_1_1_CachedIndex) == 0x000570, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_1_1_A) == 0x000580, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_1_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_1_1_1_CachedIndex) == 0x000598, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_1_OutputParam) == 0x0005A8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_1_OutputParam' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_1_InnerRegion) == 0x0005B0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_1_InnerRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_1_OuterRegion) == 0x0005C0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_1_OuterRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_1_DriverNormal) == 0x0005D0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_1_DriverNormal' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_1_Driver2D) == 0x0005E0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_1_Driver2D' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_1_DriverCache) == 0x0005F0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_1_DriverCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_1_OptionalParentCache) == 0x000600, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_1_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_1_1_Result) == 0x000610, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_1_1_Transform) == 0x000630, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_1_1_CachedIndex) == 0x000690, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_1_1_A) == 0x0006A0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_1_1_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_2_1_CachedIndex) == 0x0006B8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_1_2_Result) == 0x0006C8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_1_2_Transform) == 0x0006E0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_1_2_Transform' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, GetTransform_1_2_1_2_CachedIndex) == 0x000740, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::GetTransform_1_2_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, MathVectorAdd_2_1_2_A) == 0x000750, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::MathVectorAdd_2_1_2_A' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetTranslation_2_2_CachedIndex) == 0x000768, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetTranslation_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetCurveValue_1_CachedCurveIndex) == 0x000778, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetCurveValue_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SetCurveValue_1_1_CachedCurveIndex) == 0x000788, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SetCurveValue_1_1_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_2_OutputParam) == 0x000798, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_2_OutputParam' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_2_InnerRegion) == 0x0007A0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_2_InnerRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_2_OuterRegion) == 0x0007B0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_2_OuterRegion' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_2_DriverNormal) == 0x0007C0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_2_DriverNormal' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_2_Driver2D) == 0x0007D0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_2_Driver2D' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_2_DriverCache) == 0x0007E0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_2_DriverCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, SphericalPoseReader_2_OptionalParentCache) == 0x0007F0, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::SphericalPoseReader_2_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AnimEvalRichCurve_Result) == 0x000800, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AnimEvalRichCurve_Result' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, ModifyTransforms_1_WorkData) == 0x000808, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::ModifyTransforms_1_WorkData' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_1_CachedItem) == 0x000818, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_1_PrimaryCachedSpace) == 0x000828, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_1_SecondaryCachedSpace) == 0x000838, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_1_1_CachedItem) == 0x000848, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_1_1_PrimaryCachedSpace) == 0x000858, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_1_1_SecondaryCachedSpace) == 0x000868, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_CachedItem) == 0x000878, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_CachedItem' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_PrimaryCachedSpace) == 0x000888, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_SecondaryCachedSpace) == 0x000898, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_CachedItem) == 0x0008A8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_CachedItem' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_PrimaryCachedSpace) == 0x0008B8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work, AimItem_1_SecondaryCachedSpace) == 0x0008C8, "Member 'F_MED_Binary_FaceAcc_CtrlRig::URigVMMemory_Work::AimItem_1_SecondaryCachedSpace' has a wrong offset!");

}

