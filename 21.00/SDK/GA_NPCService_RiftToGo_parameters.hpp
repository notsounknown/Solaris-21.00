#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_NPCService_RiftToGo

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_0_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C.Triggered_1FE8A3C2442D03AE8B7A639836B5A08F
// 0x0030 (0x0030 - 0x0000)
struct GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F) == 0x000008, "Wrong alignment on GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F");
static_assert(sizeof(GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F) == 0x000030, "Wrong size on GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F, TargetData) == 0x000000, "Member 'GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F::TargetData' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F, ApplicationTag) == 0x000028, "Member 'GA_NPCService_RiftToGo_C_Triggered_1FE8A3C2442D03AE8B7A639836B5A08F::ApplicationTag' has a wrong offset!");

// Function GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_NPCService_RiftToGo_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_NPCService_RiftToGo_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_NPCService_RiftToGo_C_K2_OnEndAbility");
static_assert(sizeof(GA_NPCService_RiftToGo_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_NPCService_RiftToGo_C_K2_OnEndAbility");
static_assert(offsetof(GA_NPCService_RiftToGo_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_NPCService_RiftToGo_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C.Is Flying
// 0x0020 (0x0020 - 0x0000)
struct GA_NPCService_RiftToGo_C_Is_Flying final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_NPCService_RiftToGo_C_Is_Flying) == 0x000008, "Wrong alignment on GA_NPCService_RiftToGo_C_Is_Flying");
static_assert(sizeof(GA_NPCService_RiftToGo_C_Is_Flying) == 0x000020, "Wrong size on GA_NPCService_RiftToGo_C_Is_Flying");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Is_Flying, NewParam) == 0x000000, "Member 'GA_NPCService_RiftToGo_C_Is_Flying::NewParam' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Is_Flying, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'GA_NPCService_RiftToGo_C_Is_Flying::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Is_Flying, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x000010, "Member 'GA_NPCService_RiftToGo_C_Is_Flying::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Is_Flying, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_NPCService_RiftToGo_C_Is_Flying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Is_Flying, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'GA_NPCService_RiftToGo_C_Is_Flying::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C.ExecuteUbergraph_GA_NPCService_RiftToGo
// 0x03A0 (0x03A0 - 0x0000)
struct GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentSourceObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0038(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0060(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0064(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x0068(0x0028)()
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0090(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x00B8(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00BC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x00D8(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue_1;           // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01B0(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0258(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0xC];                                      // 0x0264(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0270(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_RiftPortal_Item_Athena_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_2;                   // 0x02E0(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_2;               // 0x0308(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Flying_NewParam;                       // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0310(0x0048)(ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0368(0x0028)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0390(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo) == 0x000010, "Wrong alignment on GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo");
static_assert(sizeof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo) == 0x0003A0, "Wrong size on GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, EntryPoint) == 0x000000, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_GetCurrentSourceObject_ReturnValue) == 0x000008, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_GetCurrentSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_DynamicCast_AsActor) == 0x000010, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_MakeArray_Array) == 0x000028, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CustomEvent_TargetData) == 0x000038, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CustomEvent_ApplicationTag) == 0x000060, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, Temp_struct_Variable) == 0x000064, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, Temp_struct_Variable_1) == 0x000068, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CustomEvent_TargetData_1) == 0x000090, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CustomEvent_ApplicationTag_1) == 0x0000B8, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000BC, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000C8, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000C9, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x0000D0, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0000D8, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_Event_bWasCancelled) == 0x0001A9, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_K2_CommitAbility_ReturnValue_1) == 0x0001AA, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_K2_CommitAbility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_IsValid_ReturnValue_1) == 0x0001AB, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001B0, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_BreakTransform_Location) == 0x000210, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_BreakTransform_Rotation) == 0x000228, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_BreakTransform_Scale) == 0x000240, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000258, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_MakeTransform_ReturnValue) == 0x000270, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002D0, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002D8, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CustomEvent_TargetData_2) == 0x0002E0, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CustomEvent_TargetData_2' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_CustomEvent_ApplicationTag_2) == 0x000308, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_CustomEvent_ApplicationTag_2' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_Is_Flying_NewParam) == 0x00030C, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_Is_Flying_NewParam' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_GetActorInfo_ReturnValue) == 0x000310, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000358, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, K2Node_DynamicCast_bSuccess_1) == 0x000360, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000368, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000390, "Member 'GA_NPCService_RiftToGo_C_ExecuteUbergraph_GA_NPCService_RiftToGo::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C.Completed_1FE8A3C2442D03AE8B7A639836B5A08F
// 0x0030 (0x0030 - 0x0000)
struct GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F) == 0x000008, "Wrong alignment on GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F");
static_assert(sizeof(GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F) == 0x000030, "Wrong size on GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F, TargetData) == 0x000000, "Member 'GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F::TargetData' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F, ApplicationTag) == 0x000028, "Member 'GA_NPCService_RiftToGo_C_Completed_1FE8A3C2442D03AE8B7A639836B5A08F::ApplicationTag' has a wrong offset!");

// Function GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C.Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F
// 0x0030 (0x0030 - 0x0000)
struct GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F) == 0x000008, "Wrong alignment on GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F");
static_assert(sizeof(GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F) == 0x000030, "Wrong size on GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F, TargetData) == 0x000000, "Member 'GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F::TargetData' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F, ApplicationTag) == 0x000028, "Member 'GA_NPCService_RiftToGo_C_Cancelled_1FE8A3C2442D03AE8B7A639836B5A08F::ApplicationTag' has a wrong offset!");

// Function GA_NPCService_RiftToGo.GA_NPCService_RiftToGo_C.K2_CanActivateAbility
// 0x0088 (0x0088 - 0x0000)
struct GA_NPCService_RiftToGo_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_NPCService_RiftToGo_C_K2_CanActivateAbility");
static_assert(sizeof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility) == 0x000088, "Wrong size on GA_NPCService_RiftToGo_C_K2_CanActivateAbility");
static_assert(offsetof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_NPCService_RiftToGo_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_NPCService_RiftToGo_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_NPCService_RiftToGo_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_NPCService_RiftToGo_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000078, "Member 'GA_NPCService_RiftToGo_C_K2_CanActivateAbility::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GA_NPCService_RiftToGo_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GA_NPCService_RiftToGo_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

