#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAnimationBPFunctionLibrary

#include "Basic.hpp"

#include "FortAnimationBPFunctionLibrary_classes.hpp"
#include "FortAnimationBPFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.WindGustGeneratorFunction
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           GustSettings                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      ClothGustLocalSettings                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GustStrength___WindVelocity                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      ClothGustLocalSettingsOut                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::WindGustGeneratorFunction(float DeltaTime, const struct FWindGustSettingStruct& GustSettings, const struct FWindGustLocalSettingStruct& ClothGustLocalSettings, class UObject* __WorldContext, float* GustStrength___WindVelocity, struct FWindGustLocalSettingStruct* ClothGustLocalSettingsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "WindGustGeneratorFunction");

	Params::FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.GustSettings = std::move(GustSettings);
	Parms.ClothGustLocalSettings = std::move(ClothGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GustStrength___WindVelocity != nullptr)
		*GustStrength___WindVelocity = Parms.GustStrength___WindVelocity;

	if (ClothGustLocalSettingsOut != nullptr)
		*ClothGustLocalSettingsOut = std::move(Parms.ClothGustLocalSettingsOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Wind Gust Control Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GameTimeinSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           WindGustSettings                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GustStrengthWindVelocity_Out                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettingsOut                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Wind_Gust_Control_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, float DeltaTime, float GameTimeinSeconds, class FName JointName, const struct FWindGustSettingStruct& WindGustSettings, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, struct FVector* GustStrengthWindVelocity_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettingsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Wind Gust Control Function");

	Params::FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeinSeconds = GameTimeinSeconds;
	Parms.JointName = JointName;
	Parms.WindGustSettings = std::move(WindGustSettings);
	Parms.WindGustLocalSettings = std::move(WindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GustStrengthWindVelocity_Out != nullptr)
		*GustStrengthWindVelocity_Out = std::move(Parms.GustStrengthWindVelocity_Out);

	if (WindGustLocalSettingsOut != nullptr)
		*WindGustLocalSettingsOut = std::move(Parms.WindGustLocalSettingsOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Set Transformation Montage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Set_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UAnimMontage* Montage, float StartTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Set Transformation Montage");

	Params::FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;
	Parms.Montage = Montage;
	Parms.StartTime = StartTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Scale Joint Rotation Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             TargetBone                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ReferenceBone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkinnedMeshComponent*            SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         FinalRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         OriginalRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::Scale_Joint_Rotation_Function(const struct FRotator& Scale, class FName TargetBone, class FName ReferenceBone, class USkinnedMeshComponent* SkelMeshComponent, class UObject* __WorldContext, struct FRotator* FinalRotation, struct FRotator* OriginalRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Scale Joint Rotation Function");

	Params::FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function Parms{};

	Parms.Scale = std::move(Scale);
	Parms.TargetBone = TargetBone;
	Parms.ReferenceBone = ReferenceBone;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FinalRotation != nullptr)
		*FinalRotation = std::move(Parms.FinalRotation);

	if (OriginalRotation != nullptr)
		*OriginalRotation = std::move(Parms.OriginalRotation);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.RandomRotatorFunction
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   GameTimeinSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PerlinScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Frequency                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Amplitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TimeOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         RandomRotator                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::RandomRotatorFunction(float GameTimeinSeconds, float PerlinScale, const struct FRotator& Frequency, const struct FRotator& Amplitude, const struct FRotator& Offset, float TimeOffset, class UObject* __WorldContext, struct FRotator* RandomRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "RandomRotatorFunction");

	Params::FortAnimationBPFunctionLibrary_C_RandomRotatorFunction Parms{};

	Parms.GameTimeinSeconds = GameTimeinSeconds;
	Parms.PerlinScale = PerlinScale;
	Parms.Frequency = std::move(Frequency);
	Parms.Amplitude = std::move(Amplitude);
	Parms.Offset = std::move(Offset);
	Parms.TimeOffset = TimeOffset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RandomRotator != nullptr)
		*RandomRotator = std::move(Parms.RandomRotator);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Random Vector Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   SkelMeshComponent                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GameTimeinSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PerlinScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Frequency                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Amplitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          VectorOut                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Random_Vector_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class UMeshComponent* SkelMeshComponent, class FName JointName, float GameTimeinSeconds, float TimeOffset, float PerlinScale, const struct FVector& Frequency, const struct FVector& Amplitude, const struct FVector& Offset, class UObject* __WorldContext, struct FVector* VectorOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Random Vector Function");

	Params::FortAnimationBPFunctionLibrary_C_Random_Vector_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.JointName = JointName;
	Parms.GameTimeinSeconds = GameTimeinSeconds;
	Parms.TimeOffset = TimeOffset;
	Parms.PerlinScale = PerlinScale;
	Parms.Frequency = std::move(Frequency);
	Parms.Amplitude = std::move(Amplitude);
	Parms.Offset = std::move(Offset);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (VectorOut != nullptr)
		*VectorOut = std::move(Parms.VectorOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Player Movement Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X_Dot_Product                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y_Dot_Product                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z_Dot_Product                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DrawDebug                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Debug_Scalar                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X_Movement                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y_Movement                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z_Movement                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Player_Movement_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, float X_Dot_Product, float Y_Dot_Product, float Z_Dot_Product, bool DrawDebug, float Debug_Scalar, class UObject* __WorldContext, float* X_Movement, float* Y_Movement, float* Z_Movement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Player Movement Function");

	Params::FortAnimationBPFunctionLibrary_C_Player_Movement_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.X_Dot_Product = X_Dot_Product;
	Parms.Y_Dot_Product = Y_Dot_Product;
	Parms.Z_Dot_Product = Z_Dot_Product;
	Parms.DrawDebug = DrawDebug;
	Parms.Debug_Scalar = Debug_Scalar;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (X_Movement != nullptr)
		*X_Movement = Parms.X_Movement;

	if (Y_Movement != nullptr)
		*Y_Movement = Parms.Y_Movement;

	if (Z_Movement != nullptr)
		*Z_Movement = Parms.Z_Movement;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Play Transformation Montage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Play_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Play Transformation Montage");

	Params::FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override State Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GameTimeinSeconds                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGravityOverrideParamsStruct     GravityOverrideParams                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugDraw                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DebugJointName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GravityOverride                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CurrentStateOut                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// struct FGravityOverrideSettingStruct    GravityOverrideSettingsOut                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Gravity_Override_State_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const float GameTimeinSeconds, const struct FGravityOverrideParamsStruct& GravityOverrideParams, bool DebugDraw, class FName DebugJointName, class UObject* __WorldContext, struct FVector* GravityOverride, class FString* CurrentStateOut, struct FGravityOverrideSettingStruct* GravityOverrideSettingsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Gravity Override State Function");

	Params::FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.GameTimeinSeconds = GameTimeinSeconds;
	Parms.GravityOverrideParams = std::move(GravityOverrideParams);
	Parms.DebugDraw = DebugDraw;
	Parms.DebugJointName = DebugJointName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GravityOverride != nullptr)
		*GravityOverride = std::move(Parms.GravityOverride);

	if (CurrentStateOut != nullptr)
		*CurrentStateOut = std::move(Parms.CurrentStateOut);

	if (GravityOverrideSettingsOut != nullptr)
		*GravityOverrideSettingsOut = std::move(Parms.GravityOverrideSettingsOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override Setter Function
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   SkelMeshComponent                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGravityOverrideSettingStruct    GravityOverride_Settings                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GameTimeinSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGravityOverrideSettingStruct    GravityOverride_Settings_Out                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GravityOverride_Out                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Gravity_Override_Setter_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class UMeshComponent* SkelMeshComponent, const struct FGravityOverrideSettingStruct& GravityOverride_Settings, float GameTimeinSeconds, class UObject* __WorldContext, struct FGravityOverrideSettingStruct* GravityOverride_Settings_Out, struct FVector* GravityOverride_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Gravity Override Setter Function");

	Params::FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.GravityOverride_Settings = std::move(GravityOverride_Settings);
	Parms.GameTimeinSeconds = GameTimeinSeconds;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GravityOverride_Settings_Out != nullptr)
		*GravityOverride_Settings_Out = std::move(Parms.GravityOverride_Settings_Out);

	if (GravityOverride_Out != nullptr)
		*GravityOverride_Out = std::move(Parms.GravityOverride_Out);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GameTimeinSeconds                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WindFreq                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WindAmp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WindOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GoingUpGravityOverride                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ComingDownGravityOverride                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DivingDownGravityOverride                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ParachuteOpenedGravityOverride                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GroundWindFreq                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GroundWindAmp                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GroundWindOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OnGroundGravityOverride                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SwimmingGravityOverride                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GravityOverride                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Gravity_Override_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const float GameTimeinSeconds, const struct FVector& WindFreq, const struct FVector& WindAmp, const struct FVector& WindOffset, const struct FVector& GoingUpGravityOverride, const struct FVector& ComingDownGravityOverride, const struct FVector& DivingDownGravityOverride, const struct FVector& ParachuteOpenedGravityOverride, const struct FVector& GroundWindFreq, const struct FVector& GroundWindAmp, const struct FVector& GroundWindOffset, const struct FVector& OnGroundGravityOverride, const struct FVector& SwimmingGravityOverride, class FName JointName, class UObject* __WorldContext, struct FVector* GravityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Gravity Override Function");

	Params::FortAnimationBPFunctionLibrary_C_Gravity_Override_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.GameTimeinSeconds = GameTimeinSeconds;
	Parms.WindFreq = std::move(WindFreq);
	Parms.WindAmp = std::move(WindAmp);
	Parms.WindOffset = std::move(WindOffset);
	Parms.GoingUpGravityOverride = std::move(GoingUpGravityOverride);
	Parms.ComingDownGravityOverride = std::move(ComingDownGravityOverride);
	Parms.DivingDownGravityOverride = std::move(DivingDownGravityOverride);
	Parms.ParachuteOpenedGravityOverride = std::move(ParachuteOpenedGravityOverride);
	Parms.GroundWindFreq = std::move(GroundWindFreq);
	Parms.GroundWindAmp = std::move(GroundWindAmp);
	Parms.GroundWindOffset = std::move(GroundWindOffset);
	Parms.OnGroundGravityOverride = std::move(OnGroundGravityOverride);
	Parms.SwimmingGravityOverride = std::move(SwimmingGravityOverride);
	Parms.JointName = JointName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GravityOverride != nullptr)
		*GravityOverride = std::move(Parms.GravityOverride);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.FN_PSDPoseReaderFNC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           startJnt                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           endJnt                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           poseJnt                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   pose_output                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::FN_PSDPoseReaderFNC(const class FString& startJnt, const class FString& endJnt, const class FString& poseJnt, float Angle, bool Debug, class USkeletalMeshComponent* SkeletalMeshComponent, class UObject* __WorldContext, float* pose_output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "FN_PSDPoseReaderFNC");

	Params::FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC Parms{};

	Parms.startJnt = std::move(startJnt);
	Parms.endJnt = std::move(endJnt);
	Parms.poseJnt = std::move(poseJnt);
	Parms.Angle = Angle;
	Parms.Debug = Debug;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (pose_output != nullptr)
		*pose_output = Parms.pose_output;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.DrawVectorFromJointFunction
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LineEnd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          JointOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Thickness                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::DrawVectorFromJointFunction(class USceneComponent* SkelMeshComponent, class FName JointName, const struct FVector& LineEnd, const struct FVector& JointOffset, const struct FLinearColor& LineColor, float Thickness, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "DrawVectorFromJointFunction");

	Params::FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction Parms{};

	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.JointName = JointName;
	Parms.LineEnd = std::move(LineEnd);
	Parms.JointOffset = std::move(JointOffset);
	Parms.LineColor = std::move(LineColor);
	Parms.Thickness = Thickness;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.DrawJointDebugFunction
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          JointOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Thickness                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugDraw                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::DrawJointDebugFunction(class USceneComponent* SkelMeshComponent, const struct FVector& JointOffset, TArray<class FName>& JointName, float Scale, float Duration, float Thickness, bool DebugDraw, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "DrawJointDebugFunction");

	Params::FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction Parms{};

	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.JointOffset = std::move(JointOffset);
	Parms.JointName = std::move(JointName);
	Parms.Scale = Scale;
	Parms.Duration = Duration;
	Parms.Thickness = Thickness;
	Parms.DebugDraw = DebugDraw;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	JointName = std::move(Parms.JointName);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Debug Cloth Teleport Threshold Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MinDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MinRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PrintToScreen                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         PawnDeltaRotation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   PrintToScreenDuration                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Debug_Cloth_Teleport_Threshold_Function(float MinDistance, float MinRotation, class USceneComponent* SkelMeshComponent, bool PrintToScreen, class FName BoneName, struct FVector& InVector, const struct FRotator& PawnDeltaRotation, float PrintToScreenDuration, class UObject* __WorldContext, float* Distance, float* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Debug Cloth Teleport Threshold Function");

	Params::FortAnimationBPFunctionLibrary_C_Debug_Cloth_Teleport_Threshold_Function Parms{};

	Parms.MinDistance = MinDistance;
	Parms.MinRotation = MinRotation;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.PrintToScreen = PrintToScreen;
	Parms.BoneName = BoneName;
	Parms.InVector = std::move(InVector);
	Parms.PawnDeltaRotation = std::move(PawnDeltaRotation);
	Parms.PrintToScreenDuration = PrintToScreenDuration;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InVector = std::move(Parms.InVector);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (Rotation != nullptr)
		*Rotation = Parms.Rotation;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.ComplexSimSpaceFunction
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSpeedMax                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PawnSpeedMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RInterpErrorTolerance                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugDraw                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         sim_space_rotation_in                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    inComponentSpaceIn                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    inComponentSpaceLastFrameIn                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    lockedOnSimSpaceIn                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSpeedIn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         sim_space_rotation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    inComponentSpaceOut                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    inComponentSpaceLastFrameOut                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    lockedOnSimSpaceOut                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSpeedOut                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::ComplexSimSpaceFunction(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, float InterpSpeedMax, float PawnSpeedMax, float RInterpErrorTolerance, float DeltaTime, bool DebugDraw, const struct FRotator& sim_space_rotation_in, bool inComponentSpaceIn, bool inComponentSpaceLastFrameIn, bool lockedOnSimSpaceIn, float InterpSpeedIn, class UObject* __WorldContext, struct FRotator* sim_space_rotation, bool* inComponentSpaceOut, bool* inComponentSpaceLastFrameOut, bool* lockedOnSimSpaceOut, float* InterpSpeedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "ComplexSimSpaceFunction");

	Params::FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.InterpSpeedMax = InterpSpeedMax;
	Parms.PawnSpeedMax = PawnSpeedMax;
	Parms.RInterpErrorTolerance = RInterpErrorTolerance;
	Parms.DeltaTime = DeltaTime;
	Parms.DebugDraw = DebugDraw;
	Parms.sim_space_rotation_in = std::move(sim_space_rotation_in);
	Parms.inComponentSpaceIn = inComponentSpaceIn;
	Parms.inComponentSpaceLastFrameIn = inComponentSpaceLastFrameIn;
	Parms.lockedOnSimSpaceIn = lockedOnSimSpaceIn;
	Parms.InterpSpeedIn = InterpSpeedIn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (sim_space_rotation != nullptr)
		*sim_space_rotation = std::move(Parms.sim_space_rotation);

	if (inComponentSpaceOut != nullptr)
		*inComponentSpaceOut = Parms.inComponentSpaceOut;

	if (inComponentSpaceLastFrameOut != nullptr)
		*inComponentSpaceLastFrameOut = Parms.inComponentSpaceLastFrameOut;

	if (lockedOnSimSpaceOut != nullptr)
		*lockedOnSimSpaceOut = Parms.lockedOnSimSpaceOut;

	if (InterpSpeedOut != nullptr)
		*InterpSpeedOut = Parms.InterpSpeedOut;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Setter Function
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings_Out                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Setter_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const struct FClothSettingStruct& Cloth_Settings, class UObject* __WorldContext, struct FClothSettingStruct* Cloth_Settings_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Setter Function");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.Cloth_Settings = std::move(Cloth_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Cloth_Settings_Out != nullptr)
		*Cloth_Settings_Out = std::move(Parms.Cloth_Settings_Out);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Helper Scale For Player Movement
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LinearVelScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PlayerFwdVector                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PlayerFwdVectorJump                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ClothUpX                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ClothUpZ                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LinearVelVectorOut                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Helper_Scale_For_Player_Movement(const struct FVector& LinearVelScale, float PlayerFwdVector, float PlayerFwdVectorJump, float ClothUpX, float ClothUpZ, class UObject* __WorldContext, struct FVector* LinearVelVectorOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Helper Scale For Player Movement");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Helper_Scale_For_Player_Movement Parms{};

	Parms.LinearVelScale = std::move(LinearVelScale);
	Parms.PlayerFwdVector = PlayerFwdVector;
	Parms.PlayerFwdVectorJump = PlayerFwdVectorJump;
	Parms.ClothUpX = ClothUpX;
	Parms.ClothUpZ = ClothUpZ;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearVelVectorOut != nullptr)
		*LinearVelVectorOut = std::move(Parms.LinearVelVectorOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ClothingAssetName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothParamsStruct               Cloth_Paramaters                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ClothUpAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OnGround_Moving_SpeedLimit                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OnGround_Moving_AngularVel_Max                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OnGround_Moving_FictitiousVel_Max                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GameTimeinSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustParamsStruct            WindGustsParams                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CurrentStateOut                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings_Out                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings_Out                                (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           WindGustSettings_Out                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings_Out                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GustStrength___WindVelocityOut                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class FString& ClothingAssetName, const struct FClothParamsStruct& Cloth_Paramaters, const struct FClothCoreSettingStruct& Cloth_Core_Settings, const struct FVector& ClothUpAxis, float OnGround_Moving_SpeedLimit, float OnGround_Moving_AngularVel_Max, float OnGround_Moving_FictitiousVel_Max, float DeltaTime, float GameTimeinSeconds, const struct FWindGustParamsStruct& WindGustsParams, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, class FString* CurrentStateOut, struct FClothSettingStruct* Cloth_Settings_Out, struct FClothCoreSettingStruct* Cloth_Core_Settings_Out, struct FWindGustSettingStruct* WindGustSettings_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettings_Out, struct FVector* GustStrength___WindVelocityOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Function");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.ClothingAssetName = std::move(ClothingAssetName);
	Parms.Cloth_Paramaters = std::move(Cloth_Paramaters);
	Parms.Cloth_Core_Settings = std::move(Cloth_Core_Settings);
	Parms.ClothUpAxis = std::move(ClothUpAxis);
	Parms.OnGround_Moving_SpeedLimit = OnGround_Moving_SpeedLimit;
	Parms.OnGround_Moving_AngularVel_Max = OnGround_Moving_AngularVel_Max;
	Parms.OnGround_Moving_FictitiousVel_Max = OnGround_Moving_FictitiousVel_Max;
	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeinSeconds = GameTimeinSeconds;
	Parms.WindGustsParams = std::move(WindGustsParams);
	Parms.WindGustLocalSettings = std::move(WindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CurrentStateOut != nullptr)
		*CurrentStateOut = std::move(Parms.CurrentStateOut);

	if (Cloth_Settings_Out != nullptr)
		*Cloth_Settings_Out = std::move(Parms.Cloth_Settings_Out);

	if (Cloth_Core_Settings_Out != nullptr)
		*Cloth_Core_Settings_Out = std::move(Parms.Cloth_Core_Settings_Out);

	if (WindGustSettings_Out != nullptr)
		*WindGustSettings_Out = std::move(Parms.WindGustSettings_Out);

	if (WindGustLocalSettings_Out != nullptr)
		*WindGustLocalSettings_Out = std::move(Parms.WindGustLocalSettings_Out);

	if (GustStrength___WindVelocityOut != nullptr)
		*GustStrength___WindVelocityOut = std::move(Parms.GustStrength___WindVelocityOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Clear Transformation Montage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Clear_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Clear Transformation Montage");

	Params::FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Adjust Emote Vehicle Wheel Rotation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owning_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentWheelRotation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentActorRotation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewActorRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewWheelRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Adjust_Emote_Vehicle_Wheel_Rotation(class AActor* Owning_Actor, float CurrentWheelRotation, float DeltaTime, float CurrentActorRotation, class UObject* __WorldContext, float* NewActorRotation, float* NewWheelRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Adjust Emote Vehicle Wheel Rotation");

	Params::FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation Parms{};

	Parms.Owning_Actor = Owning_Actor;
	Parms.CurrentWheelRotation = CurrentWheelRotation;
	Parms.DeltaTime = DeltaTime;
	Parms.CurrentActorRotation = CurrentActorRotation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewActorRotation != nullptr)
		*NewActorRotation = Parms.NewActorRotation;

	if (NewWheelRotation != nullptr)
		*NewWheelRotation = Parms.NewWheelRotation;
}

}

