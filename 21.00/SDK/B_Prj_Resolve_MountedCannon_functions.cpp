#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Resolve_MountedCannon

#include "Basic.hpp"

#include "B_Prj_Resolve_MountedCannon_classes.hpp"
#include "B_Prj_Resolve_MountedCannon_parameters.hpp"


namespace SDK
{

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.AdjustProjectileOffset__FinishedFunc
// (BlueprintEvent)

void AB_Prj_Resolve_MountedCannon_C::AdjustProjectileOffset__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "AdjustProjectileOffset__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.AdjustProjectileOffset__UpdateFunc
// (BlueprintEvent)

void AB_Prj_Resolve_MountedCannon_C::AdjustProjectileOffset__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "AdjustProjectileOffset__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              WaterBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortWaterInteractionComponent*   WaterInteractionComponent_0                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsFirstBody                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Prj_Resolve_MountedCannon_C::BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature");

	Params::B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature Parms{};

	Parms.WaterBody = WaterBody;
	Parms.WaterInteractionComponent_0 = WaterInteractionComponent_0;
	Parms.bIsFirstBody = bIsFirstBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       ImpactResult                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_Prj_Resolve_MountedCannon_C::BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature");

	Params::B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature Parms{};

	Parms.ImpactResult = std::move(ImpactResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.CalculateNewVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          TraceStart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceEnd                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue2                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AB_Prj_Resolve_MountedCannon_C::CalculateNewVelocity(const struct FVector& TraceStart, const struct FVector& TraceEnd, bool* ReturnValue2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "CalculateNewVelocity");

	Params::B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity Parms{};

	Parms.TraceStart = std::move(TraceStart);
	Parms.TraceEnd = std::move(TraceEnd);

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnValue2 != nullptr)
		*ReturnValue2 = Parms.ReturnValue2;

	return Parms.ReturnValue;
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.ExecuteUbergraph_B_Prj_Resolve_MountedCannon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Prj_Resolve_MountedCannon_C::ExecuteUbergraph_B_Prj_Resolve_MountedCannon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "ExecuteUbergraph_B_Prj_Resolve_MountedCannon");

	Params::B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.HandleProjectileStop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_Prj_Resolve_MountedCannon_C::HandleProjectileStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "HandleProjectileStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.LaunchPawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawnAthena*            LaunchedPawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Prj_Resolve_MountedCannon_C::LaunchPawn(class AFortPlayerPawnAthena* LaunchedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "LaunchPawn");

	Params::B_Prj_Resolve_MountedCannon_C_LaunchPawn Parms{};

	Parms.LaunchedPawn = LaunchedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.OnExploded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   HitActors                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FHitResult>               HitResults                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_Prj_Resolve_MountedCannon_C::OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "OnExploded");

	Params::B_Prj_Resolve_MountedCannon_C_OnExploded Parms{};

	Parms.HitActors = std::move(HitActors);
	Parms.HitResults = std::move(HitResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.OnTouched
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    bIsOverlap                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Prj_Resolve_MountedCannon_C::OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "OnTouched");

	Params::B_Prj_Resolve_MountedCannon_C_OnTouched Parms{};

	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.HitResult = std::move(HitResult);
	Parms.bIsOverlap = bIsOverlap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.PlayExplodeVFXAndSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_Prj_Resolve_MountedCannon_C::PlayExplodeVFXAndSound(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "PlayExplodeVFXAndSound");

	Params::B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Prj_Resolve_MountedCannon_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.Resume_Movement
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_Resolve_MountedCannon_C::Resume_Movement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "Resume_Movement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.ShouldResimulateAfterBuildingHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABuildingActor*                   HitBuilding                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AB_Prj_Resolve_MountedCannon_C::ShouldResimulateAfterBuildingHit(class ABuildingActor* HitBuilding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "ShouldResimulateAfterBuildingHit");

	Params::B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit Parms{};

	Parms.HitBuilding = HitBuilding;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_Resolve_MountedCannon_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_Resolve_MountedCannon_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

