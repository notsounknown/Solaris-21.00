#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_MED_Temple_FaceAcc_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "F_MED_Temple_FaceAcc_AnimBP_structs.hpp"
#include "GravityOverrideParamsStruct_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass F_MED_Temple_FaceAcc_AnimBP.F_MED_Temple_FaceAcc_AnimBP_C
// 0x39A0 (0x4030 - 0x0690)
class UF_MED_Temple_FaceAcc_AnimBP_C final : public UCustomCharacterPartAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct F_MED_Temple_FaceAcc_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0698(0x0003)(HasGetValueTypeHash)
	uint8                                         Pad_69B[0x5];                                      // 0x069B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x06A0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06A8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06B0(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x06D0(0x0180)(ContainsInstancedReference)
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_2;                         // 0x0850(0x0980)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_1;                         // 0x11D0(0x0980)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x1B50(0x0980)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x24D0(0x0100)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x25D0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x25F0(0x0028)()
	uint8                                         Pad_2618[0x8];                                     // 0x2618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Trail                        AnimGraphNode_Trail;                               // 0x2620(0x02A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x28C0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x28E8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2930(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x2958(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2978(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x29A0(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x29C0(0x0100)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x2AC0(0x0020)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_4;                        // 0x2AE0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_3;                        // 0x2BE8(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_2;                        // 0x2CF0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_1;                        // 0x2DF8(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint;                          // 0x2F00(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x3008(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x3028(0x0020)()
	uint8                                         Pad_3048[0x8];                                     // 0x3048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x3050(0x0510)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x3560(0x0510)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x3A70(0x0048)()
	bool                                          isWearingBackbling;                                // 0x3AB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB9[0x3];                                     // 0x3AB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IsWearingCape;                                     // 0x3ABC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GravityVector;                                     // 0x3AC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         templePackAlpha;                                   // 0x3AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IsGenericBackpackAlpha;                            // 0x3ADC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isWearingCapeBool;                                 // 0x3AE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isWearingBackpack;                                 // 0x3AE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isTemplePack;                                      // 0x3AE2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE3[0x5];                                     // 0x3AE3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGravityOverrideParamsStruct           Gravity_Override_Params;                           // 0x3AE8(0x0548)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_F_MED_Temple_FaceAcc_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"F_MED_Temple_FaceAcc_AnimBP_C">();
	}
	static class UF_MED_Temple_FaceAcc_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UF_MED_Temple_FaceAcc_AnimBP_C>();
	}
};
static_assert(alignof(UF_MED_Temple_FaceAcc_AnimBP_C) == 0x000010, "Wrong alignment on UF_MED_Temple_FaceAcc_AnimBP_C");
static_assert(sizeof(UF_MED_Temple_FaceAcc_AnimBP_C) == 0x004030, "Wrong size on UF_MED_Temple_FaceAcc_AnimBP_C");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, UberGraphFrame) == 0x000690, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, __AnimBlueprintMutables) == 0x000698, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x0006A0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimBlueprintExtension_Base) == 0x0006A8, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_Root) == 0x0006B0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_CopyPoseFromMesh) == 0x0006D0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_RigidBody_2) == 0x000850, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_RigidBody_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_RigidBody_1) == 0x0011D0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_RigidBody_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_RigidBody) == 0x001B50, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x0024D0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0025D0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x0025F0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_Trail) == 0x002620, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_Trail' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x0028C0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x0028E8, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x002930, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_LocalToComponentSpace_2) == 0x002958, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x002978, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0029A0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0029C0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x002AC0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_4) == 0x002AE0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_4' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_3) == 0x002BE8, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_3' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_2) == 0x002CF0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_1) == 0x002DF8, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_Constraint) == 0x002F00, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_Constraint' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x003008, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x003028, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_AnimDynamics_1) == 0x003050, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_AnimDynamics) == 0x003560, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x003A70, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, isWearingBackbling) == 0x003AB8, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::isWearingBackbling' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, IsWearingCape) == 0x003ABC, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::IsWearingCape' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, GravityVector) == 0x003AC0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::GravityVector' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, templePackAlpha) == 0x003AD8, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::templePackAlpha' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, IsGenericBackpackAlpha) == 0x003ADC, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::IsGenericBackpackAlpha' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, isWearingCapeBool) == 0x003AE0, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::isWearingCapeBool' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, isWearingBackpack) == 0x003AE1, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::isWearingBackpack' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, isTemplePack) == 0x003AE2, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::isTemplePack' has a wrong offset!");
static_assert(offsetof(UF_MED_Temple_FaceAcc_AnimBP_C, Gravity_Override_Params) == 0x003AE8, "Member 'UF_MED_Temple_FaceAcc_AnimBP_C::Gravity_Override_Params' has a wrong offset!");

}

