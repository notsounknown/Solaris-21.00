#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_MED_Dumpling_Man_Pork_CtrlRig

#include "Basic.hpp"

#include "RigVM_classes.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimationCore_structs.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass M_MED_Dumpling_Man_Pork_CtrlRig.RigVMMemory_Work
// 0x0258 (0x0280 - 0x0028)
class M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0030(0x0070)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_OutputParam;                   // 0x00A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_InnerRegion;                   // 0x00A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_OuterRegion;                   // 0x00B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_DriverNormal;                  // 0x00C8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_Driver2D;                      // 0x00D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_DriverCache;                   // 0x00E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_OptionalParentCache;           // 0x00F8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_WorkData;                         // 0x0108(0x0010)(Edit, EditConst, NonTransactional)
	float                                         MathFloatRemap_1_3_1_1_Result;                     // 0x0118(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatAdd_1_1_Result;                           // 0x011C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MathQuaternionToEuler_1_3_1_1_Result;              // 0x0120(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GetRelativeTransformForItem_1_3_1_1_RelativeTransform; // 0x0140(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              GetRelativeTransformForItem_1_3_1_1_CachedChild;   // 0x01A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              GetRelativeTransformForItem_1_3_1_1_CachedParent;  // 0x01B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  MathQuaternionToEuler_1_3_1_1_Value;               // 0x01C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         MathFloatAdd_1_1_A;                                // 0x01E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_1_WorkData;                       // 0x01E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_1_1_1_WorkData;                   // 0x01F8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         SphericalPoseReader_1_OutputParam;                 // 0x0208(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_InnerRegion;                 // 0x0210(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FSphericalRegion>               SphericalPoseReader_1_OuterRegion;                 // 0x0220(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_DriverNormal;                // 0x0230(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVector>                        SphericalPoseReader_1_Driver2D;                    // 0x0240(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_DriverCache;                 // 0x0250(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              SphericalPoseReader_1_OptionalParentCache;         // 0x0260(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> ModifyTransforms_1_1_WorkData;                     // 0x0270(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass M_MED_Dumpling_Man_Pork_CtrlRig.RigVMMemory_Work", true>();
	}
	static class M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work>();
	}
};
static_assert(alignof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work) == 0x000010, "Wrong alignment on M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work");
static_assert(sizeof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work) == 0x000280, "Wrong size on M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, ExecuteContext_) == 0x000030, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OutputParam) == 0x0000A0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OutputParam' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_InnerRegion) == 0x0000A8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_InnerRegion' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OuterRegion) == 0x0000B8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OuterRegion' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_DriverNormal) == 0x0000C8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_DriverNormal' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_Driver2D) == 0x0000D8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_Driver2D' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_DriverCache) == 0x0000E8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_DriverCache' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_OptionalParentCache) == 0x0000F8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, ModifyTransforms_WorkData) == 0x000108, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::ModifyTransforms_WorkData' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, MathFloatRemap_1_3_1_1_Result) == 0x000118, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::MathFloatRemap_1_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, MathFloatAdd_1_1_Result) == 0x00011C, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::MathFloatAdd_1_1_Result' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, MathQuaternionToEuler_1_3_1_1_Result) == 0x000120, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::MathQuaternionToEuler_1_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, GetRelativeTransformForItem_1_3_1_1_RelativeTransform) == 0x000140, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::GetRelativeTransformForItem_1_3_1_1_RelativeTransform' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, GetRelativeTransformForItem_1_3_1_1_CachedChild) == 0x0001A0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::GetRelativeTransformForItem_1_3_1_1_CachedChild' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, GetRelativeTransformForItem_1_3_1_1_CachedParent) == 0x0001B0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::GetRelativeTransformForItem_1_3_1_1_CachedParent' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, MathQuaternionToEuler_1_3_1_1_Value) == 0x0001C0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::MathQuaternionToEuler_1_3_1_1_Value' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, MathFloatAdd_1_1_A) == 0x0001E0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::MathFloatAdd_1_1_A' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, ModifyTransforms_1_WorkData) == 0x0001E8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::ModifyTransforms_1_WorkData' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, ModifyTransforms_1_1_1_WorkData) == 0x0001F8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::ModifyTransforms_1_1_1_WorkData' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OutputParam) == 0x000208, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OutputParam' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_InnerRegion) == 0x000210, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_InnerRegion' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OuterRegion) == 0x000220, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OuterRegion' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_DriverNormal) == 0x000230, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_DriverNormal' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_Driver2D) == 0x000240, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_Driver2D' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_DriverCache) == 0x000250, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_DriverCache' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, SphericalPoseReader_1_OptionalParentCache) == 0x000260, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::SphericalPoseReader_1_OptionalParentCache' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work, ModifyTransforms_1_1_WorkData) == 0x000270, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Work::ModifyTransforms_1_1_WorkData' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass M_MED_Dumpling_Man_Pork_CtrlRig.RigVMMemory_Literal
// 0x0140 (0x0168 - 0x0028)
class M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         SphericalPoseReader_DriverItem__Const;             // 0x0028(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_DriverAxis__Const;             // 0x0030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_RotationOffset__Const;         // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalPoseReader_ActiveRegionSize__Const;       // 0x0060(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_ActiveRegionScaleFactors__Const; // 0x0064(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         SphericalPoseReader_FalloffSize__Const;            // 0x0074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_FalloffRegionScaleFactors__Const; // 0x0078(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         SphericalPoseReader_FlipWidthScaling__Const : 1;   // 0x0088(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         SphericalPoseReader_OptionalParentItem__Const;     // 0x008C(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSphericalPoseReaderDebugSettings      SphericalPoseReader_Debug__Const;                  // 0x0094(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_ItemToModify__Const;              // 0x00A8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         ModifyTransforms_WeightMinimum__Const;             // 0x00B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ModifyTransforms_WeightMaximum__Const;             // 0x00BC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EControlRigModifyBoneMode                     ModifyTransforms_Mode__Const;                      // 0x00C0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_ItemToModify__Const;            // 0x00C8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         GetRelativeTransformForItem_1_3_1_1_Parent__Const; // 0x00D8(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EEulerRotationOrder                           MathQuaternionToEuler_1_3_1_1_RotationOrder__Const; // 0x00E0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MathFloatRemap_1_3_1_1_SourceMinimum__Const;       // 0x00E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MathFloatRemap_1_3_1_1_SourceMaximum__Const;       // 0x00E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         MathFloatRemap_1_3_1_1_bClamp__Const : 1;          // 0x00EC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_1_1_ItemToModify__Const;        // 0x00F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         SphericalPoseReader_1_DriverItem__Const;           // 0x0100(0x0008)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_1_DriverAxis__Const;           // 0x0108(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SphericalPoseReader_1_RotationOffset__Const;       // 0x0120(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRegionScaleFactors                    SphericalPoseReader_1_ActiveRegionScaleFactors__Const; // 0x0138(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FSphericalPoseReaderDebugSettings      SphericalPoseReader_1_Debug__Const;                // 0x0148(0x0010)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> ModifyTransforms_1_1_ItemToModify__Const;          // 0x0158(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass M_MED_Dumpling_Man_Pork_CtrlRig.RigVMMemory_Literal", true>();
	}
	static class M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal>();
	}
};
static_assert(alignof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal) == 0x000008, "Wrong alignment on M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal");
static_assert(sizeof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal) == 0x000168, "Wrong size on M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_DriverItem__Const) == 0x000028, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_DriverItem__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_DriverAxis__Const) == 0x000030, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_DriverAxis__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_RotationOffset__Const) == 0x000048, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_ActiveRegionSize__Const) == 0x000060, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_ActiveRegionSize__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_ActiveRegionScaleFactors__Const) == 0x000064, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_ActiveRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_FalloffSize__Const) == 0x000074, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_FalloffSize__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_FalloffRegionScaleFactors__Const) == 0x000078, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_FalloffRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_OptionalParentItem__Const) == 0x00008C, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_OptionalParentItem__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_Debug__Const) == 0x000094, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_Debug__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, ModifyTransforms_ItemToModify__Const) == 0x0000A8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::ModifyTransforms_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, ModifyTransforms_WeightMinimum__Const) == 0x0000B8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::ModifyTransforms_WeightMinimum__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, ModifyTransforms_WeightMaximum__Const) == 0x0000BC, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::ModifyTransforms_WeightMaximum__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, ModifyTransforms_Mode__Const) == 0x0000C0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::ModifyTransforms_Mode__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, ModifyTransforms_1_ItemToModify__Const) == 0x0000C8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::ModifyTransforms_1_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, GetRelativeTransformForItem_1_3_1_1_Parent__Const) == 0x0000D8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::GetRelativeTransformForItem_1_3_1_1_Parent__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, MathQuaternionToEuler_1_3_1_1_RotationOrder__Const) == 0x0000E0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::MathQuaternionToEuler_1_3_1_1_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, MathFloatRemap_1_3_1_1_SourceMinimum__Const) == 0x0000E4, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::MathFloatRemap_1_3_1_1_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, MathFloatRemap_1_3_1_1_SourceMaximum__Const) == 0x0000E8, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::MathFloatRemap_1_3_1_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, ModifyTransforms_1_1_1_ItemToModify__Const) == 0x0000F0, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::ModifyTransforms_1_1_1_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_DriverItem__Const) == 0x000100, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_DriverItem__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_DriverAxis__Const) == 0x000108, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_DriverAxis__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_RotationOffset__Const) == 0x000120, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_RotationOffset__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_ActiveRegionScaleFactors__Const) == 0x000138, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_ActiveRegionScaleFactors__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, SphericalPoseReader_1_Debug__Const) == 0x000148, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::SphericalPoseReader_1_Debug__Const' has a wrong offset!");
static_assert(offsetof(M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal, ModifyTransforms_1_1_ItemToModify__Const) == 0x000158, "Member 'M_MED_Dumpling_Man_Pork_CtrlRig::URigVMMemory_Literal::ModifyTransforms_1_1_ItemToModify__Const' has a wrong offset!");

// ControlRigBlueprintGeneratedClass M_MED_Dumpling_Man_Pork_CtrlRig.M_MED_Dumpling_Man_Pork_CtrlRig_C
// 0x0000 (0x0490 - 0x0490)
class UM_MED_Dumpling_Man_Pork_CtrlRig_C final : public UControlRig
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_MED_Dumpling_Man_Pork_CtrlRig_C">();
	}
	static class UM_MED_Dumpling_Man_Pork_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_MED_Dumpling_Man_Pork_CtrlRig_C>();
	}
};
static_assert(alignof(UM_MED_Dumpling_Man_Pork_CtrlRig_C) == 0x000010, "Wrong alignment on UM_MED_Dumpling_Man_Pork_CtrlRig_C");
static_assert(sizeof(UM_MED_Dumpling_Man_Pork_CtrlRig_C) == 0x000490, "Wrong size on UM_MED_Dumpling_Man_Pork_CtrlRig_C");

}

