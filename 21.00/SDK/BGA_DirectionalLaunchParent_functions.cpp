#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_DirectionalLaunchParent

#include "Basic.hpp"

#include "BGA_DirectionalLaunchParent_classes.hpp"
#include "BGA_DirectionalLaunchParent_parameters.hpp"


namespace SDK
{

// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.ExecuteUbergraph_BGA_DirectionalLaunchParent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_DirectionalLaunchParent_C::ExecuteUbergraph_BGA_DirectionalLaunchParent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "ExecuteUbergraph_BGA_DirectionalLaunchParent");

	Params::BGA_DirectionalLaunchParent_C_ExecuteUbergraph_BGA_DirectionalLaunchParent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.Get VehicleCenterOfMassLocationAndMassValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IFortVehicleInterface>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MassValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_DirectionalLaunchParent_C::Get_VehicleCenterOfMassLocationAndMassValue(TScriptInterface<class IFortVehicleInterface> Target, struct FVector* Location, float* MassValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "Get VehicleCenterOfMassLocationAndMassValue");

	Params::BGA_DirectionalLaunchParent_C_Get_VehicleCenterOfMassLocationAndMassValue Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (MassValue != nullptr)
		*MassValue = Parms.MassValue;
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.IsHardEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABGA_DirectionalLaunchParent_C::IsHardEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "IsHardEnabled");

	Params::BGA_DirectionalLaunchParent_C_IsHardEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.IsPlayerDeployEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABGA_DirectionalLaunchParent_C::IsPlayerDeployEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "IsPlayerDeployEnabled");

	Params::BGA_DirectionalLaunchParent_C_IsPlayerDeployEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.IsSoftEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABGA_DirectionalLaunchParent_C::IsSoftEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "IsSoftEnabled");

	Params::BGA_DirectionalLaunchParent_C_IsSoftEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.JustPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPawn*                        AsFort_Pawn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_DirectionalLaunchParent_C::JustPlayer(class AActor* InActor, class AFortPawn** AsFort_Pawn, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "JustPlayer");

	Params::BGA_DirectionalLaunchParent_C_JustPlayer Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);

	if (AsFort_Pawn != nullptr)
		*AsFort_Pawn = Parms.AsFort_Pawn;

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.LauncherEnabled
// (BlueprintCallable, BlueprintEvent)

void ABGA_DirectionalLaunchParent_C::LauncherEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "LauncherEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.OnReady_BFB404DE4A75178049271E803AA282E6
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortGameStateAthena*             GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortPlaylist*                    Playlist                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            PlaylistContextTags                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABGA_DirectionalLaunchParent_C::OnReady_BFB404DE4A75178049271E803AA282E6(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "OnReady_BFB404DE4A75178049271E803AA282E6");

	Params::BGA_DirectionalLaunchParent_C_OnReady_BFB404DE4A75178049271E803AA282E6 Parms{};

	Parms.GameState = GameState;
	Parms.Playlist = Playlist;
	Parms.PlaylistContextTags = std::move(PlaylistContextTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.PlayerInVehicleOrJustVehicle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortAthenaVehicle*               AsFort_Athena_Vehicle                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_DirectionalLaunchParent_C::PlayerInVehicleOrJustVehicle(class AActor* InActor, bool* Valid, class AFortAthenaVehicle** AsFort_Athena_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "PlayerInVehicleOrJustVehicle");

	Params::BGA_DirectionalLaunchParent_C_PlayerInVehicleOrJustVehicle Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (AsFort_Athena_Vehicle != nullptr)
		*AsFort_Athena_Vehicle = Parms.AsFort_Athena_Vehicle;
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.PlayerLaunched
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_DirectionalLaunchParent_C::PlayerLaunched(class AFortPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "PlayerLaunched");

	Params::BGA_DirectionalLaunchParent_C_PlayerLaunched Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_DirectionalLaunchParent_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "ReceiveActorBeginOverlap");

	Params::BGA_DirectionalLaunchParent_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABGA_DirectionalLaunchParent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.SoftDeactivation
// (BlueprintCallable, BlueprintEvent)

void ABGA_DirectionalLaunchParent_C::SoftDeactivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "SoftDeactivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABGA_DirectionalLaunchParent_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_DirectionalLaunchParent.BGA_DirectionalLaunchParent_C.VehicleLaunched
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortAthenaVehicle*               Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_DirectionalLaunchParent_C::VehicleLaunched(class AFortAthenaVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_DirectionalLaunchParent_C", "VehicleLaunched");

	Params::BGA_DirectionalLaunchParent_C_VehicleLaunched Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}

}

