#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAnimationBPFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UFortAnimationBPFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void WindGustGeneratorFunction(float DeltaTime, const struct FWindGustSettingStruct& GustSettings, const struct FWindGustLocalSettingStruct& ClothGustLocalSettings, class UObject* __WorldContext, float* GustStrength___WindVelocity, struct FWindGustLocalSettingStruct* ClothGustLocalSettingsOut);
	static void Wind_Gust_Control_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, float DeltaTime, float GameTimeinSeconds, class FName JointName, const struct FWindGustSettingStruct& WindGustSettings, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, struct FVector* GustStrengthWindVelocity_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettingsOut);
	static void Set_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UAnimMontage* Montage, float StartTime, class UObject* __WorldContext);
	static void Scale_Joint_Rotation_Function(const struct FRotator& Scale, class FName TargetBone, class FName ReferenceBone, class USkinnedMeshComponent* SkelMeshComponent, class UObject* __WorldContext, struct FRotator* FinalRotation, struct FRotator* OriginalRotation);
	static void RandomRotatorFunction(float GameTimeinSeconds, float PerlinScale, const struct FRotator& Frequency, const struct FRotator& Amplitude, const struct FRotator& Offset, float TimeOffset, class UObject* __WorldContext, struct FRotator* RandomRotator);
	static void Random_Vector_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class UMeshComponent* SkelMeshComponent, class FName JointName, float GameTimeinSeconds, float TimeOffset, float PerlinScale, const struct FVector& Frequency, const struct FVector& Amplitude, const struct FVector& Offset, class UObject* __WorldContext, struct FVector* VectorOut);
	static void Player_Movement_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, float X_Dot_Product, float Y_Dot_Product, float Z_Dot_Product, bool DrawDebug, float Debug_Scalar, class UObject* __WorldContext, float* X_Movement, float* Y_Movement, float* Z_Movement);
	static void Play_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UObject* __WorldContext);
	static void Gravity_Override_State_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const float GameTimeinSeconds, const struct FGravityOverrideParamsStruct& GravityOverrideParams, bool DebugDraw, class FName DebugJointName, class UObject* __WorldContext, struct FVector* GravityOverride, class FString* CurrentStateOut, struct FGravityOverrideSettingStruct* GravityOverrideSettingsOut);
	static void Gravity_Override_Setter_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class UMeshComponent* SkelMeshComponent, const struct FGravityOverrideSettingStruct& GravityOverride_Settings, float GameTimeinSeconds, class UObject* __WorldContext, struct FGravityOverrideSettingStruct* GravityOverride_Settings_Out, struct FVector* GravityOverride_Out);
	static void Gravity_Override_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const float GameTimeinSeconds, const struct FVector& WindFreq, const struct FVector& WindAmp, const struct FVector& WindOffset, const struct FVector& GoingUpGravityOverride, const struct FVector& ComingDownGravityOverride, const struct FVector& DivingDownGravityOverride, const struct FVector& ParachuteOpenedGravityOverride, const struct FVector& GroundWindFreq, const struct FVector& GroundWindAmp, const struct FVector& GroundWindOffset, const struct FVector& OnGroundGravityOverride, const struct FVector& SwimmingGravityOverride, class FName JointName, class UObject* __WorldContext, struct FVector* GravityOverride);
	static void FN_PSDPoseReaderFNC(const class FString& startJnt, const class FString& endJnt, const class FString& poseJnt, float Angle, bool Debug, class USkeletalMeshComponent* SkeletalMeshComponent, class UObject* __WorldContext, float* pose_output);
	static void DrawVectorFromJointFunction(class USceneComponent* SkelMeshComponent, class FName JointName, const struct FVector& LineEnd, const struct FVector& JointOffset, const struct FLinearColor& LineColor, float Thickness, class UObject* __WorldContext);
	static void DrawJointDebugFunction(class USceneComponent* SkelMeshComponent, const struct FVector& JointOffset, TArray<class FName>& JointName, float Scale, float Duration, float Thickness, bool DebugDraw, class UObject* __WorldContext);
	static void Debug_Cloth_Teleport_Threshold_Function(float MinDistance, float MinRotation, class USceneComponent* SkelMeshComponent, bool PrintToScreen, class FName BoneName, struct FVector& InVector, const struct FRotator& PawnDeltaRotation, float PrintToScreenDuration, class UObject* __WorldContext, float* Distance, float* Rotation);
	static void ComplexSimSpaceFunction(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, float InterpSpeedMax, float PawnSpeedMax, float RInterpErrorTolerance, float DeltaTime, bool DebugDraw, const struct FRotator& sim_space_rotation_in, bool inComponentSpaceIn, bool inComponentSpaceLastFrameIn, bool lockedOnSimSpaceIn, float InterpSpeedIn, class UObject* __WorldContext, struct FRotator* sim_space_rotation, bool* inComponentSpaceOut, bool* inComponentSpaceLastFrameOut, bool* lockedOnSimSpaceOut, float* InterpSpeedOut);
	static void Cloth_Controller_Setter_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const struct FClothSettingStruct& Cloth_Settings, class UObject* __WorldContext, struct FClothSettingStruct* Cloth_Settings_Out);
	static void Cloth_Controller_Helper_Scale_For_Player_Movement(const struct FVector& LinearVelScale, float PlayerFwdVector, float PlayerFwdVectorJump, float ClothUpX, float ClothUpZ, class UObject* __WorldContext, struct FVector* LinearVelVectorOut);
	static void Cloth_Controller_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class FString& ClothingAssetName, const struct FClothParamsStruct& Cloth_Paramaters, const struct FClothCoreSettingStruct& Cloth_Core_Settings, const struct FVector& ClothUpAxis, float OnGround_Moving_SpeedLimit, float OnGround_Moving_AngularVel_Max, float OnGround_Moving_FictitiousVel_Max, float DeltaTime, float GameTimeinSeconds, const struct FWindGustParamsStruct& WindGustsParams, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, class FString* CurrentStateOut, struct FClothSettingStruct* Cloth_Settings_Out, struct FClothCoreSettingStruct* Cloth_Core_Settings_Out, struct FWindGustSettingStruct* WindGustSettings_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettings_Out, struct FVector* GustStrength___WindVelocityOut);
	static void Clear_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UObject* __WorldContext);
	static void Adjust_Emote_Vehicle_Wheel_Rotation(class AActor* Owning_Actor, float CurrentWheelRotation, float DeltaTime, float CurrentActorRotation, class UObject* __WorldContext, float* NewActorRotation, float* NewWheelRotation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FortAnimationBPFunctionLibrary_C">();
	}
	static class UFortAnimationBPFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAnimationBPFunctionLibrary_C>();
	}
};
static_assert(alignof(UFortAnimationBPFunctionLibrary_C) == 0x000008, "Wrong alignment on UFortAnimationBPFunctionLibrary_C");
static_assert(sizeof(UFortAnimationBPFunctionLibrary_C) == 0x000028, "Wrong size on UFortAnimationBPFunctionLibrary_C");

}

