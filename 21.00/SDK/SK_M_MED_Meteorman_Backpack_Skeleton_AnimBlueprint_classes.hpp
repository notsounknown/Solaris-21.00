#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint.SK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C
// 0x0C40 (0x12D0 - 0x0690)
class USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C final : public UCustomCharacterPartAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0698(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06A0(0x0008)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x06A8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x06C8(0x0020)()
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x06F0(0x0510)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0C00(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0C20(0x0010)()
	struct FAnimNode_Trail                        AnimGraphNode_Trail;                               // 0x0C30(0x02A0)()
	struct FAnimNode_PoseByName                   AnimGraphNode_PoseByName;                          // 0x0ED0(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0F70(0x00C0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1030(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1158(0x0128)()
	class USkeletalMeshComponent*                 MeshToCopy;                                        // 0x1280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AimOffset;                                         // 0x1288(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimOffsetMultiplier;                               // 0x12A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A4[0x4];                                     // 0x12A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SpinFan;                                           // 0x12A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SpinPerSecond;                                     // 0x12C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpinX;                                             // 0x12C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_SK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C">();
	}
	static class USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C>();
	}
};
static_assert(alignof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C) == 0x000010, "Wrong alignment on USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C");
static_assert(sizeof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C) == 0x0012D0, "Wrong size on USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, UberGraphFrame) == 0x000690, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimBlueprintExtension_PropertyAccess) == 0x000698, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimBlueprintExtension_Base) == 0x0006A0, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace) == 0x0006A8, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace) == 0x0006C8, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_AnimDynamics) == 0x0006F0, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_Root) == 0x000C00, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_LocalRefPose) == 0x000C20, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_Trail) == 0x000C30, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_Trail' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_PoseByName) == 0x000ED0, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_PoseByName' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_TwoWayBlend) == 0x000F70, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_ModifyBone_1) == 0x001030, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AnimGraphNode_ModifyBone) == 0x001158, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, MeshToCopy) == 0x001280, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::MeshToCopy' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AimOffset) == 0x001288, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AimOffset' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, AimOffsetMultiplier) == 0x0012A0, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::AimOffsetMultiplier' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, SpinFan) == 0x0012A8, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::SpinFan' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, SpinPerSecond) == 0x0012C0, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::SpinPerSecond' has a wrong offset!");
static_assert(offsetof(USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C, SpinX) == 0x0012C4, "Member 'USK_M_MED_Meteorman_Backpack_Skeleton_AnimBlueprint_C::SpinX' has a wrong offset!");

}

