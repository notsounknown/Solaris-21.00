#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MountedCannon_HUD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.AddPingSlider
// 0x0040 (0x0040 - 0x0000)
struct W_MountedCannon_HUD_C_AddPingSlider final
{
public:
	struct FLinearColor                           MarkerColor;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MountedCannon_SlidingPingMarker_C*   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MountedCannon_SlidingPingMarker_C*   CallFunc_Create_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue_1;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MountedCannon_HUD_C_AddPingSlider) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_AddPingSlider");
static_assert(sizeof(W_MountedCannon_HUD_C_AddPingSlider) == 0x000040, "Wrong size on W_MountedCannon_HUD_C_AddPingSlider");
static_assert(offsetof(W_MountedCannon_HUD_C_AddPingSlider, MarkerColor) == 0x000000, "Member 'W_MountedCannon_HUD_C_AddPingSlider::MarkerColor' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_AddPingSlider, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_MountedCannon_HUD_C_AddPingSlider::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_AddPingSlider, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000018, "Member 'W_MountedCannon_HUD_C_AddPingSlider::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_AddPingSlider, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_MountedCannon_HUD_C_AddPingSlider::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_AddPingSlider, CallFunc_Create_ReturnValue_1) == 0x000028, "Member 'W_MountedCannon_HUD_C_AddPingSlider::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_AddPingSlider, CallFunc_AddChildToOverlay_ReturnValue) == 0x000030, "Member 'W_MountedCannon_HUD_C_AddPingSlider::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_AddPingSlider, CallFunc_AddChildToOverlay_ReturnValue_1) == 0x000038, "Member 'W_MountedCannon_HUD_C_AddPingSlider::CallFunc_AddChildToOverlay_ReturnValue_1' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.CleanupSliders
// 0x00A8 (0x00A8 - 0x0000)
struct W_MountedCannon_HUD_C_CleanupSliders final
{
public:
	TArray<struct FLinearColor>                   CurrentPingColors;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FLinearColor>                   MarkersNotFound;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Array_Get_Item_1;                         // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MountedCannon_SlidingPingMarker_C*   CallFunc_Map_Find_Value;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MountedCannon_SlidingPingMarker_C*   CallFunc_Map_Find_Value_1;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MountedCannon_HUD_C_CleanupSliders) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_CleanupSliders");
static_assert(sizeof(W_MountedCannon_HUD_C_CleanupSliders) == 0x0000A8, "Wrong size on W_MountedCannon_HUD_C_CleanupSliders");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CurrentPingColors) == 0x000000, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CurrentPingColors' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, MarkersNotFound) == 0x000010, "Member 'W_MountedCannon_HUD_C_CleanupSliders::MarkersNotFound' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'W_MountedCannon_HUD_C_CleanupSliders::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_MountedCannon_HUD_C_CleanupSliders::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'W_MountedCannon_HUD_C_CleanupSliders::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'W_MountedCannon_HUD_C_CleanupSliders::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Array_Get_Item_1) == 0x00006C, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Array_AddUnique_ReturnValue) == 0x00007C, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Array_Contains_ReturnValue) == 0x000080, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Map_Remove_ReturnValue) == 0x000081, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Map_Remove_ReturnValue_1) == 0x000082, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Map_Find_Value) == 0x000088, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Map_Find_Value_1) == 0x000098, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_CleanupSliders, CallFunc_Map_Find_ReturnValue_1) == 0x0000A0, "Member 'W_MountedCannon_HUD_C_CleanupSliders::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.ExecuteUbergraph_W_MountedCannon_HUD
// 0x0080 (0x0080 - 0x0000)
struct W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateZone*                   CallFunc_GetPlayerStateZone_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetVehicleActor_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMountedCannon__v2_C*                   K2Node_DynamicCast_AsMounted_Cannon__V_2;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD");
static_assert(sizeof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD) == 0x000080, "Wrong size on W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, EntryPoint) == 0x000000, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, CallFunc_GetContext_ReturnValue) == 0x000050, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, CallFunc_GetPlayerStateZone_ReturnValue) == 0x000058, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::CallFunc_GetPlayerStateZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue) == 0x000060, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, CallFunc_GetVehicleActor_ReturnValue) == 0x000068, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::CallFunc_GetVehicleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, K2Node_DynamicCast_AsMounted_Cannon__V_2) == 0x000070, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::K2Node_DynamicCast_AsMounted_Cannon__V_2' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'W_MountedCannon_HUD_C_ExecuteUbergraph_W_MountedCannon_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.GetMarkerComponent
// 0x0030 (0x0030 - 0x0000)
struct W_MountedCannon_HUD_C_GetMarkerComponent final
{
public:
	class UAthenaMarkerComponent*                 MarkerComponent_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAthena_PlayerController_C*             K2Node_DynamicCast_AsAthena_Player_Controller;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaMarkerComponent*                 CallFunc_GetMarkerComponent_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MountedCannon_HUD_C_GetMarkerComponent) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_GetMarkerComponent");
static_assert(sizeof(W_MountedCannon_HUD_C_GetMarkerComponent) == 0x000030, "Wrong size on W_MountedCannon_HUD_C_GetMarkerComponent");
static_assert(offsetof(W_MountedCannon_HUD_C_GetMarkerComponent, MarkerComponent_0) == 0x000000, "Member 'W_MountedCannon_HUD_C_GetMarkerComponent::MarkerComponent_0' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_GetMarkerComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_MountedCannon_HUD_C_GetMarkerComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_GetMarkerComponent, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_MountedCannon_HUD_C_GetMarkerComponent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_GetMarkerComponent, K2Node_DynamicCast_AsAthena_Player_Controller) == 0x000018, "Member 'W_MountedCannon_HUD_C_GetMarkerComponent::K2Node_DynamicCast_AsAthena_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_GetMarkerComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_MountedCannon_HUD_C_GetMarkerComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_GetMarkerComponent, CallFunc_GetMarkerComponent_ReturnValue) == 0x000028, "Member 'W_MountedCannon_HUD_C_GetMarkerComponent::CallFunc_GetMarkerComponent_ReturnValue' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.SetCaretColor
// 0x0024 (0x0024 - 0x0000)
struct W_MountedCannon_HUD_C_SetCaretColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
};
static_assert(alignof(W_MountedCannon_HUD_C_SetCaretColor) == 0x000004, "Wrong alignment on W_MountedCannon_HUD_C_SetCaretColor");
static_assert(sizeof(W_MountedCannon_HUD_C_SetCaretColor) == 0x000024, "Wrong size on W_MountedCannon_HUD_C_SetCaretColor");
static_assert(offsetof(W_MountedCannon_HUD_C_SetCaretColor, Color) == 0x000000, "Member 'W_MountedCannon_HUD_C_SetCaretColor::Color' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetCaretColor, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'W_MountedCannon_HUD_C_SetCaretColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.SetMarkerSliderValue
// 0x0048 (0x0048 - 0x0000)
struct W_MountedCannon_HUD_C_SetMarkerSliderValue final
{
public:
	struct FLinearColor                           PingColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Horizontal;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Vertical;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MountedCannon_SlidingPingMarker_C*   CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MountedCannon_SlidingPingMarker_C*   CallFunc_Map_Find_Value_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MountedCannon_SlidingPingMarker_C*   CallFunc_Map_Find_Value_2;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MountedCannon_HUD_C_SetMarkerSliderValue) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_SetMarkerSliderValue");
static_assert(sizeof(W_MountedCannon_HUD_C_SetMarkerSliderValue) == 0x000048, "Wrong size on W_MountedCannon_HUD_C_SetMarkerSliderValue");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, PingColor) == 0x000000, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::PingColor' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, Horizontal) == 0x000010, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::Horizontal' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, Vertical) == 0x000014, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::Vertical' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, CallFunc_Map_Find_Value) == 0x000018, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, CallFunc_Map_Find_Value_1) == 0x000028, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, CallFunc_Map_Find_ReturnValue_1) == 0x000030, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, CallFunc_Map_Find_Value_2) == 0x000038, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_SetMarkerSliderValue, CallFunc_Map_Find_ReturnValue_2) == 0x000040, "Member 'W_MountedCannon_HUD_C_SetMarkerSliderValue::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct W_MountedCannon_HUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MountedCannon_HUD_C_Tick) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_Tick");
static_assert(sizeof(W_MountedCannon_HUD_C_Tick) == 0x000048, "Wrong size on W_MountedCannon_HUD_C_Tick");
static_assert(offsetof(W_MountedCannon_HUD_C_Tick, MyGeometry) == 0x000000, "Member 'W_MountedCannon_HUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_Tick, InDeltaTime) == 0x000040, "Member 'W_MountedCannon_HUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.UpdatePingMarkers
// 0x0120 (0x0120 - 0x0000)
struct W_MountedCannon_HUD_C_UpdatePingMarkers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchDeltaToTargetAimDirection_OutYawDelta; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchDeltaToTargetAimDirection_OutPitchDelta; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
};
static_assert(alignof(W_MountedCannon_HUD_C_UpdatePingMarkers) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_UpdatePingMarkers");
static_assert(sizeof(W_MountedCannon_HUD_C_UpdatePingMarkers) == 0x000120, "Wrong size on W_MountedCannon_HUD_C_UpdatePingMarkers");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000004, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Array_Get_Item) == 0x000008, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_GetYawPitchDeltaToTargetAimDirection_OutYawDelta) == 0x000030, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_GetYawPitchDeltaToTargetAimDirection_OutYawDelta' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_GetYawPitchDeltaToTargetAimDirection_OutPitchDelta) == 0x000034, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_GetYawPitchDeltaToTargetAimDirection_OutPitchDelta' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000098, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_FClamp_ReturnValue_1) == 0x0000F0, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, K2Node_MakeArray_Array) == 0x0000F8, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MountedCannon_HUD_C_UpdatePingMarkers, CallFunc_Format_ReturnValue) == 0x000108, "Member 'W_MountedCannon_HUD_C_UpdatePingMarkers::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_MountedCannon_HUD.W_MountedCannon_HUD_C.OnPaint
// 0x0030 (0x0030 - 0x0000)
struct W_MountedCannon_HUD_C_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(W_MountedCannon_HUD_C_OnPaint) == 0x000008, "Wrong alignment on W_MountedCannon_HUD_C_OnPaint");
static_assert(sizeof(W_MountedCannon_HUD_C_OnPaint) == 0x000030, "Wrong size on W_MountedCannon_HUD_C_OnPaint");
static_assert(offsetof(W_MountedCannon_HUD_C_OnPaint, Context) == 0x000000, "Member 'W_MountedCannon_HUD_C_OnPaint::Context' has a wrong offset!");

}

