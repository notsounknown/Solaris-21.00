#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FNBR_Player_Prop

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CreativePlayerPropOriginalMaterials_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.VerifyPropVisibility
// 0x0002 (0x0002 - 0x0000)
struct FNBR_Player_Prop_C_VerifyPropVisibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_VerifyPropVisibility) == 0x000001, "Wrong alignment on FNBR_Player_Prop_C_VerifyPropVisibility");
static_assert(sizeof(FNBR_Player_Prop_C_VerifyPropVisibility) == 0x000002, "Wrong size on FNBR_Player_Prop_C_VerifyPropVisibility");
static_assert(offsetof(FNBR_Player_Prop_C_VerifyPropVisibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'FNBR_Player_Prop_C_VerifyPropVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_VerifyPropVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'FNBR_Player_Prop_C_VerifyPropVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.UpdateVisibility
// 0x0058 (0x0058 - 0x0000)
struct FNBR_Player_Prop_C_UpdateVisibility final
{
public:
	class FString                                 UpdateVisibilityName;                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCharacterBodyVisibilityForPossession_ReturnValue; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_UpdateVisibility) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_UpdateVisibility");
static_assert(sizeof(FNBR_Player_Prop_C_UpdateVisibility) == 0x000058, "Wrong size on FNBR_Player_Prop_C_UpdateVisibility");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, UpdateVisibilityName) == 0x000000, "Member 'FNBR_Player_Prop_C_UpdateVisibility::UpdateVisibilityName' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, Temp_name_Variable) == 0x000010, "Member 'FNBR_Player_Prop_C_UpdateVisibility::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_IsValid_ReturnValue_2) == 0x000016, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_IsDedicatedServer_ReturnValue) == 0x000017, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, Temp_name_Variable_1) == 0x000018, "Member 'FNBR_Player_Prop_C_UpdateVisibility::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_Conv_BoolToString_ReturnValue) == 0x000020, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, Temp_bool_Variable) == 0x000030, "Member 'FNBR_Player_Prop_C_UpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_IsValid_ReturnValue_3) == 0x000031, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_K2_SetTimer_ReturnValue) == 0x000038, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_SetCharacterBodyVisibilityForPossession_ReturnValue) == 0x000041, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_SetCharacterBodyVisibilityForPossession_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_Not_PreBool_ReturnValue_2) == 0x000042, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, K2Node_Select_Default) == 0x000044, "Member 'FNBR_Player_Prop_C_UpdateVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000048, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_UpdateVisibility, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000050, "Member 'FNBR_Player_Prop_C_UpdateVisibility::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.TransitionVFX
// 0x0001 (0x0001 - 0x0000)
struct FNBR_Player_Prop_C_TransitionVFX final
{
public:
	ETimelineDirection                            Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_TransitionVFX) == 0x000001, "Wrong alignment on FNBR_Player_Prop_C_TransitionVFX");
static_assert(sizeof(FNBR_Player_Prop_C_TransitionVFX) == 0x000001, "Wrong size on FNBR_Player_Prop_C_TransitionVFX");
static_assert(offsetof(FNBR_Player_Prop_C_TransitionVFX, Direction) == 0x000000, "Member 'FNBR_Player_Prop_C_TransitionVFX::Direction' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.SetupTimer
// 0x0004 (0x0004 - 0x0000)
struct FNBR_Player_Prop_C_SetupTimer final
{
public:
	float                                         Time_Remaining;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_SetupTimer) == 0x000004, "Wrong alignment on FNBR_Player_Prop_C_SetupTimer");
static_assert(sizeof(FNBR_Player_Prop_C_SetupTimer) == 0x000004, "Wrong size on FNBR_Player_Prop_C_SetupTimer");
static_assert(offsetof(FNBR_Player_Prop_C_SetupTimer, Time_Remaining) == 0x000000, "Member 'FNBR_Player_Prop_C_SetupTimer::Time_Remaining' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.SetScale
// 0x0020 (0x0020 - 0x0000)
struct FNBR_Player_Prop_C_SetScale final
{
public:
	struct FVector                                NewScale;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_SetScale) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_SetScale");
static_assert(sizeof(FNBR_Player_Prop_C_SetScale) == 0x000020, "Wrong size on FNBR_Player_Prop_C_SetScale");
static_assert(offsetof(FNBR_Player_Prop_C_SetScale, NewScale) == 0x000000, "Member 'FNBR_Player_Prop_C_SetScale::NewScale' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetScale, CallFunc_VSizeSquared_ReturnValue) == 0x000018, "Member 'FNBR_Player_Prop_C_SetScale::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetScale, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'FNBR_Player_Prop_C_SetScale::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetScale, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001D, "Member 'FNBR_Player_Prop_C_SetScale::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.SetPropPlaced
// 0x0490 (0x0490 - 0x0000)
struct FNBR_Player_Prop_C_SetPropPlaced final
{
public:
	bool                                          NewPlaced;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlacedYawOffset;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0030(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreativeHUDLContext*                   CallFunc_GetContext_ReturnValue;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x00F0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x01D8(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_CalcPropOffset_PropOffset;                // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x02D0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x03B0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FNBR_Player_Prop_C_SetPropPlaced) == 0x000010, "Wrong alignment on FNBR_Player_Prop_C_SetPropPlaced");
static_assert(sizeof(FNBR_Player_Prop_C_SetPropPlaced) == 0x000490, "Wrong size on FNBR_Player_Prop_C_SetPropPlaced");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, NewPlaced) == 0x000000, "Member 'FNBR_Player_Prop_C_SetPropPlaced::NewPlaced' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, PlacedYawOffset) == 0x000004, "Member 'FNBR_Player_Prop_C_SetPropPlaced::PlacedYawOffset' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000020, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_GetRelativeTransform_ReturnValue) == 0x000030, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_BreakTransform_Location) == 0x000090, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_GetContext_ReturnValue) == 0x0000D8, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0000E8, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x0000F0, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_IsServer_ReturnValue) == 0x0001D0, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x0001D8, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_CalcPropOffset_PropOffset) == 0x0002B8, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_CalcPropOffset_PropOffset' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0002D0, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetPropPlaced, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x0003B0, "Member 'FNBR_Player_Prop_C_SetPropPlaced::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.SetProp
// 0x0078 (0x0078 - 0x0000)
struct FNBR_Player_Prop_C_SetProp final
{
public:
	class AActor*                                 SelectedProp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   PlayerPawnToAttachTo;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleDuration;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcWorldSpaceBounds_Origin;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcWorldSpaceBounds_Extent;              // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_SetProp) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_SetProp");
static_assert(sizeof(FNBR_Player_Prop_C_SetProp) == 0x000078, "Wrong size on FNBR_Player_Prop_C_SetProp");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, SelectedProp) == 0x000000, "Member 'FNBR_Player_Prop_C_SetProp::SelectedProp' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, PlayerPawnToAttachTo) == 0x000008, "Member 'FNBR_Player_Prop_C_SetProp::PlayerPawnToAttachTo' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, ScaleDuration) == 0x000010, "Member 'FNBR_Player_Prop_C_SetProp::ScaleDuration' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_CalcWorldSpaceBounds_Origin) == 0x000018, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_CalcWorldSpaceBounds_Origin' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_CalcWorldSpaceBounds_Extent) == 0x000030, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_CalcWorldSpaceBounds_Extent' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_BreakVector_X) == 0x000048, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_BreakVector_Y) == 0x00004C, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_BreakVector_Z) == 0x000050, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_FClamp_ReturnValue) == 0x000054, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_FClamp_ReturnValue_1) == 0x000058, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_FClamp_ReturnValue_2) == 0x00005C, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetProp, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'FNBR_Player_Prop_C_SetProp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.SetMaxHealth
// 0x0068 (0x0068 - 0x0000)
struct FNBR_Player_Prop_C_SetMaxHealth final
{
public:
	float                                         NewMaxHealth;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           MaxHealthDataTag;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0038(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0048(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_SetMaxHealth) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_SetMaxHealth");
static_assert(sizeof(FNBR_Player_Prop_C_SetMaxHealth) == 0x000068, "Wrong size on FNBR_Player_Prop_C_SetMaxHealth");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, NewMaxHealth) == 0x000000, "Member 'FNBR_Player_Prop_C_SetMaxHealth::NewMaxHealth' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, MaxHealthDataTag) == 0x000004, "Member 'FNBR_Player_Prop_C_SetMaxHealth::MaxHealthDataTag' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000018, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000028, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x000030, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000038, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000048, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000058, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetMaxHealth, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000060, "Member 'FNBR_Player_Prop_C_SetMaxHealth::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.SetCapsuleRadius
// 0x0014 (0x0014 - 0x0000)
struct FNBR_Player_Prop_C_SetCapsuleRadius final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_SetCapsuleRadius) == 0x000004, "Wrong alignment on FNBR_Player_Prop_C_SetCapsuleRadius");
static_assert(sizeof(FNBR_Player_Prop_C_SetCapsuleRadius) == 0x000014, "Wrong size on FNBR_Player_Prop_C_SetCapsuleRadius");
static_assert(offsetof(FNBR_Player_Prop_C_SetCapsuleRadius, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'FNBR_Player_Prop_C_SetCapsuleRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetCapsuleRadius, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'FNBR_Player_Prop_C_SetCapsuleRadius::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetCapsuleRadius, CallFunc_IsValid_ReturnValue_1) == 0x000008, "Member 'FNBR_Player_Prop_C_SetCapsuleRadius::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetCapsuleRadius, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'FNBR_Player_Prop_C_SetCapsuleRadius::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetCapsuleRadius, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'FNBR_Player_Prop_C_SetCapsuleRadius::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetCapsuleRadius, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000010, "Member 'FNBR_Player_Prop_C_SetCapsuleRadius::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_SetCapsuleRadius, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'FNBR_Player_Prop_C_SetCapsuleRadius::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.ServerSetPlaced
// 0x0008 (0x0008 - 0x0000)
struct FNBR_Player_Prop_C_ServerSetPlaced final
{
public:
	bool                                          NewPlaced;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlacedYawOffset;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_ServerSetPlaced) == 0x000004, "Wrong alignment on FNBR_Player_Prop_C_ServerSetPlaced");
static_assert(sizeof(FNBR_Player_Prop_C_ServerSetPlaced) == 0x000008, "Wrong size on FNBR_Player_Prop_C_ServerSetPlaced");
static_assert(offsetof(FNBR_Player_Prop_C_ServerSetPlaced, NewPlaced) == 0x000000, "Member 'FNBR_Player_Prop_C_ServerSetPlaced::NewPlaced' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ServerSetPlaced, PlacedYawOffset) == 0x000004, "Member 'FNBR_Player_Prop_C_ServerSetPlaced::PlacedYawOffset' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.ScaleLerp
// 0x0150 (0x0150 - 0x0000)
struct FNBR_Player_Prop_C_ScaleLerp final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x0048(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_ScaleLerp) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_ScaleLerp");
static_assert(sizeof(FNBR_Player_Prop_C_ScaleLerp) == 0x000150, "Wrong size on FNBR_Player_Prop_C_ScaleLerp");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000002, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_BreakVector_X) == 0x000004, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_BreakVector_Y) == 0x000008, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_BreakVector_Z) == 0x00000C, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue) == 0x000010, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_GetUnscaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000014, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x000048, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_Add_FloatFloat_ReturnValue) == 0x000128, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00012C, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000130, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ScaleLerp, CallFunc_VLerp_ReturnValue) == 0x000138, "Member 'FNBR_Player_Prop_C_ScaleLerp::CallFunc_VLerp_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct FNBR_Player_Prop_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on FNBR_Player_Prop_C_ReceiveEndPlay");
static_assert(sizeof(FNBR_Player_Prop_C_ReceiveEndPlay) == 0x000001, "Wrong size on FNBR_Player_Prop_C_ReceiveEndPlay");
static_assert(offsetof(FNBR_Player_Prop_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'FNBR_Player_Prop_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.Play Prop Removed Sound
// 0x0028 (0x0028 - 0x0000)
struct FNBR_Player_Prop_C_Play_Prop_Removed_Sound final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_Play_Prop_Removed_Sound");
static_assert(sizeof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound) == 0x000028, "Wrong size on FNBR_Player_Prop_C_Play_Prop_Removed_Sound");
static_assert(offsetof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound, Temp_bool_Variable) == 0x000000, "Member 'FNBR_Player_Prop_C_Play_Prop_Removed_Sound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'FNBR_Player_Prop_C_Play_Prop_Removed_Sound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'FNBR_Player_Prop_C_Play_Prop_Removed_Sound::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound, CallFunc_IsDead_ReturnValue) == 0x000010, "Member 'FNBR_Player_Prop_C_Play_Prop_Removed_Sound::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound, K2Node_Select_Default) == 0x000018, "Member 'FNBR_Player_Prop_C_Play_Prop_Removed_Sound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_Play_Prop_Removed_Sound, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000020, "Member 'FNBR_Player_Prop_C_Play_Prop_Removed_Sound::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.OnRep_SoundTimeRemaining
// 0x0050 (0x0050 - 0x0000)
struct FNBR_Player_Prop_C_OnRep_SoundTimeRemaining final
{
public:
	class AFortVolume*                            PlayerVolume;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            CurrentVolume;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForActor_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreativeHUDLContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerState*                       CallFunc_GetOwningPlayerState_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            CallFunc_GetVolumeForPlayerState_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_OnRep_SoundTimeRemaining");
static_assert(sizeof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining) == 0x000050, "Wrong size on FNBR_Player_Prop_C_OnRep_SoundTimeRemaining");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, PlayerVolume) == 0x000000, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::PlayerVolume' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CurrentVolume) == 0x000008, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CurrentVolume' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000018, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_GetVolumeManager_OutIsValid) == 0x000020, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_GetVolumeForActor_ReturnValue) == 0x000028, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_GetVolumeForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_GetOwningPlayerState_ReturnValue) == 0x000038, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_GetOwningPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_GetVolumeForPlayerState_ReturnValue) == 0x000040, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_GetVolumeForPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_SoundTimeRemaining, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'FNBR_Player_Prop_C_OnRep_SoundTimeRemaining::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.OnRep_FinalScale
// 0x0008 (0x0008 - 0x0000)
struct FNBR_Player_Prop_C_OnRep_FinalScale final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_OnRep_FinalScale) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_OnRep_FinalScale");
static_assert(sizeof(FNBR_Player_Prop_C_OnRep_FinalScale) == 0x000008, "Wrong size on FNBR_Player_Prop_C_OnRep_FinalScale");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_FinalScale, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'FNBR_Player_Prop_C_OnRep_FinalScale::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.OnRep_CopiedProp
// 0x0148 (0x0148 - 0x0000)
struct FNBR_Player_Prop_C_OnRep_CopiedProp final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor_1;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0028(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0110(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesMeshComponentHaveVisibleMaterial_ReturnValue; // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_OnRep_CopiedProp) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_OnRep_CopiedProp");
static_assert(sizeof(FNBR_Player_Prop_C_OnRep_CopiedProp) == 0x000148, "Wrong size on FNBR_Player_Prop_C_OnRep_CopiedProp");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, Temp_int_Array_Index_Variable) == 0x000000, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, K2Node_DynamicCast_AsBuilding_Actor) == 0x000008, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, K2Node_DynamicCast_AsBuilding_Actor_1) == 0x000018, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::K2Node_DynamicCast_AsBuilding_Actor_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000028, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000110, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_Array_Get_Item) == 0x000128, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000130, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_DoesMeshComponentHaveVisibleMaterial_ReturnValue) == 0x000139, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_DoesMeshComponentHaveVisibleMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnRep_CopiedProp, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'FNBR_Player_Prop_C_OnRep_CopiedProp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.OnDeathServer
// 0x0148 (0x0148 - 0x0000)
struct FNBR_Player_Prop_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(FNBR_Player_Prop_C_OnDeathServer) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_OnDeathServer");
static_assert(sizeof(FNBR_Player_Prop_C_OnDeathServer) == 0x000148, "Wrong size on FNBR_Player_Prop_C_OnDeathServer");
static_assert(offsetof(FNBR_Player_Prop_C_OnDeathServer, Damage) == 0x000000, "Member 'FNBR_Player_Prop_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnDeathServer, DamageTags) == 0x000008, "Member 'FNBR_Player_Prop_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnDeathServer, Momentum) == 0x000028, "Member 'FNBR_Player_Prop_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnDeathServer, HitInfo) == 0x000040, "Member 'FNBR_Player_Prop_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnDeathServer, InstigatedBy) == 0x000120, "Member 'FNBR_Player_Prop_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnDeathServer, DamageCauser) == 0x000128, "Member 'FNBR_Player_Prop_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_OnDeathServer, EffectContext) == 0x000130, "Member 'FNBR_Player_Prop_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.MulticastSetStaticMesh
// 0x0028 (0x0028 - 0x0000)
struct FNBR_Player_Prop_C_MulticastSetStaticMesh final
{
public:
	class APlayerPawn_Athena_C*                   PlayerPawnToAttachTo;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleDuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BoundsExtent_0;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_MulticastSetStaticMesh) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_MulticastSetStaticMesh");
static_assert(sizeof(FNBR_Player_Prop_C_MulticastSetStaticMesh) == 0x000028, "Wrong size on FNBR_Player_Prop_C_MulticastSetStaticMesh");
static_assert(offsetof(FNBR_Player_Prop_C_MulticastSetStaticMesh, PlayerPawnToAttachTo) == 0x000000, "Member 'FNBR_Player_Prop_C_MulticastSetStaticMesh::PlayerPawnToAttachTo' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_MulticastSetStaticMesh, ScaleDuration) == 0x000008, "Member 'FNBR_Player_Prop_C_MulticastSetStaticMesh::ScaleDuration' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_MulticastSetStaticMesh, BoundsExtent_0) == 0x000010, "Member 'FNBR_Player_Prop_C_MulticastSetStaticMesh::BoundsExtent_0' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.InitializeMIDs
// 0x0118 (0x0118 - 0x0000)
struct FNBR_Player_Prop_C_InitializeMIDs final
{
public:
	class UMaterialInterface*                     L_OriginalMaterial;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         l_currentMaterialIndex;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   L_CurrentComponent;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              CallFunc_GetBaseMaterial_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterial>               CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic_1;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCreativePlayerPropOriginalMaterials   K2Node_MakeStruct_CreativePlayerPropOriginalMaterials; // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x00E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_InitializeMIDs) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_InitializeMIDs");
static_assert(sizeof(FNBR_Player_Prop_C_InitializeMIDs) == 0x000118, "Wrong size on FNBR_Player_Prop_C_InitializeMIDs");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, L_OriginalMaterial) == 0x000000, "Member 'FNBR_Player_Prop_C_InitializeMIDs::L_OriginalMaterial' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, l_currentMaterialIndex) == 0x000008, "Member 'FNBR_Player_Prop_C_InitializeMIDs::l_currentMaterialIndex' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, L_CurrentComponent) == 0x000010, "Member 'FNBR_Player_Prop_C_InitializeMIDs::L_CurrentComponent' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, Temp_int_Array_Index_Variable) == 0x000018, "Member 'FNBR_Player_Prop_C_InitializeMIDs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'FNBR_Player_Prop_C_InitializeMIDs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'FNBR_Player_Prop_C_InitializeMIDs::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_GetBaseMaterial_ReturnValue) == 0x000028, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_GetBaseMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000030, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000060, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000068, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_GetMaterial_ReturnValue) == 0x000070, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000078, "Member 'FNBR_Player_Prop_C_InitializeMIDs::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'FNBR_Player_Prop_C_InitializeMIDs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, K2Node_DynamicCast_AsMaterial_Instance_Dynamic_1) == 0x000088, "Member 'FNBR_Player_Prop_C_InitializeMIDs::K2Node_DynamicCast_AsMaterial_Instance_Dynamic_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'FNBR_Player_Prop_C_InitializeMIDs::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, K2Node_MakeStruct_CreativePlayerPropOriginalMaterials) == 0x000098, "Member 'FNBR_Player_Prop_C_InitializeMIDs::K2Node_MakeStruct_CreativePlayerPropOriginalMaterials' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0000B0, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B8, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000BC, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_Contains_ReturnValue) == 0x0000C0, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'FNBR_Player_Prop_C_InitializeMIDs::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0000C8, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_GetMaterials_ReturnValue) == 0x0000E8, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Array_Length_ReturnValue_1) == 0x00010C, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_InitializeMIDs, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'FNBR_Player_Prop_C_InitializeMIDs::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.GetRelativePropSizeForHintSoundTiming
// 0x0014 (0x0014 - 0x0000)
struct FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming final
{
public:
	float                                         PropVolume;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RelativeSize;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RelativePropSize;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming) == 0x000004, "Wrong alignment on FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming");
static_assert(sizeof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming) == 0x000014, "Wrong size on FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, PropVolume) == 0x000000, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::PropVolume' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, RelativeSize) == 0x000004, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::RelativeSize' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, RelativePropSize) == 0x000008, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::RelativePropSize' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000D, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00000E, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000F, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000010, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000011, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHintSoundTiming::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.GetRelativePropSizeForHealthScaling
// 0x0010 (0x0010 - 0x0000)
struct FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling final
{
public:
	float                                         PropVolume;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RelativeSize;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RelativePropSize;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling) == 0x000004, "Wrong alignment on FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling");
static_assert(sizeof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling) == 0x000010, "Wrong size on FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling, PropVolume) == 0x000000, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling::PropVolume' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling, RelativeSize) == 0x000004, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling::RelativeSize' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling, RelativePropSize) == 0x000008, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling::RelativePropSize' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000D, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00000E, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000F, "Member 'FNBR_Player_Prop_C_GetRelativePropSizeForHealthScaling::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.GetPropHuntSettings
// 0x0058 (0x0058 - 0x0000)
struct FNBR_Player_Prop_C_GetPropHuntSettings final
{
public:
	class ABP_PropPossessorConfigProp_C*          Settings;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exists;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForPlayerState_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMinigame_PlayerCreated_C*              K2Node_DynamicCast_AsMinigame_Player_Created;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PropPossessorConfigProp_C*          K2Node_DynamicCast_AsBP_Prop_Possessor_Config_Prop; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_GetPropHuntSettings) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_GetPropHuntSettings");
static_assert(sizeof(FNBR_Player_Prop_C_GetPropHuntSettings) == 0x000058, "Wrong size on FNBR_Player_Prop_C_GetPropHuntSettings");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, Settings) == 0x000000, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::Settings' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, Exists) == 0x000008, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::Exists' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, CallFunc_GetInstigatorController_ReturnValue) == 0x000010, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000018, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, CallFunc_GetVolumeManager_OutIsValid) == 0x000020, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, CallFunc_GetVolumeForPlayerState_ReturnValue) == 0x000028, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::CallFunc_GetVolumeForPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000030, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, K2Node_DynamicCast_AsMinigame_Player_Created) == 0x000038, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::K2Node_DynamicCast_AsMinigame_Player_Created' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, K2Node_DynamicCast_AsBP_Prop_Possessor_Config_Prop) == 0x000048, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::K2Node_DynamicCast_AsBP_Prop_Possessor_Config_Prop' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_GetPropHuntSettings, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'FNBR_Player_Prop_C_GetPropHuntSettings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.FinishScaleLerp
// 0x00B0 (0x00B0 - 0x0000)
struct FNBR_Player_Prop_C_FinishScaleLerp final
{
public:
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0060)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(FNBR_Player_Prop_C_FinishScaleLerp) == 0x000010, "Wrong alignment on FNBR_Player_Prop_C_FinishScaleLerp");
static_assert(sizeof(FNBR_Player_Prop_C_FinishScaleLerp) == 0x0000B0, "Wrong size on FNBR_Player_Prop_C_FinishScaleLerp");
static_assert(offsetof(FNBR_Player_Prop_C_FinishScaleLerp, CallFunc_BreakTransform_Location) == 0x000000, "Member 'FNBR_Player_Prop_C_FinishScaleLerp::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_FinishScaleLerp, CallFunc_BreakTransform_Rotation) == 0x000018, "Member 'FNBR_Player_Prop_C_FinishScaleLerp::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_FinishScaleLerp, CallFunc_BreakTransform_Scale) == 0x000030, "Member 'FNBR_Player_Prop_C_FinishScaleLerp::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_FinishScaleLerp, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000048, "Member 'FNBR_Player_Prop_C_FinishScaleLerp::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_FinishScaleLerp, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'FNBR_Player_Prop_C_FinishScaleLerp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.ExecuteUbergraph_FNBR_Player_Prop
// 0x06B8 (0x06B8 - 0x0000)
struct FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0040(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0078(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0168(0x0018)()
	class APlayerPawn_Athena_C*                   K2Node_CustomEvent_PlayerPawnToAttachTo;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ScaleDuration;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_BoundsExtent;                   // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleSize_OutRadius;         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleSize_OutHalfHeight;     // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewPlaced;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_PlacedYawOffset;                // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0230(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_CalcPropOffset_PropOffset;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x0328(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForPlayerState_ReturnValue;      // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            K2Node_CustomEvent_Direction;                      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameExec                             CallFunc_K2_IsInProgress_OutExec;                  // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRemaining_ReturnValue;             // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0448(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue; // 0x0458(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_Remaining;                 // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x3];                                      // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0488(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0498(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerController*>          Temp_object_Variable;                              // 0x04B0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x04C0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x04D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFortTeamAffiliation>                  K2Node_MakeArray_Array;                            // 0x04E0(0x0010)(ReferenceParm)
	class ABP_PropPossessorConfigProp_C*          CallFunc_GetPropHuntSettings_Settings;             // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPropHuntSettings_Exists;               // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0500(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x05E0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ED[0x3];                                      // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCreativePlayerPropOriginalMaterials   CallFunc_Array_Get_Item_1;                         // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0608(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0618(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_622[0x2];                                      // 0x0622(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0644(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_645[0x3];                                      // 0x0645(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0648(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0658(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0668(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0678(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x068B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68D[0x3];                                      // 0x068D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue_1;       // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0698(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x06A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x06B0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop");
static_assert(sizeof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop) == 0x0006B8, "Wrong size on FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, EntryPoint) == 0x000000, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::EntryPoint' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000D, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_int_Array_Index_Variable) == 0x000018, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000024, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetInstigator_ReturnValue) == 0x000028, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000030, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_Damage) == 0x00003C, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_DamageTags) == 0x000040, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_Momentum) == 0x000060, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_HitInfo) == 0x000078, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_InstigatedBy) == 0x000158, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_DamageCauser) == 0x000160, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_EffectContext) == 0x000168, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CustomEvent_PlayerPawnToAttachTo) == 0x000180, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CustomEvent_PlayerPawnToAttachTo' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CustomEvent_ScaleDuration) == 0x000188, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CustomEvent_ScaleDuration' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CustomEvent_BoundsExtent) == 0x000190, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CustomEvent_BoundsExtent' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetActorScale3D_ReturnValue) == 0x0001A8, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue_1) == 0x0001C0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetActorScale3D_ReturnValue_1) == 0x0001C8, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001E0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetUnscaledCapsuleSize_OutRadius) == 0x0001F8, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetUnscaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetUnscaledCapsuleSize_OutHalfHeight) == 0x0001FC, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetUnscaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsServer_ReturnValue) == 0x000200, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsServer_ReturnValue_1) == 0x000201, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_Event_EndPlayReason) == 0x000202, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsServer_ReturnValue_2) == 0x000203, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000208, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CustomEvent_NewPlaced) == 0x000220, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CustomEvent_NewPlaced' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CustomEvent_PlacedYawOffset) == 0x000224, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CustomEvent_PlacedYawOffset' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_int_Array_Index_Variable_1) == 0x000228, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000230, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_CalcPropOffset_PropOffset) == 0x000310, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_CalcPropOffset_PropOffset' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x000328, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsServer_ReturnValue_3) == 0x000408, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000410, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetVolumeManager_OutIsValid) == 0x000418, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_SwitchEnum_CmpSuccess) == 0x000419, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetVolumeForPlayerState_ReturnValue) == 0x000420, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetVolumeForPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000428, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CustomEvent_Direction) == 0x000430, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_IsInProgress_OutExec) == 0x000431, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_IsInProgress_OutExec' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_SwitchEnum_CmpSuccess_1) == 0x000432, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_SwitchEnum_CmpSuccess_2) == 0x000433, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetTimeRemaining_ReturnValue) == 0x000434, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue_2) == 0x000438, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00043C, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000440, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Array_Length_ReturnValue) == 0x000444, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CreateDelegate_OutputDelegate) == 0x000448, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Less_IntInt_ReturnValue) == 0x000454, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue) == 0x000458, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_int_Array_Index_Variable_2) == 0x000460, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Array_Get_Item) == 0x000468, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CustomEvent_Time_Remaining) == 0x000470, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CustomEvent_Time_Remaining' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000474, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Less_FloatFloat_ReturnValue) == 0x000478, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_BreakVector_X) == 0x00047C, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_BreakVector_Y) == 0x000480, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_BreakVector_Z) == 0x000484, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CreateDelegate_OutputDelegate_1) == 0x000488, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000494, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000498, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_FMin_ReturnValue) == 0x0004A0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_FMin_ReturnValue_1) == 0x0004A4, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0004A8, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_object_Variable) == 0x0004B0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CreateDelegate_OutputDelegate_2) == 0x0004C0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetActorTeam_ReturnValue) == 0x0004CC, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0004D0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0004D8, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_MakeArray_Array) == 0x0004E0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetPropHuntSettings_Settings) == 0x0004F0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetPropHuntSettings_Settings' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetPropHuntSettings_Exists) == 0x0004F8, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetPropHuntSettings_Exists' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0004FC, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000500, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CreateDelegate_OutputDelegate_3) == 0x0005E0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0005EC, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Array_Get_Item_1) == 0x0005F0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CreateDelegate_OutputDelegate_4) == 0x000608, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000618, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue_3) == 0x000620, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue_4) == 0x000621, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Array_Length_ReturnValue_1) == 0x000624, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Less_IntInt_ReturnValue_1) == 0x000628, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Array_Get_Item_2) == 0x000630, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Array_Length_ReturnValue_2) == 0x000638, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Less_IntInt_ReturnValue_2) == 0x00063C, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, Temp_int_Variable) == 0x000640, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000644, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CreateDelegate_OutputDelegate_5) == 0x000648, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000658, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue_5) == 0x000660, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000668, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue_6) == 0x000670, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000678, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000688, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Not_PreBool_ReturnValue) == 0x000689, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_IsValid_ReturnValue_7) == 0x00068A, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x00068B, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00068C, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_Add_IntInt_ReturnValue_3) == 0x000690, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_AddLooseGameplayTags_ReturnValue_1) == 0x000694, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_AddLooseGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, K2Node_CreateDelegate_OutputDelegate_6) == 0x000698, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x0006A8, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x0006B0, "Member 'FNBR_Player_Prop_C_ExecuteUbergraph_FNBR_Player_Prop::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.End Prop Possession
// 0x0158 (0x0158 - 0x0000)
struct FNBR_Player_Prop_C_End_Prop_Possession final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleSize_OutRadius;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutHalfHeight;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleSize_OutRadius;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnscaledCapsuleSize_OutHalfHeight;     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x0070(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsWeaponHolstered_ReturnValue;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_End_Prop_Possession) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_End_Prop_Possession");
static_assert(sizeof(FNBR_Player_Prop_C_End_Prop_Possession) == 0x000158, "Wrong size on FNBR_Player_Prop_C_End_Prop_Possession");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, K2Node_DynamicCast_AsBuilding_Actor) == 0x000008, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsValid_ReturnValue_2) == 0x000012, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000020, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_GetScaledCapsuleSize_OutRadius) == 0x000024, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_GetScaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_GetScaledCapsuleSize_OutHalfHeight) == 0x000028, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_GetScaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_GetUnscaledCapsuleSize_OutRadius) == 0x000034, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_GetUnscaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_GetUnscaledCapsuleSize_OutHalfHeight) == 0x000038, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_GetUnscaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_FMax_ReturnValue) == 0x00003C, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000040, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000044, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_FMax_ReturnValue_1) == 0x00004C, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x000070, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsWeaponHolstered_ReturnValue) == 0x000150, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsWeaponHolstered_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsValid_ReturnValue_3) == 0x000151, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_Not_PreBool_ReturnValue) == 0x000152, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsValid_ReturnValue_4) == 0x000153, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsValid_ReturnValue_5) == 0x000154, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_End_Prop_Possession, CallFunc_IsValid_ReturnValue_6) == 0x000155, "Member 'FNBR_Player_Prop_C_End_Prop_Possession::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.DoPawnRelatedInitialization
// 0x0005 (0x0005 - 0x0000)
struct FNBR_Player_Prop_C_DoPawnRelatedInitialization final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_DoPawnRelatedInitialization) == 0x000001, "Wrong alignment on FNBR_Player_Prop_C_DoPawnRelatedInitialization");
static_assert(sizeof(FNBR_Player_Prop_C_DoPawnRelatedInitialization) == 0x000005, "Wrong size on FNBR_Player_Prop_C_DoPawnRelatedInitialization");
static_assert(offsetof(FNBR_Player_Prop_C_DoPawnRelatedInitialization, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'FNBR_Player_Prop_C_DoPawnRelatedInitialization::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_DoPawnRelatedInitialization, CallFunc_GetActorTeam_ReturnValue) == 0x000001, "Member 'FNBR_Player_Prop_C_DoPawnRelatedInitialization::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_DoPawnRelatedInitialization, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000002, "Member 'FNBR_Player_Prop_C_DoPawnRelatedInitialization::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_DoPawnRelatedInitialization, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'FNBR_Player_Prop_C_DoPawnRelatedInitialization::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_DoPawnRelatedInitialization, CallFunc_IsValid_ReturnValue_2) == 0x000004, "Member 'FNBR_Player_Prop_C_DoPawnRelatedInitialization::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.CalculatePropVolume
// 0x0018 (0x0018 - 0x0000)
struct FNBR_Player_Prop_C_CalculatePropVolume final
{
public:
	float                                         MeshVolume;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_CalculatePropVolume) == 0x000004, "Wrong alignment on FNBR_Player_Prop_C_CalculatePropVolume");
static_assert(sizeof(FNBR_Player_Prop_C_CalculatePropVolume) == 0x000018, "Wrong size on FNBR_Player_Prop_C_CalculatePropVolume");
static_assert(offsetof(FNBR_Player_Prop_C_CalculatePropVolume, MeshVolume) == 0x000000, "Member 'FNBR_Player_Prop_C_CalculatePropVolume::MeshVolume' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalculatePropVolume, CallFunc_BreakVector_X) == 0x000004, "Member 'FNBR_Player_Prop_C_CalculatePropVolume::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalculatePropVolume, CallFunc_BreakVector_Y) == 0x000008, "Member 'FNBR_Player_Prop_C_CalculatePropVolume::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalculatePropVolume, CallFunc_BreakVector_Z) == 0x00000C, "Member 'FNBR_Player_Prop_C_CalculatePropVolume::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalculatePropVolume, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'FNBR_Player_Prop_C_CalculatePropVolume::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalculatePropVolume, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'FNBR_Player_Prop_C_CalculatePropVolume::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function FNBR_Player_Prop.FNBR_Player_Prop_C.CalcPropOffset
// 0x00F8 (0x00F8 - 0x0000)
struct FNBR_Player_Prop_C_CalcPropOffset final
{
public:
	struct FVector                                PropOffset;                                        // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcWorldSpaceBounds_Origin;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcWorldSpaceBounds_Extent;              // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FNBR_Player_Prop_C_CalcPropOffset) == 0x000008, "Wrong alignment on FNBR_Player_Prop_C_CalcPropOffset");
static_assert(sizeof(FNBR_Player_Prop_C_CalcPropOffset) == 0x0000F8, "Wrong size on FNBR_Player_Prop_C_CalcPropOffset");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, PropOffset) == 0x000000, "Member 'FNBR_Player_Prop_C_CalcPropOffset::PropOffset' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_CalcWorldSpaceBounds_Origin) == 0x000018, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_CalcWorldSpaceBounds_Origin' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_CalcWorldSpaceBounds_Extent) == 0x000030, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_CalcWorldSpaceBounds_Extent' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_X) == 0x000060, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Y) == 0x000064, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Z) == 0x000068, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_X_1) == 0x000088, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Y_1) == 0x00008C, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_X_2) == 0x000094, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Y_2) == 0x000098, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Z_2) == 0x00009C, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_X_3) == 0x0000B8, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Y_3) == 0x0000BC, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_BreakVector_Z_3) == 0x0000C0, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue) == 0x0000C4, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C8, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000CC, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000D0, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_SelectFloat_ReturnValue) == 0x0000D4, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FNBR_Player_Prop_C_CalcPropOffset, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'FNBR_Player_Prop_C_CalcPropOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

