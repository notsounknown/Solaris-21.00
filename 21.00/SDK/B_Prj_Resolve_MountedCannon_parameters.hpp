#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Resolve_MountedCannon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         WaterInteractionComponent_0;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstBody;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature) == 0x000018, "Wrong size on B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature, WaterBody) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature::WaterBody' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature, WaterInteractionComponent_0) == 0x000008, "Member 'B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature::WaterInteractionComponent_0' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature, bIsFirstBody) == 0x000010, "Member 'B_Prj_Resolve_MountedCannon_C_BndEvt__B_Prj_Resolve_MountedCannon_WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature::bIsFirstBody' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature
// 0x00E0 (0x00E0 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature) == 0x0000E0, "Wrong size on B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature, ImpactResult) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature::ImpactResult' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.CalculateNewVelocity
// 0x00B8 (0x00B8 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity final
{
public:
	struct FVector                                TraceStart;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue2;                                      // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity) == 0x0000B8, "Wrong size on B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, TraceStart) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, TraceEnd) == 0x000018, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, ReturnValue) == 0x000030, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, ReturnValue2) == 0x000048, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_GetValueAtLevel_ReturnValue) == 0x000068, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000088, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_VSize_ReturnValue) == 0x00008C, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B0, "Member 'B_Prj_Resolve_MountedCannon_C_CalculateNewVelocity::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.ExecuteUbergraph_B_Prj_Resolve_MountedCannon
// 0x0630 (0x0630 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0038(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bIsOverlap;                           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateNewVelocity_ReturnValue;         // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateNewVelocity_ReturnValue2;        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldResimulateAfterBuildingHit_ReturnValue; // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobilePlatform_ReturnValue;             // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_ImpactResult;           // 0x0340(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         K2Node_Event_HitActors;                            // 0x0420(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     K2Node_Event_HitResults;                           // 0x0430(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45A[0x6];                                      // 0x045A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0478(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActor_ReturnValue;              // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57D[0x3];                                      // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0584(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0585(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_586[0x2];                                      // 0x0586(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0588(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWaterBodyActor*                    K2Node_ComponentBoundEvent_WaterBody;              // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         K2Node_ComponentBoundEvent_WaterInteractionComponent; // 0x0598(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsFirstBody;           // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation; // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal; // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition; // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastWaterSurfaceInfo_WaterDepth;       // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx;     // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastWaterSurfaceInfo_WaterVelocity;    // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0628(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon) == 0x000630, "Wrong size on B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, EntryPoint) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, Temp_bool_Variable) == 0x000021, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_HasAuthority_ReturnValue_1) == 0x000022, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_IsDedicatedServer_ReturnValue) == 0x000023, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_Event_OtherActor) == 0x000028, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_Event_OtherComp) == 0x000030, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_Event_HitResult) == 0x000038, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_Event_bIsOverlap) == 0x000118, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_Event_bIsOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Location) == 0x000128, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_PhysMat) == 0x000188, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitActor) == 0x000190, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitComponent) == 0x000198, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitBoneName) == 0x0001A0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_BoneName) == 0x0001A4, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_ElementIndex) == 0x0001AC, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_FaceIndex) == 0x0001B0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0001E8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0001E9, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Time_1) == 0x0001EC, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Distance_1) == 0x0001F0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Location_1) == 0x0001F8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000210, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_Normal_1) == 0x000228, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000240, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_PhysMat_1) == 0x000258, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitActor_1) == 0x000260, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitComponent_1) == 0x000268, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitBoneName_1) == 0x000270, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_BoneName_1) == 0x000274, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_HitItem_1) == 0x000278, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_ElementIndex_1) == 0x00027C, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_FaceIndex_1) == 0x000280, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_TraceStart_1) == 0x000288, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002A0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_CalculateNewVelocity_ReturnValue) == 0x0002B8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_CalculateNewVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_CalculateNewVelocity_ReturnValue2) == 0x0002D0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_CalculateNewVelocity_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0002D8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002E8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_AsBuilding_Actor) == 0x000300, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_bSuccess_1) == 0x000308, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000310, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_ShouldResimulateAfterBuildingHit_ReturnValue) == 0x000328, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_ShouldResimulateAfterBuildingHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_Select_Default) == 0x000330, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_IsMobilePlatform_ReturnValue) == 0x000338, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_IsMobilePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_BooleanOR_ReturnValue) == 0x000339, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_ComponentBoundEvent_ImpactResult) == 0x000340, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_ComponentBoundEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_Event_HitActors) == 0x000420, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_Event_HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_Event_HitResults) == 0x000430, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_Event_HitResults' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, Temp_int_Array_Index_Variable) == 0x000440, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_Array_Length_ReturnValue) == 0x000444, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_Array_Get_Item) == 0x000448, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000450, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_bSuccess_2) == 0x000458, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_IsValid_ReturnValue) == 0x000459, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_VLerp_ReturnValue) == 0x000460, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000478, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_IsValid_ReturnValue_1) == 0x000558, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000560, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_DynamicCast_bSuccess_3) == 0x000568, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_GetVehicleActor_ReturnValue) == 0x000570, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_GetVehicleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, Temp_int_Loop_Counter_Variable) == 0x000578, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_Less_IntInt_ReturnValue) == 0x00057C, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_Add_IntInt_ReturnValue) == 0x000580, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_IsValid_ReturnValue_2) == 0x000584, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000585, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000588, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_ComponentBoundEvent_WaterBody) == 0x000590, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_ComponentBoundEvent_WaterBody' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_ComponentBoundEvent_WaterInteractionComponent) == 0x000598, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_ComponentBoundEvent_WaterInteractionComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, K2Node_ComponentBoundEvent_bIsFirstBody) == 0x0005A0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::K2Node_ComponentBoundEvent_bIsFirstBody' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation) == 0x0005A8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal) == 0x0005C0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition) == 0x0005D8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_GetLastWaterSurfaceInfo_WaterDepth) == 0x0005F0, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_GetLastWaterSurfaceInfo_WaterDepth' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx) == 0x0005F4, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_GetLastWaterSurfaceInfo_WaterVelocity) == 0x0005F8, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_GetLastWaterSurfaceInfo_WaterVelocity' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000610, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000628, "Member 'B_Prj_Resolve_MountedCannon_C_ExecuteUbergraph_B_Prj_Resolve_MountedCannon::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.HandleProjectileStop
// 0x0018 (0x0018 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_HandleProjectileStop final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_HandleProjectileStop) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_HandleProjectileStop");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_HandleProjectileStop) == 0x000018, "Wrong size on B_Prj_Resolve_MountedCannon_C_HandleProjectileStop");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_HandleProjectileStop, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_HandleProjectileStop::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_HandleProjectileStop, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_Prj_Resolve_MountedCannon_C_HandleProjectileStop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_HandleProjectileStop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'B_Prj_Resolve_MountedCannon_C_HandleProjectileStop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.LaunchPawn
// 0x00B0 (0x00B0 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_LaunchPawn final
{
public:
	class AFortPlayerPawnAthena*                  LaunchedPawn;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_LaunchPawn) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_LaunchPawn");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_LaunchPawn) == 0x0000B0, "Wrong size on B_Prj_Resolve_MountedCannon_C_LaunchPawn");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, LaunchedPawn) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::LaunchedPawn' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_GetValueAtLevel_ReturnValue) == 0x000020, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_BreakVector_X) == 0x000088, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_BreakVector_Y) == 0x00008C, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_BreakVector_Z) == 0x000090, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_FMax_ReturnValue) == 0x000094, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_LaunchPawn, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'B_Prj_Resolve_MountedCannon_C_LaunchPawn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.OnExploded
// 0x0020 (0x0020 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_OnExploded final
{
public:
	TArray<class AActor*>                         HitActors;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FHitResult>                     HitResults;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_OnExploded) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_OnExploded");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_OnExploded) == 0x000020, "Wrong size on B_Prj_Resolve_MountedCannon_C_OnExploded");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_OnExploded, HitActors) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_OnExploded::HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_OnExploded, HitResults) == 0x000010, "Member 'B_Prj_Resolve_MountedCannon_C_OnExploded::HitResults' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.OnTouched
// 0x00F8 (0x00F8 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_OnTouched final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0010(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bIsOverlap;                                        // 0x00F0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_OnTouched) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_OnTouched");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_OnTouched) == 0x0000F8, "Wrong size on B_Prj_Resolve_MountedCannon_C_OnTouched");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_OnTouched, OtherActor) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_OnTouched::OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_OnTouched, OtherComp) == 0x000008, "Member 'B_Prj_Resolve_MountedCannon_C_OnTouched::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_OnTouched, HitResult) == 0x000010, "Member 'B_Prj_Resolve_MountedCannon_C_OnTouched::HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_OnTouched, bIsOverlap) == 0x0000F0, "Member 'B_Prj_Resolve_MountedCannon_C_OnTouched::bIsOverlap' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.PlayExplodeVFXAndSound
// 0x0250 (0x0250 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0xF];                                      // 0x01D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFN_RadialForce_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound) == 0x000010, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound) == 0x000250, "Wrong size on B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, HitResult) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::HitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E0, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E1, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_Time) == 0x0000E4, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_Distance) == 0x0000E8, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_Location) == 0x0000F0, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_ImpactPoint) == 0x000108, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_Normal) == 0x000120, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_BoneName) == 0x00016C, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_TraceStart) == 0x000180, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BreakHitResult_TraceEnd) == 0x000198, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, Temp_bool_Has_Been_Initd_Variable) == 0x0001B0, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001B1, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001B8, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, Temp_bool_IsClosed_Variable) == 0x0001D0, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000240, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound, CallFunc_FinishSpawningActor_ReturnValue) == 0x000248, "Member 'B_Prj_Resolve_MountedCannon_C_PlayExplodeVFXAndSound::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.ShouldResimulateAfterBuildingHit
// 0x0018 (0x0018 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit final
{
public:
	class ABuildingActor*                         HitBuilding;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit) == 0x000008, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit) == 0x000018, "Wrong size on B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit, HitBuilding) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit::HitBuilding' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit, ReturnValue) == 0x000008, "Member 'B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit, CallFunc_GetMaxHealth_ReturnValue) == 0x00000C, "Member 'B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'B_Prj_Resolve_MountedCannon_C_ShouldResimulateAfterBuildingHit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function B_Prj_Resolve_MountedCannon.B_Prj_Resolve_MountedCannon_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct B_Prj_Resolve_MountedCannon_C_UserConstructionScript final
{
public:
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Resolve_MountedCannon_C_UserConstructionScript) == 0x000004, "Wrong alignment on B_Prj_Resolve_MountedCannon_C_UserConstructionScript");
static_assert(sizeof(B_Prj_Resolve_MountedCannon_C_UserConstructionScript) == 0x000008, "Wrong size on B_Prj_Resolve_MountedCannon_C_UserConstructionScript");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue) == 0x000000, "Member 'B_Prj_Resolve_MountedCannon_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Resolve_MountedCannon_C_UserConstructionScript, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000004, "Member 'B_Prj_Resolve_MountedCannon_C_UserConstructionScript::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");

}

