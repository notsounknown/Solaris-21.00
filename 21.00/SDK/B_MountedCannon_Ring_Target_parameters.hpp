#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MountedCannon_Ring_Target

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_MountedCannon_Ring_Target.B_MountedCannon_Ring_Target_C.ExecuteUbergraph_B_MountedCannon_Ring_Target
// 0x0038 (0x0038 - 0x0000)
struct B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MountedCannon_PingTarget_Ring_C*     K2Node_DynamicCast_AsW_Mounted_Cannon_Ping_Target_Ring; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target) == 0x000008, "Wrong alignment on B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target");
static_assert(sizeof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target) == 0x000038, "Wrong size on B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, EntryPoint) == 0x000000, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, CallFunc_GetWidget_ReturnValue) == 0x000008, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, K2Node_DynamicCast_AsW_Mounted_Cannon_Ping_Target_Ring) == 0x000010, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::K2Node_DynamicCast_AsW_Mounted_Cannon_Ping_Target_Ring' has a wrong offset!");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, CallFunc_GetInstigatorController_ReturnValue) == 0x000020, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'B_MountedCannon_Ring_Target_C_ExecuteUbergraph_B_MountedCannon_Ring_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_MountedCannon_Ring_Target.B_MountedCannon_Ring_Target_C.SetColor
// 0x0010 (0x0010 - 0x0000)
struct B_MountedCannon_Ring_Target_C_SetColor final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MountedCannon_Ring_Target_C_SetColor) == 0x000004, "Wrong alignment on B_MountedCannon_Ring_Target_C_SetColor");
static_assert(sizeof(B_MountedCannon_Ring_Target_C_SetColor) == 0x000010, "Wrong size on B_MountedCannon_Ring_Target_C_SetColor");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_SetColor, InColor) == 0x000000, "Member 'B_MountedCannon_Ring_Target_C_SetColor::InColor' has a wrong offset!");

// Function B_MountedCannon_Ring_Target.B_MountedCannon_Ring_Target_C.SetSize
// 0x0004 (0x0004 - 0x0000)
struct B_MountedCannon_Ring_Target_C_SetSize final
{
public:
	float                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MountedCannon_Ring_Target_C_SetSize) == 0x000004, "Wrong alignment on B_MountedCannon_Ring_Target_C_SetSize");
static_assert(sizeof(B_MountedCannon_Ring_Target_C_SetSize) == 0x000004, "Wrong size on B_MountedCannon_Ring_Target_C_SetSize");
static_assert(offsetof(B_MountedCannon_Ring_Target_C_SetSize, Size) == 0x000000, "Member 'B_MountedCannon_Ring_Target_C_SetSize::Size' has a wrong offset!");

}

