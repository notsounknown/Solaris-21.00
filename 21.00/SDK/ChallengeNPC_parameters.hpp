#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeNPC

#include "Basic.hpp"

#include "CommonConversationRuntime_structs.hpp"


namespace SDK::Params
{

// Function ChallengeNPC.ChallengeNPC_C.ExecuteTaskNode
// 0x0180 (0x0180 - 0x0000)
struct ChallengeNPC_C_ExecuteTaskNode final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm)
	class AActor*                                 CallFunc_GetParticipantActorNPC_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConversationTaskResult                CallFunc_ExecuteTaskNode_ReturnValue;              // 0x00C0(0x0080)()
	class ABP_PlayerPawn_NonParticipant_C*        K2Node_DynamicCast_AsBP_Player_Pawn_Non_Participant; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetParticipantActorPlayer_ReturnValue;    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeNPC_C_ExecuteTaskNode) == 0x000008, "Wrong alignment on ChallengeNPC_C_ExecuteTaskNode");
static_assert(sizeof(ChallengeNPC_C_ExecuteTaskNode) == 0x000180, "Wrong size on ChallengeNPC_C_ExecuteTaskNode");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, Context) == 0x000000, "Member 'ChallengeNPC_C_ExecuteTaskNode::Context' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, ReturnValue) == 0x000038, "Member 'ChallengeNPC_C_ExecuteTaskNode::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, CallFunc_GetParticipantActorNPC_ReturnValue) == 0x0000B8, "Member 'ChallengeNPC_C_ExecuteTaskNode::CallFunc_GetParticipantActorNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, CallFunc_ExecuteTaskNode_ReturnValue) == 0x0000C0, "Member 'ChallengeNPC_C_ExecuteTaskNode::CallFunc_ExecuteTaskNode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, K2Node_DynamicCast_AsBP_Player_Pawn_Non_Participant) == 0x000140, "Member 'ChallengeNPC_C_ExecuteTaskNode::K2Node_DynamicCast_AsBP_Player_Pawn_Non_Participant' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'ChallengeNPC_C_ExecuteTaskNode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, CallFunc_GetParticipantActorPlayer_ReturnValue) == 0x000150, "Member 'ChallengeNPC_C_ExecuteTaskNode::CallFunc_GetParticipantActorPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000158, "Member 'ChallengeNPC_C_ExecuteTaskNode::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'ChallengeNPC_C_ExecuteTaskNode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, CallFunc_K2_GetPawn_ReturnValue) == 0x000168, "Member 'ChallengeNPC_C_ExecuteTaskNode::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000170, "Member 'ChallengeNPC_C_ExecuteTaskNode::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(ChallengeNPC_C_ExecuteTaskNode, K2Node_DynamicCast_bSuccess_2) == 0x000178, "Member 'ChallengeNPC_C_ExecuteTaskNode::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

