#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_MED_Island_Nomad_FaceAcc_AnimBP

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "F_MED_Island_Nomad_FaceAcc_AnimBP_structs.hpp"
#include "GravityOverrideParamsStruct_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass F_MED_Island_Nomad_FaceAcc_AnimBP.F_MED_Island_Nomad_FaceAcc_AnimBP_C
// 0x4CE0 (0x5370 - 0x0690)
class UF_MED_Island_Nomad_FaceAcc_AnimBP_C final : public UCustomCharacterPartAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct F_MED_Island_Nomad_FaceAcc_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0698(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_69A[0x6];                                      // 0x069A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x06A0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06A8(0x0008)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_3;                         // 0x06B0(0x0980)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x1030(0x0020)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_2;                         // 0x1050(0x0980)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x19D0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x1AF8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x1C20(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x1D48(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x1E70(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x1F98(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x1FB8(0x0128)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_4;                        // 0x20E0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_3;                        // 0x21E8(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_2;                        // 0x22F0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_1;                        // 0x23F8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x2500(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x2628(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x2750(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x2878(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x2898(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x29C0(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x29E0(0x0048)()
	uint8                                         Pad_2A28[0x8];                                     // 0x2A28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_1;                         // 0x2A30(0x0980)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x33B0(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x33D0(0x0180)(ContainsInstancedReference)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x3550(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x3570(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x3598(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x35B8(0x0128)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint;                          // 0x36E0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x37E8(0x0128)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3910(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x3938(0x0020)()
	uint8                                         Pad_3958[0x8];                                     // 0x3958(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x3960(0x0510)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x3E70(0x0020)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x3E90(0x0980)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x4810(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x4910(0x0128)()
	struct FVector                                Gravity_Override;                                  // 0x4A38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGravityOverrideParamsStruct           Gravity_Override_Params;                           // 0x4A50(0x0548)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         wearingBackpack;                                   // 0x4F98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoBackpack;                                        // 0x4F9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkinnedMeshComponent*                  Skeletal_Mesh_Component;                           // 0x4FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         head_Rot_Z;                                        // 0x4FA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAC[0x4];                                     // 0x4FAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Skeletal_Mesh_Component_0;                         // 0x4FB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 body_component;                                    // 0x4FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         head_Rot_Y;                                        // 0x4FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         backBling_Head_Rot_Z;                              // 0x4FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          backBling_Head_Rot_Y;                              // 0x4FC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC9[0x7];                                     // 0x4FC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> Target;                                            // 0x4FD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Tag_Container;                                     // 0x4FE0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          is_cat;                                            // 0x5000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          is_bird;                                           // 0x5001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5002[0x2];                                     // 0x5002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         wearing_Mask;                                      // 0x5004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        As_Fort_Player_Pawn;                               // 0x5008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          not_Wearing_Mask;                                  // 0x5010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          maskIsOn;                                          // 0x5011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5012[0x6];                                     // 0x5012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAthenaLoadout                     Loadout;                                           // 0x5018(0x0168)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         mask_index;                                        // 0x5180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         hat_index;                                         // 0x5184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         wearing_hat;                                       // 0x5188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Is_Jumping;                                        // 0x518C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                jumping_Acc_Scale_Values;                          // 0x5190(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Sky_Diving;                                     // 0x51A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A9[0x3];                                     // 0x51A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         skydive_float;                                     // 0x51AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                jumping_Acc_values_Braid;                          // 0x51B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RelaxSpeed;                                        // 0x51C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         skyDive_Fix_Alpha;                                 // 0x51CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrailAlpha;                                        // 0x51D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         parachute_timer;                                   // 0x51D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time_X;                                      // 0x51D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          wearing_backpack_Bool;                             // 0x51DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51DD[0x3];                                     // 0x51DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         wearing_deer_Mask;                                 // 0x51E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewVar_2;                                          // 0x51E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         acc_values_X;                                      // 0x51E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         acc_values_Y;                                      // 0x51EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         acc_values_Z;                                      // 0x51F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51F4[0x4];                                     // 0x51F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        As_Fort_Player_Pawn_0;                             // 0x51F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortAthenaLoadout                     Loadout_0;                                         // 0x5200(0x0168)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         wearing_Deer_Mask_ADS;                             // 0x5368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnEndJumping();
	void OnCharacterCustomizationLoaded();
	void OnBeginJumping();
	void ExecuteUbergraph_F_MED_Island_Nomad_FaceAcc_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"F_MED_Island_Nomad_FaceAcc_AnimBP_C">();
	}
	static class UF_MED_Island_Nomad_FaceAcc_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UF_MED_Island_Nomad_FaceAcc_AnimBP_C>();
	}
};
static_assert(alignof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C) == 0x000010, "Wrong alignment on UF_MED_Island_Nomad_FaceAcc_AnimBP_C");
static_assert(sizeof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C) == 0x005370, "Wrong size on UF_MED_Island_Nomad_FaceAcc_AnimBP_C");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, UberGraphFrame) == 0x000690, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, __AnimBlueprintMutables) == 0x000698, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x0006A0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimBlueprintExtension_Base) == 0x0006A8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_RigidBody_3) == 0x0006B0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_RigidBody_3' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_LocalToComponentSpace_3) == 0x001030, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_RigidBody_2) == 0x001050, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_RigidBody_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_12) == 0x0019D0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_11) == 0x001AF8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_10) == 0x001C20, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_9) == 0x001D48, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_8) == 0x001E70, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_LocalToComponentSpace_2) == 0x001F98, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_7) == 0x001FB8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_4) == 0x0020E0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_4' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_3) == 0x0021E8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_3' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_2) == 0x0022F0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_Constraint_1) == 0x0023F8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_Constraint_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_6) == 0x002500, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_5) == 0x002628, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_4) == 0x002750, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x002878, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_3) == 0x002898, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0029C0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x0029E0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_RigidBody_1) == 0x002A30, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_RigidBody_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0033B0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_CopyPoseFromMesh) == 0x0033D0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_Root) == 0x003550, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x003570, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x003598, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_2) == 0x0035B8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_Constraint) == 0x0036E0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_Constraint' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x0037E8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x003910, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x003938, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_AnimDynamics) == 0x003960, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x003E70, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_RigidBody) == 0x003E90, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x004810, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, AnimGraphNode_ModifyBone) == 0x004910, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Gravity_Override) == 0x004A38, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Gravity_Override' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Gravity_Override_Params) == 0x004A50, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Gravity_Override_Params' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, wearingBackpack) == 0x004F98, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::wearingBackpack' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, NoBackpack) == 0x004F9C, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::NoBackpack' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Skeletal_Mesh_Component) == 0x004FA0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Skeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, head_Rot_Z) == 0x004FA8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::head_Rot_Z' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Skeletal_Mesh_Component_0) == 0x004FB0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Skeletal_Mesh_Component_0' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, body_component) == 0x004FB8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::body_component' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, head_Rot_Y) == 0x004FC0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::head_Rot_Y' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, backBling_Head_Rot_Z) == 0x004FC4, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::backBling_Head_Rot_Z' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, backBling_Head_Rot_Y) == 0x004FC8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::backBling_Head_Rot_Y' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Target) == 0x004FD0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Target' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Tag_Container) == 0x004FE0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Tag_Container' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, is_cat) == 0x005000, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::is_cat' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, is_bird) == 0x005001, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::is_bird' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, wearing_Mask) == 0x005004, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::wearing_Mask' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, As_Fort_Player_Pawn) == 0x005008, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::As_Fort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, not_Wearing_Mask) == 0x005010, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::not_Wearing_Mask' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, maskIsOn) == 0x005011, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::maskIsOn' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Loadout) == 0x005018, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Loadout' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, mask_index) == 0x005180, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::mask_index' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, hat_index) == 0x005184, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::hat_index' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, wearing_hat) == 0x005188, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::wearing_hat' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Is_Jumping) == 0x00518C, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Is_Jumping' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, jumping_Acc_Scale_Values) == 0x005190, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::jumping_Acc_Scale_Values' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Is_Sky_Diving) == 0x0051A8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Is_Sky_Diving' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, skydive_float) == 0x0051AC, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::skydive_float' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, jumping_Acc_values_Braid) == 0x0051B0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::jumping_Acc_values_Braid' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, RelaxSpeed) == 0x0051C8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::RelaxSpeed' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, skyDive_Fix_Alpha) == 0x0051CC, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::skyDive_Fix_Alpha' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, TrailAlpha) == 0x0051D0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::TrailAlpha' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, parachute_timer) == 0x0051D4, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::parachute_timer' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Delta_Time_X) == 0x0051D8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, wearing_backpack_Bool) == 0x0051DC, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::wearing_backpack_Bool' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, wearing_deer_Mask) == 0x0051E0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::wearing_deer_Mask' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, NewVar_2) == 0x0051E4, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::NewVar_2' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, acc_values_X) == 0x0051E8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::acc_values_X' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, acc_values_Y) == 0x0051EC, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::acc_values_Y' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, acc_values_Z) == 0x0051F0, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::acc_values_Z' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, As_Fort_Player_Pawn_0) == 0x0051F8, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::As_Fort_Player_Pawn_0' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, Loadout_0) == 0x005200, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::Loadout_0' has a wrong offset!");
static_assert(offsetof(UF_MED_Island_Nomad_FaceAcc_AnimBP_C, wearing_Deer_Mask_ADS) == 0x005368, "Member 'UF_MED_Island_Nomad_FaceAcc_AnimBP_C::wearing_Deer_Mask_ADS' has a wrong offset!");

}

